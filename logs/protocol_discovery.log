2025-01-17 19:41:02,301 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:41:02,311 [DEBUG] aiosqlite - executing <function connect.<locals>.connector at 0x105e6b920>
2025-01-17 19:41:02,311 [DEBUG] aiosqlite - operation <function connect.<locals>.connector at 0x105e6b920> completed
2025-01-17 19:41:02,312 [DEBUG] aiosqlite - executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x11d461210>)
2025-01-17 19:41:02,312 [DEBUG] aiosqlite - operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x11d461210>) completed
2025-01-17 19:41:02,312 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443bc0>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:02,312 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443bc0>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:02,312 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443bc0>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:02,312 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443bc0>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:02,313 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443bc0>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:02,313 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443bc0>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:02,313 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443bc0>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:02,313 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443bc0>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:02,313 [DEBUG] aiosqlite - executing functools.partial(<built-in method commit of sqlite3.Connection object at 0x11d461210>)
2025-01-17 19:41:02,313 [DEBUG] aiosqlite - operation functools.partial(<built-in method commit of sqlite3.Connection object at 0x11d461210>) completed
2025-01-17 19:41:02,313 [DEBUG] aiosqlite - executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x11d443bc0>)
2025-01-17 19:41:02,313 [DEBUG] aiosqlite - operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x11d443bc0>) completed
2025-01-17 19:41:02,313 [DEBUG] aiosqlite - executing <function connect.<locals>.connector at 0x105e6b740>
2025-01-17 19:41:02,314 [DEBUG] aiosqlite - operation <function connect.<locals>.connector at 0x105e6b740> completed
2025-01-17 19:41:02,314 [DEBUG] aiosqlite - executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x11d4616c0>)
2025-01-17 19:41:02,314 [DEBUG] aiosqlite - operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x11d4616c0>) completed
2025-01-17 19:41:02,314 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443140>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:02,314 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443140>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:02,314 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443140>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:02,314 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443140>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:02,315 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443140>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:02,315 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443140>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:02,315 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443140>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:02,315 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x11d443140>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:02,315 [DEBUG] aiosqlite - executing functools.partial(<built-in method commit of sqlite3.Connection object at 0x11d4616c0>)
2025-01-17 19:41:02,315 [DEBUG] aiosqlite - operation functools.partial(<built-in method commit of sqlite3.Connection object at 0x11d4616c0>) completed
2025-01-17 19:41:02,315 [DEBUG] aiosqlite - executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x11d443140>)
2025-01-17 19:41:02,315 [DEBUG] aiosqlite - operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x11d443140>) completed
2025-01-17 19:41:13,866 [DEBUG] aiosqlite - executing functools.partial(<built-in method close of sqlite3.Connection object at 0x11d4616c0>)
2025-01-17 19:41:13,867 [DEBUG] aiosqlite - operation functools.partial(<built-in method close of sqlite3.Connection object at 0x11d4616c0>) completed
2025-01-17 19:41:14,685 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:41:14,698 [DEBUG] aiosqlite - executing <function connect.<locals>.connector at 0x10198f920>
2025-01-17 19:41:14,698 [DEBUG] aiosqlite - operation <function connect.<locals>.connector at 0x10198f920> completed
2025-01-17 19:41:14,698 [DEBUG] aiosqlite - executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x10fa61210>)
2025-01-17 19:41:14,698 [DEBUG] aiosqlite - operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x10fa61210>) completed
2025-01-17 19:41:14,698 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43bc0>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43bc0>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43bc0>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43bc0>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43bc0>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43bc0>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43bc0>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43bc0>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - executing functools.partial(<built-in method commit of sqlite3.Connection object at 0x10fa61210>)
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - operation functools.partial(<built-in method commit of sqlite3.Connection object at 0x10fa61210>) completed
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x10fa43bc0>)
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x10fa43bc0>) completed
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - executing <function connect.<locals>.connector at 0x10198f740>
2025-01-17 19:41:14,699 [DEBUG] aiosqlite - operation <function connect.<locals>.connector at 0x10198f740> completed
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x10fa616c0>)
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x10fa616c0>) completed
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43140>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43140>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43140>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43140>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43140>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43140>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43140>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x10fa43140>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - executing functools.partial(<built-in method commit of sqlite3.Connection object at 0x10fa616c0>)
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - operation functools.partial(<built-in method commit of sqlite3.Connection object at 0x10fa616c0>) completed
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x10fa43140>)
2025-01-17 19:41:14,700 [DEBUG] aiosqlite - operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x10fa43140>) completed
2025-01-17 19:41:30,269 [DEBUG] aiosqlite - executing functools.partial(<built-in method close of sqlite3.Connection object at 0x10fa616c0>)
2025-01-17 19:41:30,272 [DEBUG] aiosqlite - operation functools.partial(<built-in method close of sqlite3.Connection object at 0x10fa616c0>) completed
2025-01-17 19:41:31,220 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:41:31,230 [DEBUG] aiosqlite - executing <function connect.<locals>.connector at 0x103e6f920>
2025-01-17 19:41:31,231 [DEBUG] aiosqlite - operation <function connect.<locals>.connector at 0x103e6f920> completed
2025-01-17 19:41:31,231 [DEBUG] aiosqlite - executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x118361210>)
2025-01-17 19:41:31,231 [DEBUG] aiosqlite - operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x118361210>) completed
2025-01-17 19:41:31,231 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343bc0>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:31,231 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343bc0>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:31,231 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343bc0>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:31,232 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343bc0>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:31,232 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343bc0>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:31,232 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343bc0>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:31,232 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343bc0>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:31,232 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343bc0>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:31,232 [DEBUG] aiosqlite - executing functools.partial(<built-in method commit of sqlite3.Connection object at 0x118361210>)
2025-01-17 19:41:31,232 [DEBUG] aiosqlite - operation functools.partial(<built-in method commit of sqlite3.Connection object at 0x118361210>) completed
2025-01-17 19:41:31,232 [DEBUG] aiosqlite - executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x118343bc0>)
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x118343bc0>) completed
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - executing <function connect.<locals>.connector at 0x103e6f740>
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - operation <function connect.<locals>.connector at 0x103e6f740> completed
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x1183616c0>)
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x1183616c0>) completed
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343140>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343140>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343140>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343140>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343140>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343140>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343140>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x118343140>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - executing functools.partial(<built-in method commit of sqlite3.Connection object at 0x1183616c0>)
2025-01-17 19:41:31,233 [DEBUG] aiosqlite - operation functools.partial(<built-in method commit of sqlite3.Connection object at 0x1183616c0>) completed
2025-01-17 19:41:31,234 [DEBUG] aiosqlite - executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x118343140>)
2025-01-17 19:41:31,234 [DEBUG] aiosqlite - operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x118343140>) completed
2025-01-17 19:41:56,709 [DEBUG] aiosqlite - executing functools.partial(<built-in method close of sqlite3.Connection object at 0x1183616c0>)
2025-01-17 19:41:56,711 [DEBUG] aiosqlite - operation functools.partial(<built-in method close of sqlite3.Connection object at 0x1183616c0>) completed
2025-01-17 19:41:59,591 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:41:59,600 [DEBUG] aiosqlite - executing <function connect.<locals>.connector at 0x1068df920>
2025-01-17 19:41:59,600 [DEBUG] aiosqlite - operation <function connect.<locals>.connector at 0x1068df920> completed
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x12ff5d3f0>)
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x12ff5d3f0>) completed
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3fb40>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3fb40>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3fb40>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3fb40>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3fb40>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3fb40>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3fb40>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3fb40>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - executing functools.partial(<built-in method commit of sqlite3.Connection object at 0x12ff5d3f0>)
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - operation functools.partial(<built-in method commit of sqlite3.Connection object at 0x12ff5d3f0>) completed
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x12ff3fb40>)
2025-01-17 19:41:59,601 [DEBUG] aiosqlite - operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x12ff3fb40>) completed
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - executing <function connect.<locals>.connector at 0x1068df740>
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - operation <function connect.<locals>.connector at 0x1068df740> completed
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x12ff5d8a0>)
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x12ff5d8a0>) completed
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3f0c0>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3f0c0>, '\n                CREATE TABLE IF NOT EXISTS protocols_metadata (\n                    protocol_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT UNIQUE NOT NULL,\n                    start_time DATETIME,\n                    end_time DATETIME,\n                    user TEXT,\n                    status TEXT,\n                    data_directory TEXT,\n                    database_file TEXT,\n                    parameters TEXT,\n                    estimated_plate_reader_time DATETIME,\n                    UNIQUE(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3f0c0>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3f0c0>, '\n                CREATE TABLE IF NOT EXISTS substep_timings (\n                    timing_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    func_hash TEXT,\n                    func_name TEXT,\n                    duration REAL,\n                    caller_name TEXT,\n                    task_id TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3f0c0>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3f0c0>, '\n                CREATE TABLE IF NOT EXISTS plate_reader_usage (\n                    usage_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    protocol_name TEXT,\n                    plate_name TEXT,\n                    measurement_type TEXT,\n                    wells TEXT,\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                    FOREIGN KEY (protocol_name) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3f0c0>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', [])
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x12ff3f0c0>, '\n                CREATE TABLE IF NOT EXISTS assets (\n                    asset_int_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    asset_id TEXT UNIQUE NOT NULL,\n                    is_available BOOLEAN DEFAULT 1,\n                    locked_by_protocol TEXT,\n                    locked_by_task TEXT,\n                    lock_acquired_at DATETIME,\n                    lock_expires_at DATETIME,\n                    FOREIGN KEY (locked_by_protocol) REFERENCES protocols_metadata(protocol_name)\n                )\n            ', []) completed
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - executing functools.partial(<built-in method commit of sqlite3.Connection object at 0x12ff5d8a0>)
2025-01-17 19:41:59,602 [DEBUG] aiosqlite - operation functools.partial(<built-in method commit of sqlite3.Connection object at 0x12ff5d8a0>) completed
2025-01-17 19:41:59,603 [DEBUG] aiosqlite - executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x12ff3f0c0>)
2025-01-17 19:41:59,603 [DEBUG] aiosqlite - operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x12ff3f0c0>) completed
2025-01-17 19:42:34,214 [DEBUG] aiosqlite - executing functools.partial(<built-in method close of sqlite3.Connection object at 0x12ff5d8a0>)
2025-01-17 19:42:34,215 [DEBUG] aiosqlite - operation functools.partial(<built-in method close of sqlite3.Connection object at 0x12ff5d8a0>) completed
2025-01-17 19:42:34,952 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:42:34,952 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:42:43,600 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:42:43,600 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:45:19,302 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:45:19,302 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:45:30,399 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:45:30,399 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:46:43,775 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:46:43,775 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:47:09,878 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:47:09,878 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:47:25,975 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:47:25,975 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:48:52,167 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:48:52,167 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:48:57,022 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:48:57,022 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:49:16,947 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:49:16,947 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:49:32,386 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:49:32,386 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:49:32,407 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:49:32,407 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:49:32,408 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:49:32,408 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:49:32,409 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:49:32,415 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:49:32,419 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:49:32,419 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:49:32,419 [DEBUG] praxis.api.protocols - Created protocol_info with parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:49:32,419 [WARNING] praxis.api.protocols - 
No baseline_parameters found for Prance
2025-01-17 19:49:32,419 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:49:32,419 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:49:32,419 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:49:32,419 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:49:32,419 [INFO] praxis.api.protocols - Parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:49:32,419 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:49:43,469 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:49:43,470 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:49:43,485 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:49:43,485 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:49:43,485 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:49:43,485 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:49:43,485 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:49:43,485 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:49:43,485 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:49:43,485 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:49:43,485 [DEBUG] praxis.api.protocols - Created protocol_info with parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:49:43,485 [WARNING] praxis.api.protocols - 
No baseline_parameters found for Prance
2025-01-17 19:49:43,485 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:49:43,485 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:49:43,486 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:49:43,486 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:49:43,486 [INFO] praxis.api.protocols - Parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:49:43,486 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:49:48,406 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:49:48,406 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:49:48,419 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:49:48,419 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:49:48,419 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:49:48,419 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:49:48,419 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:49:48,419 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:49:48,419 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:49:48,419 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:49:48,419 [DEBUG] praxis.api.protocols - Created protocol_info with parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:49:48,419 [WARNING] praxis.api.protocols - 
No baseline_parameters found for Prance
2025-01-17 19:49:48,419 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:49:48,419 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:49:48,419 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:49:48,420 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:49:48,420 [INFO] praxis.api.protocols - Parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:49:48,420 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:50:10,990 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:50:10,990 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:50:11,004 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:50:11,004 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:50:11,004 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:50:11,004 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:50:11,004 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:50:11,004 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:50:11,004 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:50:11,004 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:50:11,005 [DEBUG] praxis.api.protocols - Created protocol_info with parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:50:11,005 [WARNING] praxis.api.protocols - 
No baseline_parameters found for Prance
2025-01-17 19:50:11,005 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:50:11,005 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:50:11,005 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:50:11,005 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:50:11,005 [INFO] praxis.api.protocols - Parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:50:11,005 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:51:16,276 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:51:16,276 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:51:16,289 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:51:16,289 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:51:16,289 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:51:16,289 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:51:16,289 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:51:16,289 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:51:16,290 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:51:16,290 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:51:16,290 [DEBUG] praxis.api.protocols - Created protocol_info with parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:51:16,290 [WARNING] praxis.api.protocols - 
No baseline_parameters found for Prance
2025-01-17 19:51:16,290 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:51:16,290 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:51:16,290 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:51:16,290 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:51:16,290 [INFO] praxis.api.protocols - Parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:51:16,290 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:51:42,002 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:51:42,002 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:51:42,015 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:51:42,015 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:51:42,015 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:51:42,015 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:51:42,015 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:51:42,015 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:51:42,015 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:51:42,015 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:51:42,016 [DEBUG] praxis.api.protocols - Created protocol_info with parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:51:42,016 [WARNING] praxis.api.protocols - 
No baseline_parameters found for Prance
2025-01-17 19:51:42,016 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:51:42,016 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:51:42,016 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:51:42,016 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:51:42,016 [INFO] praxis.api.protocols - Parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:51:42,016 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:52:59,984 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:52:59,984 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:52:59,998 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:52:59,998 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:52:59,998 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:52:59,998 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:52:59,998 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:52:59,998 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:52:59,999 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:52:59,999 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:52:59,999 [DEBUG] praxis.api.protocols - Created protocol_info with parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:52:59,999 [WARNING] praxis.api.protocols - 
No baseline_parameters found for Prance
2025-01-17 19:52:59,999 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:52:59,999 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:53:00,000 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:53:00,000 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:53:00,000 [INFO] praxis.api.protocols - Parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:53:00,000 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:53:16,792 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:53:16,792 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:53:16,806 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:53:16,806 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:53:16,806 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:53:16,806 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:53:16,806 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:53:16,806 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:53:16,806 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:53:16,806 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:53:16,806 [DEBUG] praxis.api.protocols - Created protocol_info with parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:53:16,807 [WARNING] praxis.api.protocols - 
No baseline_parameters found for Prance
2025-01-17 19:53:16,807 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:53:16,807 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:53:16,807 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:53:16,807 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:53:16,807 [INFO] praxis.api.protocols - Parameters: {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}
2025-01-17 19:53:16,807 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {'test_param': {'type': <class 'bool'>, 'description': 'testing_if_parameters is working', 'default': False}}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:54:19,794 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:54:19,794 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:54:19,808 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:54:19,808 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:54:19,808 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:54:19,808 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:54:19,808 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:54:19,808 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:54:19,808 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:54:19,808 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:54:19,808 [DEBUG] praxis.api.protocols - Created protocol_info with empty parameters: {}
2025-01-17 19:54:19,808 [WARNING] praxis.api.protocols - 
No baseline_parameters found for Prance
2025-01-17 19:54:19,808 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:54:19,808 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:54:19,809 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:54:19,809 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:54:19,809 [INFO] praxis.api.protocols - Parameters: {}
2025-01-17 19:54:19,809 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:55:22,554 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:55:22,554 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:55:22,574 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:55:22,574 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:55:22,574 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:55:22,574 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:55:22,574 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:55:22,574 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:55:22,574 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:55:22,575 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:55:22,575 [DEBUG] praxis.api.protocols - Created protocol_info with empty parameters: {}
2025-01-17 19:55:22,575 [WARNING] praxis.api.protocols - 
No baseline_parameters found for Prance
2025-01-17 19:55:22,575 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:55:22,575 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:55:22,575 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:55:22,575 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:55:22,575 [INFO] praxis.api.protocols - Parameters: {}
2025-01-17 19:55:22,575 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:55:36,426 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:55:36,426 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:55:36,439 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:55:36,439 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:55:36,439 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:55:36,439 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:55:36,439 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:55:36,439 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:55:36,439 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:55:36,439 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:55:36,439 [INFO] praxis.api.protocols - Found module-level baseline_parameters
2025-01-17 19:55:36,439 [INFO] praxis.api.protocols - 
Processing parameters for Prance:
2025-01-17 19:55:36,440 [DEBUG] praxis.api.protocols - Raw baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x125f7e850>
2025-01-17 19:55:36,440 [DEBUG] praxis.api.protocols - Processed parameters: [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}]
2025-01-17 19:55:36,440 [DEBUG] praxis.api.protocols - Converted parameters to dict: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 19:55:36,440 [INFO] praxis.api.protocols - Final parameters for Prance: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 19:55:36,440 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:55:36,440 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:55:36,440 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:55:36,440 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:55:36,440 [INFO] praxis.api.protocols - Parameters: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 19:55:36,440 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:56:06,272 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:56:06,273 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:56:06,312 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:56:06,312 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:56:06,312 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:56:06,312 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:56:06,312 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:56:06,313 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:56:06,313 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:56:06,314 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:56:06,314 [INFO] praxis.api.protocols - Found module-level baseline_parameters
2025-01-17 19:56:06,314 [INFO] praxis.api.protocols - 
Processing parameters for Prance:
2025-01-17 19:56:06,314 [DEBUG] praxis.api.protocols - Raw baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11be7e850>
2025-01-17 19:56:06,314 [DEBUG] praxis.api.protocols - Processed parameters: [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}]
2025-01-17 19:56:06,314 [DEBUG] praxis.api.protocols - Converted parameters to dict: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 19:56:06,314 [INFO] praxis.api.protocols - Final parameters for Prance: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 19:56:06,315 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:56:06,315 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:56:06,315 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:56:06,315 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:56:06,315 [INFO] praxis.api.protocols - Parameters: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 19:56:06,315 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:58:05,567 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:58:05,567 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:58:05,581 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:58:05,581 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:58:05,581 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:58:05,581 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:58:05,581 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:58:05,581 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:58:05,583 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:58:05,583 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:58:05,583 [WARNING] praxis.api.protocols - 
No baseline_parameters found for Prance
2025-01-17 19:58:05,583 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:58:05,583 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:58:05,583 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:58:05,583 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:58:05,583 [INFO] praxis.api.protocols - Parameters: {}
2025-01-17 19:58:05,583 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 19:58:14,585 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 19:58:14,585 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 19:58:14,597 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 19:58:14,597 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 19:58:14,597 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:58:14,597 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 19:58:14,597 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 19:58:14,597 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 19:58:14,598 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 19:58:14,598 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 19:58:14,598 [INFO] praxis.api.protocols - Found module-level baseline_parameters
2025-01-17 19:58:14,598 [INFO] praxis.api.protocols - 
Processing parameters for Prance:
2025-01-17 19:58:14,598 [DEBUG] praxis.api.protocols - Raw baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11fde88d0>
2025-01-17 19:58:14,598 [DEBUG] praxis.api.protocols - Processed parameters: [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}]
2025-01-17 19:58:14,598 [DEBUG] praxis.api.protocols - Converted parameters to dict: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 19:58:14,598 [INFO] praxis.api.protocols - Final parameters for Prance: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 19:58:14,599 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 19:58:14,599 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 19:58:14,599 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 19:58:14,599 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 19:58:14,599 [INFO] praxis.api.protocols - Parameters: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 19:58:14,599 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:00:46,445 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:00:46,445 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:00:46,464 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:00:46,464 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:00:46,464 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:00:46,464 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:00:46,464 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:00:46,464 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:00:46,466 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:00:46,467 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:00:46,467 [INFO] praxis.api.protocols - Found module-level baseline_parameters
2025-01-17 20:00:46,467 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:00:46,467 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:00:46,467 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 419, in discover_protocols
    "parameters": obj.baseline_parameters,
                  ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:00:46,467 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:00:46,467 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:00:46,467 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:00:46,467 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:01:11,370 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:01:11,371 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:01:11,383 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:01:11,383 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:01:11,383 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:01:11,383 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:01:11,383 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:01:11,383 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:01:11,383 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:01:11,384 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:01:11,384 [INFO] praxis.api.protocols - Found module-level baseline_parameters
2025-01-17 20:01:11,384 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:01:11,384 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:01:11,384 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 419, in discover_protocols
    "parameters": obj.baseline_parameters,
                  ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:01:11,385 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:01:11,385 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:01:11,385 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:01:11,385 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:01:33,698 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:01:33,698 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:01:33,711 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:01:33,711 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:01:33,711 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:01:33,711 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:01:33,711 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:01:33,711 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:01:33,712 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:01:33,712 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:01:33,713 [INFO] praxis.api.protocols - Found module-level baseline_parameters
2025-01-17 20:01:33,713 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:01:33,713 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:01:33,713 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 419, in discover_protocols
    "parameters": obj.baseline_parameters,
                  ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:01:33,713 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:01:33,713 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:01:33,713 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:01:33,713 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:01:36,665 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:01:36,665 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:01:36,679 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:01:36,679 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:01:36,679 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:01:36,679 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:01:36,679 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:01:36,679 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:01:36,680 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:01:36,680 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:01:36,680 [INFO] praxis.api.protocols - Found module-level baseline_parameters
2025-01-17 20:01:36,680 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:01:36,680 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:01:36,680 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 419, in discover_protocols
    "parameters": obj.baseline_parameters,
                  ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:01:36,680 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:01:36,681 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:01:36,681 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:01:36,681 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:01:46,639 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:01:46,639 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:01:46,652 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:01:46,652 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:01:46,652 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:01:46,652 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:01:46,652 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:01:46,652 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:01:46,653 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:01:46,654 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:01:46,654 [INFO] praxis.api.protocols - Found module-level baseline_parameters
2025-01-17 20:01:46,654 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:01:46,654 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:01:46,654 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 419, in discover_protocols
    "parameters": obj.baseline_parameters,
                  ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:01:46,654 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:01:46,654 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:01:46,654 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:01:46,654 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:02:10,388 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:02:10,388 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:02:10,402 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:02:10,402 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:02:10,402 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:02:10,402 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:02:10,402 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:02:10,402 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:02:10,404 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:02:10,404 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:02:10,404 [INFO] praxis.api.protocols - Found module-level baseline_parameters
2025-01-17 20:02:10,404 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:02:10,404 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:02:10,404 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 419, in discover_protocols
    "parameters": obj.baseline_parameters,
                  ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:02:10,405 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:02:10,405 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:02:10,405 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:02:10,405 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:03:44,204 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:03:44,204 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:03:44,218 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:03:44,218 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:03:44,218 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:03:44,219 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:03:44,219 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:03:44,219 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:03:44,219 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:03:44,219 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:03:44,219 [INFO] praxis.api.protocols - Found module-level baseline_parameters
2025-01-17 20:03:44,219 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:03:44,219 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:03:44,219 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 419, in discover_protocols
    "parameters": obj.baseline_parameters.get_parameters_for_ui(),
                  ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:03:44,219 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:03:44,219 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:03:44,220 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:03:44,220 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:04:23,592 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:04:23,592 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:04:23,608 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:04:23,608 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:04:23,608 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:04:23,608 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:04:23,608 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:04:23,608 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:04:23,608 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:04:23,608 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:04:23,609 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:04:23,609 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:04:23,609 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:04:23,609 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:04:23,609 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:04:23,609 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:04:23,609 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:04:29,149 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:04:29,149 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:04:29,164 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:04:29,164 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:04:29,164 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:04:29,164 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:04:29,164 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:04:29,164 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:04:29,164 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:04:29,164 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:04:29,165 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:04:29,165 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:04:29,165 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:04:29,165 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:04:29,165 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:04:29,165 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:04:29,165 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:04:34,341 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:04:34,341 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:04:34,354 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:04:34,354 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:04:34,354 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:04:34,354 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:04:34,354 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:04:34,355 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:04:34,355 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:04:34,355 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:04:34,355 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:04:34,355 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:04:34,356 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:04:34,356 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:04:34,356 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:04:34,356 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:04:34,356 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:05:09,153 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:05:09,153 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:05:09,167 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:05:09,167 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:05:09,168 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:05:09,168 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:05:09,168 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:05:09,168 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:05:09,168 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:05:09,168 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:05:09,169 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:05:09,169 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:05:09,169 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:05:09,169 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:05:09,169 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:05:09,169 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:05:09,169 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:05:16,614 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:05:16,614 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:05:16,628 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:05:16,628 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:05:16,628 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:05:16,628 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:05:16,628 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:05:16,628 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:05:16,629 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:05:16,629 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:05:16,629 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:05:16,629 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:05:16,629 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:05:16,629 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:05:16,630 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:05:16,630 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:05:16,630 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:05:45,506 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:05:45,506 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:05:45,519 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:05:45,519 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:05:45,519 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:05:45,519 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:05:45,519 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:05:45,519 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:05:45,521 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:05:45,521 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:05:45,521 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:05:45,521 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:05:45,521 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:05:45,521 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:05:45,521 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:05:45,521 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:05:45,521 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:05:57,071 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:05:57,071 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:05:57,085 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:05:57,085 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:05:57,085 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:05:57,085 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:05:57,085 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:05:57,085 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:05:57,086 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:05:57,086 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:05:57,086 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:05:57,086 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:05:57,086 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:05:57,086 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:05:57,086 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:05:57,086 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:05:57,086 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:06:26,370 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:06:26,370 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:06:26,385 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:06:26,385 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:06:26,385 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:06:26,385 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:06:26,385 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:06:26,385 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:06:26,385 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:06:26,385 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:06:26,386 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:06:26,386 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:06:26,386 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:06:26,386 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:06:26,386 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:06:26,386 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:06:26,386 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:06:31,827 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:06:31,827 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:06:31,841 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:06:31,841 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:06:31,841 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:06:31,841 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:06:31,841 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:06:31,841 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:06:31,841 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:06:31,841 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:06:31,841 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:06:31,841 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:06:31,842 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:06:31,842 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:06:31,842 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:06:31,842 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:06:31,842 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:07:50,759 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:07:50,759 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:07:50,777 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:07:50,777 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:07:50,777 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:07:50,777 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:07:50,777 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:07:50,777 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:07:50,778 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:07:50,778 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:07:50,778 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:07:50,778 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:07:50,779 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:07:50,779 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:07:50,779 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:07:50,779 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:07:50,779 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:08:20,829 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:08:20,829 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:08:20,844 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:08:20,844 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:08:20,844 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:08:20,844 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:08:20,845 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:08:20,845 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:08:20,845 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:08:20,845 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:08:20,845 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:08:20,845 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:08:20,846 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:08:20,846 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:08:20,846 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:08:20,846 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:08:20,846 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:09:11,726 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:09:11,726 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:09:11,739 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:09:11,739 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:09:11,739 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:09:11,739 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:09:11,739 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:09:11,739 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:09:11,741 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:09:11,741 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:09:11,741 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:09:11,741 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:09:11,741 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:09:11,741 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:09:11,741 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:09:11,741 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:09:11,741 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:09:25,482 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:09:25,482 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:09:25,494 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:09:25,494 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:09:25,494 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:09:25,494 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:09:25,495 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:09:25,495 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:09:25,495 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:09:25,495 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:09:25,495 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:09:25,495 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:09:25,496 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:09:25,496 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:09:25,496 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:09:25,496 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:09:25,496 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:09:41,850 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:09:41,850 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:09:41,863 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:09:41,863 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:09:41,863 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:09:41,863 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:09:41,863 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:09:41,863 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:09:41,865 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:09:41,865 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:09:41,865 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:09:41,865 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:09:41,865 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:09:41,865 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:09:41,865 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:09:41,865 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:09:41,865 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:09:50,893 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:09:50,893 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:09:50,905 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:09:50,905 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:09:50,905 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:09:50,905 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:09:50,905 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:09:50,905 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:09:50,906 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:09:50,906 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:09:50,906 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:09:50,906 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:09:50,907 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:09:50,907 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:09:50,907 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:09:50,907 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:09:50,907 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:11:49,146 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:11:49,146 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:11:49,220 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:11:49,220 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:11:49,221 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:11:49,221 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:11:49,221 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:11:49,221 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:11:49,221 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:11:49,221 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:11:49,221 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Prance' has no attribute 'baseline_parameters'
2025-01-17 20:11:49,221 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:11:49,222 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 404, in discover_protocols
    obj.baseline_parameters.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Prance' has no attribute 'baseline_parameters'

2025-01-17 20:11:49,222 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:11:49,223 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:11:49,223 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:11:49,223 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:13:21,810 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:13:21,810 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:13:21,825 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:13:21,825 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:13:21,825 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:13:21,825 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:13:21,825 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:13:21,825 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:13:21,826 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:13:21,826 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:13:21,826 [INFO] praxis.api.protocols - Protocol parameters: {'__module__': 'prance', '__doc__': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', '__init__': <function Prance.__init__ at 0x127270e00>, '_check_deck_resources': <function Prance._check_deck_resources at 0x127270ea0>, '_check_parameters': <function Prance._check_parameters at 0x127270f40>, '__abstractmethods__': frozenset({'_abort', '_pause', '_stop', '_setup', '_execute', '_save_state', '_resume', '_load_state', '_intervene'}), '_abc_impl': <_abc._abc_data object at 0x1270f7b80>}
2025-01-17 20:13:21,826 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'baseline_params' is not defined
2025-01-17 20:13:21,826 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:13:21,826 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 407, in discover_protocols
    f"Baseline parameters: {baseline_params}"
                            ^^^^^^^^^^^^^^^
NameError: name 'baseline_params' is not defined

2025-01-17 20:13:21,826 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:13:21,826 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:13:21,826 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:13:21,826 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:13:31,048 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:13:31,049 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:13:31,078 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:13:31,078 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:13:31,078 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:13:31,078 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:13:31,078 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:13:31,078 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:13:31,079 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:13:31,079 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:13:31,079 [INFO] praxis.api.protocols - Protocol parameters: {'__module__': 'prance', '__doc__': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', '__init__': <function Prance.__init__ at 0x113d6cd60>, '_check_deck_resources': <function Prance._check_deck_resources at 0x113d6ce00>, '_check_parameters': <function Prance._check_parameters at 0x113d6cea0>, '__abstractmethods__': frozenset({'_execute', '_pause', '_load_state', '_resume', '_setup', '_abort', '_save_state', '_stop', '_intervene'}), '_abc_impl': <_abc._abc_data object at 0x113cf7e40>}
2025-01-17 20:13:31,079 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'baseline_params' is not defined
2025-01-17 20:13:31,079 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:13:31,079 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 411, in discover_protocols
    "parameters": baseline_params,
                  ^^^^^^^^^^^^^^^
NameError: name 'baseline_params' is not defined

2025-01-17 20:13:31,079 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:13:31,079 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:13:31,079 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:13:31,079 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:15:40,220 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:15:40,220 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:15:40,233 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:15:40,234 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:15:40,234 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:15:40,234 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:15:40,234 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:15:40,234 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:15:40,234 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:15:40,235 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:15:40,235 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:15:40,235 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:15:40,235 [DEBUG] praxis.api.protocols - Protocol parameters: <class 'praxis.protocol.parameter.ProtocolParameters'>
2025-01-17 20:15:40,235 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:15:40,235 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:15:40,235 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:15:40,235 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 20:15:40,235 [INFO] praxis.api.protocols - Parameters: <class 'praxis.protocol.parameter.ProtocolParameters'>
2025-01-17 20:15:40,235 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': <class 'praxis.protocol.parameter.ProtocolParameters'>, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:16:02,193 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:16:02,193 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:16:02,206 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:16:02,206 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:16:02,206 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:16:02,206 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:16:02,206 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:16:02,206 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:16:02,206 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:16:02,207 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:16:02,207 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:16:02,207 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:16:02,207 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'ProtocolParameters' has no attribute '_values'
2025-01-17 20:16:02,207 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:16:02,207 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 414, in discover_protocols
    f"Protocol parameters: {baseline_params._values}"
                            ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'ProtocolParameters' has no attribute '_values'

2025-01-17 20:16:02,207 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:16:02,207 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:16:02,207 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:16:02,207 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:16:32,256 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:16:32,257 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:16:32,270 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:16:32,270 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:16:32,270 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:16:32,270 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:16:32,270 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:16:32,270 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:16:32,270 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:16:32,270 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:16:32,270 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:16:32,271 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:16:32,271 [DEBUG] praxis.api.protocols - Protocol parameters: {}
2025-01-17 20:16:32,271 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:16:32,271 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:16:32,271 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:16:32,271 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 20:16:32,271 [INFO] praxis.api.protocols - Parameters: <class 'praxis.protocol.parameter.ProtocolParameters'>
2025-01-17 20:16:32,271 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': <class 'praxis.protocol.parameter.ProtocolParameters'>, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:16:39,069 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:16:39,069 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:16:39,084 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:16:39,084 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:16:39,084 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:16:39,084 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:16:39,084 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:16:39,084 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:16:39,085 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:16:39,085 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:16:39,085 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:16:39,085 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:16:39,085 [DEBUG] praxis.api.protocols - Protocol parameters: {}
2025-01-17 20:16:39,085 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:16:39,085 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:16:39,085 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:16:39,085 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 20:16:39,085 [INFO] praxis.api.protocols - Parameters: <class 'praxis.protocol.parameter.ProtocolParameters'>
2025-01-17 20:16:39,085 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': <class 'praxis.protocol.parameter.ProtocolParameters'>, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:17:23,458 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:17:23,458 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:17:23,475 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:17:23,475 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:17:23,475 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:17:23,475 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:17:23,475 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:17:23,475 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:17:23,476 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:17:23,476 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:17:23,476 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:17:23,476 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:17:23,476 [DEBUG] praxis.api.protocols - Protocol parameters: []
2025-01-17 20:17:23,476 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:17:23,476 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:17:23,476 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:17:23,476 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 20:17:23,476 [INFO] praxis.api.protocols - Parameters: <class 'praxis.protocol.parameter.ProtocolParameters'>
2025-01-17 20:17:23,476 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': <class 'praxis.protocol.parameter.ProtocolParameters'>, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:18:06,465 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:18:06,466 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:18:06,482 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:18:06,482 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:18:06,482 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:18:06,482 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:18:06,482 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:18:06,482 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:18:06,482 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:18:06,482 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:18:06,482 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:18:06,483 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:18:06,483 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'ProtocolParameters' has no attribute '_parameters'
2025-01-17 20:18:06,483 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:18:06,483 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 414, in discover_protocols
    f"Protocol parameters: {baseline_params._parameters}"
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'ProtocolParameters' has no attribute '_parameters'

2025-01-17 20:18:06,483 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:18:06,483 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:18:06,483 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:18:06,483 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:18:18,220 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:18:18,221 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:18:18,235 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:18:18,235 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:18:18,235 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:18:18,235 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:18:18,235 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:18:18,235 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:18:18,236 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:18:18,236 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:18:18,236 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:18:18,236 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:18:18,236 [DEBUG] praxis.api.protocols - Protocol parameters: {}
2025-01-17 20:18:18,236 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:18:18,236 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:18:18,236 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:18:18,236 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 20:18:18,236 [INFO] praxis.api.protocols - Parameters: <class 'praxis.protocol.parameter.ProtocolParameters'>
2025-01-17 20:18:18,236 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': <class 'praxis.protocol.parameter.ProtocolParameters'>, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:18:49,895 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:18:49,895 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:18:49,908 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:18:49,908 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:18:49,908 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:18:49,908 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:18:49,908 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:18:49,908 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:18:49,909 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'logger' is not defined
2025-01-17 20:18:49,909 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:18:49,909 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 389, in discover_protocols
    spec.loader.exec_module(module)
  File "<frozen importlib._bootstrap_external>", line 940, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py", line 17, in <module>
    baseline_parameters = ProtocolParameters(
                          ^^^^^^^^^^^^^^^^^^^
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/parameter.py", line 69, in __init__
    logger.info(f"Parameters: {parameters}")
    ^^^^^^
NameError: name 'logger' is not defined

2025-01-17 20:18:49,910 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:18:49,910 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:18:49,910 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:18:49,910 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:19:07,384 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:19:07,384 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:19:07,397 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:19:07,397 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:19:07,397 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:19:07,397 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:19:07,397 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:19:07,397 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:19:07,397 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:19:07,397 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:19:07,397 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:19:07,397 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:19:07,397 [DEBUG] praxis.api.protocols - Protocol parameters: {}
2025-01-17 20:19:07,397 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:19:07,397 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:19:07,397 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:19:07,397 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 20:19:07,397 [INFO] praxis.api.protocols - Parameters: <class 'praxis.protocol.parameter.ProtocolParameters'>
2025-01-17 20:19:07,398 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': <class 'praxis.protocol.parameter.ProtocolParameters'>, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:22:01,984 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:22:01,986 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:22:02,001 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:22:02,001 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:22:02,001 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:22:02,001 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:22:02,001 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:22:02,001 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:22:02,002 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:22:02,002 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:22:02,002 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:22:02,002 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:22:02,002 [DEBUG] praxis.api.protocols - Protocol parameters: {}
2025-01-17 20:22:02,002 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:22:02,002 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:22:02,002 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:22:02,002 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 20:22:02,003 [INFO] praxis.api.protocols - Parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x108281bd0>
2025-01-17 20:22:02,003 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': <praxis.protocol.parameter.ProtocolParameters object at 0x108281bd0>, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:22:28,102 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:22:28,102 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:22:28,119 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:22:28,119 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:22:28,119 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:22:28,119 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:22:28,119 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:22:28,119 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:22:28,120 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:22:28,120 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:22:28,120 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:22:28,120 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:22:28,120 [DEBUG] praxis.api.protocols - Protocol parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x105245010>
2025-01-17 20:22:28,120 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:22:28,120 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:22:28,120 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:22:28,120 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 20:22:28,120 [INFO] praxis.api.protocols - Parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x105245010>
2025-01-17 20:22:28,120 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': <praxis.protocol.parameter.ProtocolParameters object at 0x105245010>, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:23:18,522 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:23:18,522 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:23:18,535 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:23:18,535 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:23:18,535 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:23:18,535 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:23:18,535 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:23:18,535 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:23:18,536 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:23:18,536 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:23:18,536 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:23:18,536 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:23:18,536 [DEBUG] praxis.api.protocols - Protocol parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x1604cd6d0>
2025-01-17 20:23:18,536 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:23:18,536 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:23:18,536 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:23:18,536 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 20:23:18,536 [INFO] praxis.api.protocols - Parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x1604cd6d0>
2025-01-17 20:23:18,536 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': <praxis.protocol.parameter.ProtocolParameters object at 0x1604cd6d0>, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:23:25,814 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:23:25,814 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:23:25,835 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:23:25,835 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:23:25,835 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:23:25,835 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:23:25,835 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:23:25,835 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:23:25,835 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:23:25,836 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:23:25,836 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:23:25,836 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:23:25,836 [DEBUG] praxis.api.protocols - Protocol parameters: None
2025-01-17 20:23:25,836 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:23:25,836 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:23:25,836 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:23:25,836 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 20:23:25,836 [INFO] praxis.api.protocols - Parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x10c0d9390>
2025-01-17 20:23:25,836 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': <praxis.protocol.parameter.ProtocolParameters object at 0x10c0d9390>, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:25:18,457 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:25:18,457 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:25:18,479 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:25:18,479 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:25:18,479 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:25:18,479 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:25:18,479 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:25:18,479 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:25:18,480 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:25:18,480 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:25:18,480 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:25:18,480 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'ProtocolParameters'
2025-01-17 20:25:18,480 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:25:18,481 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 410, in discover_protocols
    importlib.import_module(item)
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'ProtocolParameters'

2025-01-17 20:25:18,481 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:25:18,481 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:25:18,481 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:25:18,481 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:25:21,445 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:25:21,445 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:25:21,457 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:25:21,457 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:25:21,457 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:25:21,457 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:25:21,457 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:25:21,457 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:25:21,457 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:25:21,457 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:25:21,457 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:25:21,457 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'ProtocolParameters'
2025-01-17 20:25:21,457 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:25:21,457 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 410, in discover_protocols
    importlib.import_module(item)
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'ProtocolParameters'

2025-01-17 20:25:21,458 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:25:21,458 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:25:21,458 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:25:21,458 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:25:45,141 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:25:45,141 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:25:45,156 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:25:45,156 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:25:45,156 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:25:45,156 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:25:45,156 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:25:45,156 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:25:45,156 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:25:45,157 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:25:45,157 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:25:45,157 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: module 'prance' has no attribute 'startswith'
2025-01-17 20:25:45,157 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:25:45,157 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 410, in discover_protocols
    importlib.import_module(module).item
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 117, in import_module
    if name.startswith('.'):
       ^^^^^^^^^^^^^^^
AttributeError: module 'prance' has no attribute 'startswith'

2025-01-17 20:25:45,157 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:25:45,157 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:25:45,157 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:25:45,157 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:25:52,185 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:25:52,185 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:25:52,201 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:25:52,201 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:25:52,201 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:25:52,201 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:25:52,201 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:25:52,201 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:25:52,202 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:25:52,202 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:25:52,202 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:25:52,202 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: module 'prance' has no attribute 'startswith'
2025-01-17 20:25:52,202 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:25:52,203 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 410, in discover_protocols
    importlib.import_module(module).item
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 117, in import_module
    if name.startswith('.'):
       ^^^^^^^^^^^^^^^
AttributeError: module 'prance' has no attribute 'startswith'

2025-01-17 20:25:52,203 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:25:52,203 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:25:52,203 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:25:52,203 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:26:44,264 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:26:44,264 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:26:44,287 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:26:44,288 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:26:44,288 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:26:44,288 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:26:44,288 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:26:44,288 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:26:44,288 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:26:44,288 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:26:44,289 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:26:44,289 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: 'NoneType' object has no attribute 'item'
2025-01-17 20:26:44,289 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:26:44,289 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 410, in discover_protocols
    spec.loader.exec_module(module).item
AttributeError: 'NoneType' object has no attribute 'item'

2025-01-17 20:26:44,289 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:26:44,289 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:26:44,289 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:26:44,289 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:27:45,334 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:27:45,335 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:27:45,351 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:27:45,351 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:27:45,351 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:27:45,351 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:27:45,351 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:27:45,351 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:27:45,351 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:27:45,351 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:27:45,351 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:27:45,352 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: loader for prance cannot handle ProtocolParameters
2025-01-17 20:27:45,352 [ERROR] praxis.api.protocols - Error type: <class 'ImportError'>
2025-01-17 20:27:45,352 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 410, in discover_protocols
    spec.loader.load_module(item)
  File "<frozen importlib._bootstrap_external>", line 603, in _check_name_wrapper
ImportError: loader for prance cannot handle ProtocolParameters

2025-01-17 20:27:45,352 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:27:45,352 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:27:45,352 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:27:45,352 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:28:37,035 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:28:37,035 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:28:37,078 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:28:37,078 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:28:37,078 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:28:37,078 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:28:37,079 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:28:37,079 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:28:37,080 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:28:37,080 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:28:37,080 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:28:37,080 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:28:37,080 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'ProtocolParameters' has no attribute 'initial_input'
2025-01-17 20:28:37,080 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:28:37,081 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 415, in discover_protocols
    f"Protocol parameters: {baseline_params.initial_input}"
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'ProtocolParameters' has no attribute 'initial_input'

2025-01-17 20:28:37,081 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:28:37,081 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:28:37,081 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:28:37,081 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:28:52,693 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:28:52,694 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:28:52,708 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:28:52,708 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:28:52,708 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:28:52,708 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:28:52,708 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:28:52,708 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:28:52,708 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:28:52,708 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:28:52,708 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:28:52,708 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: module 'prance' has no attribute 'protocolparameters'
2025-01-17 20:28:52,708 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:28:52,709 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 409, in discover_protocols
    baseline_params = getattr(
                      ^^^^^^^^
AttributeError: module 'prance' has no attribute 'protocolparameters'

2025-01-17 20:28:52,709 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:28:52,709 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:28:52,709 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:28:52,709 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:29:00,100 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:29:00,100 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:29:00,117 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:29:00,117 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:29:00,117 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:29:00,117 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:29:00,117 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:29:00,117 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:29:00,118 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:29:00,118 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:29:00,118 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:29:00,118 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:29:00,118 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'ProtocolParameters' has no attribute 'initial_input'
2025-01-17 20:29:00,118 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:29:00,118 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 415, in discover_protocols
    f"Protocol parameters: {baseline_params.initial_input}"
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'ProtocolParameters' has no attribute 'initial_input'

2025-01-17 20:29:00,118 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:29:00,118 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:29:00,118 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:29:00,119 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:29:13,807 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:29:13,807 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:29:13,839 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:29:13,839 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:29:13,839 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:29:13,839 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:29:13,839 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:29:13,839 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:29:13,840 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:29:13,840 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:29:13,840 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:29:13,840 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:29:13,840 [DEBUG] praxis.api.protocols - Protocol parameters: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 20:29:13,840 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:29:13,840 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:29:13,840 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:29:13,840 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 20:29:13,840 [INFO] praxis.api.protocols - Parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x10fa7dfd0>
2025-01-17 20:29:13,840 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': <praxis.protocol.parameter.ProtocolParameters object at 0x10fa7dfd0>, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:29:35,077 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:29:35,077 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:29:35,092 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:29:35,092 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:29:35,092 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:29:35,092 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:29:35,092 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:29:35,092 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:29:35,092 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:29:35,092 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:29:35,092 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:29:35,092 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:29:35,092 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'ProtocolParameters' has no attribute 'initial_input'
2025-01-17 20:29:35,092 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:29:35,093 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 414, in discover_protocols
    f"Protocol parameters: {baseline_params.initial_input}"
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'ProtocolParameters' has no attribute 'initial_input'

2025-01-17 20:29:35,093 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:29:35,093 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:29:35,093 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:29:35,093 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:29:46,013 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:29:46,013 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:29:46,031 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:29:46,031 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:29:46,031 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:29:46,032 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:29:46,032 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:29:46,032 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:29:46,032 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:29:46,032 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:29:46,033 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:29:46,033 [INFO] praxis.api.protocols - Found ProtocolParameters: ProtocolParameters
2025-01-17 20:29:46,033 [DEBUG] praxis.api.protocols - Protocol parameters: None
2025-01-17 20:29:46,033 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:29:46,033 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:29:46,033 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:29:46,033 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 20:29:46,033 [INFO] praxis.api.protocols - Parameters: <class 'praxis.protocol.parameter.ProtocolParameters'>
2025-01-17 20:29:46,033 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': <class 'praxis.protocol.parameter.ProtocolParameters'>, 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 20:35:13,549 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:35:13,549 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:35:13,563 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:35:13,563 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:35:13,563 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:35:13,563 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:35:13,563 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:35:13,563 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:35:13,564 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:35:13,564 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:35:13,564 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:35:13,564 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'protocol_parameters_class' is not defined
2025-01-17 20:35:13,564 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:35:13,564 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 410, in discover_protocols
    obj, protocol_parameters_class()
         ^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'protocol_parameters_class' is not defined

2025-01-17 20:35:13,564 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:35:13,564 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:35:13,564 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:35:13,564 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:35:34,442 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:35:34,442 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:35:34,455 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:35:34,455 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:35:34,455 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:35:34,455 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:35:34,455 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:35:34,455 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:35:34,455 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:35:34,455 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:35:34,455 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:35:34,455 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'ProtocolParameters' is not defined
2025-01-17 20:35:34,455 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:35:34,455 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 409, in discover_protocols
    if isinstance(obj, ProtocolParameters):
                       ^^^^^^^^^^^^^^^^^^
NameError: name 'ProtocolParameters' is not defined

2025-01-17 20:35:34,456 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:35:34,456 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:35:34,456 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:35:34,456 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:35:41,645 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:35:41,645 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:35:41,658 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:35:41,658 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:35:41,658 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:35:41,658 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:35:41,658 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:35:41,658 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:35:41,658 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:35:41,658 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:35:41,658 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:35:41,658 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'baseline_params' is not defined
2025-01-17 20:35:41,658 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:35:41,659 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 418, in discover_protocols
    f"Protocol parameters: {baseline_params().initial_input}"
                            ^^^^^^^^^^^^^^^
NameError: name 'baseline_params' is not defined

2025-01-17 20:35:41,659 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:35:41,659 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:35:41,659 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:35:41,659 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:35:56,298 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:35:56,298 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:35:56,312 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:35:56,312 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:35:56,312 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:35:56,313 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:35:56,313 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:35:56,313 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:35:56,313 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:35:56,313 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:35:56,313 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:35:56,313 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'baseline_params' is not defined
2025-01-17 20:35:56,313 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:35:56,313 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 418, in discover_protocols
    f"Protocol parameters: {baseline_params().initial_input}"
                            ^^^^^^^^^^^^^^^
NameError: name 'baseline_params' is not defined

2025-01-17 20:35:56,313 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:35:56,314 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:35:56,314 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:35:56,314 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:36:05,984 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:36:05,984 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:36:06,002 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:36:06,003 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:36:06,003 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:36:06,003 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:36:06,003 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:36:06,003 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:36:06,003 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:36:06,003 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:36:06,004 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:36:06,004 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: 'NoneType' object has no attribute 'initial_input'
2025-01-17 20:36:06,004 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:36:06,004 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 418, in discover_protocols
    f"Protocol parameters: {baseline_params_instance.initial_input}"
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'initial_input'

2025-01-17 20:36:06,004 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:36:06,004 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:36:06,004 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:36:06,004 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:36:17,984 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:36:17,984 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:36:17,996 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:36:17,996 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:36:17,997 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:36:17,997 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:36:17,997 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:36:17,997 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:36:17,997 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:36:17,997 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:36:17,997 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:36:17,997 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: 'NoneType' object has no attribute 'initial_input'
2025-01-17 20:36:17,997 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:36:17,997 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 418, in discover_protocols
    f"Protocol parameters: {baseline_params_instance.initial_input}"
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'initial_input'

2025-01-17 20:36:17,997 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:36:17,997 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:36:17,998 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:36:17,998 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:37:01,566 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:37:01,566 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:37:01,587 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:37:01,587 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:37:01,587 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:37:01,587 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:37:01,587 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:37:01,587 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:37:01,588 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:37:01,588 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:37:01,588 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:37:01,588 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:37:01,588 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:37:01,588 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:37:01,588 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:37:01,588 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:37:09,033 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:37:09,033 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:37:09,047 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:37:09,047 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:37:09,047 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:37:09,047 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:37:09,047 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:37:09,047 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:37:09,048 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:37:09,048 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:37:09,048 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:37:09,048 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:37:09,048 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:37:09,048 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:37:09,048 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:37:09,048 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:37:12,395 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:37:12,395 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:37:12,418 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:37:12,418 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:37:12,418 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:37:12,418 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:37:12,418 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:37:12,418 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:37:12,418 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:37:12,418 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:37:12,418 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:37:12,418 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:37:12,418 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:37:12,418 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:37:12,418 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:37:12,418 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:38:04,837 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:38:04,837 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:38:04,853 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:38:04,853 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:38:04,853 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:38:04,853 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:38:04,853 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:38:04,853 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:38:04,853 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:38:04,854 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:38:04,854 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:38:04,854 [INFO] praxis.api.protocols - Object name: Any
2025-01-17 20:38:04,854 [INFO] praxis.api.protocols - Object type: <class 'typing._AnyMeta'>
2025-01-17 20:38:04,854 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:38:04,854 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:38:04,854 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:38:04,854 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:38:04,854 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:38:14,164 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:38:14,164 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:38:14,177 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:38:14,177 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:38:14,177 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:38:14,177 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:38:14,177 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:38:14,177 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:38:14,178 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:38:14,178 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:38:14,178 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:38:14,178 [INFO] praxis.api.protocols - Object name: Any
2025-01-17 20:38:14,178 [INFO] praxis.api.protocols - Object type: <class 'typing._AnyMeta'>
2025-01-17 20:38:14,178 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:38:14,178 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:38:14,178 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:38:14,178 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:38:14,178 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:38:51,994 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:38:51,994 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:38:52,007 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:38:52,007 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:38:52,007 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:38:52,007 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:38:52,007 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:38:52,007 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:38:52,008 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'prance'
2025-01-17 20:38:52,008 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:38:52,008 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 380, in discover_protocols
    loaded_module = importlib.import_module(file[:-3])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'prance'

2025-01-17 20:38:52,008 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:38:52,008 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:38:52,008 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:38:52,008 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:39:13,097 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:39:13,097 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:39:13,111 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:39:13,111 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:39:13,111 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:39:13,111 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:39:13,111 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:39:13,111 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:39:13,111 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'prance'
2025-01-17 20:39:13,111 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:39:13,111 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 380, in discover_protocols
    loaded_module = importlib.import_module(file[:-3])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'prance'

2025-01-17 20:39:13,111 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:39:13,111 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:39:13,112 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:39:13,112 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:39:18,549 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:39:18,549 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:39:18,640 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:39:18,640 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:39:18,643 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:39:18,667 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:39:18,667 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:39:18,667 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:39:18,671 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'prance'
2025-01-17 20:39:18,671 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:39:18,672 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 380, in discover_protocols
    loaded_module = importlib.import_module(file[:-3])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'prance'

2025-01-17 20:39:18,672 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:39:18,673 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:39:18,673 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:39:18,673 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:39:28,584 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:39:28,584 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:39:28,598 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:39:28,598 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:39:28,598 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:39:28,598 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:39:28,598 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:39:28,598 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:39:28,598 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'prance'
2025-01-17 20:39:28,598 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:39:28,599 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 380, in discover_protocols
    loaded_module = importlib.import_module(file[:-3])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'prance'

2025-01-17 20:39:28,599 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:39:28,599 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:39:28,599 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:39:28,599 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:40:19,520 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:40:19,520 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:40:19,536 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:40:19,536 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:40:19,537 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:40:19,537 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:40:19,537 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:40:19,537 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:40:19,537 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: module 'importlib' has no attribute 'load_module'
2025-01-17 20:40:19,537 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:40:19,537 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 380, in discover_protocols
    loaded_module = importlib.load_module(file[:-3])
                    ^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'importlib' has no attribute 'load_module'

2025-01-17 20:40:19,537 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:40:19,537 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:40:19,537 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:40:19,537 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:40:33,399 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:40:33,399 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:40:33,415 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:40:33,415 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:40:33,415 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:40:33,415 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:40:33,415 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:40:33,415 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:40:33,416 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'prance'
2025-01-17 20:40:33,416 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:40:33,416 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 380, in discover_protocols
    loaded_module = importlib.import_module(file[:-3])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'prance'

2025-01-17 20:40:33,416 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:40:33,416 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:40:33,416 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:40:33,416 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:41:13,968 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:41:13,968 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:41:13,981 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:41:13,981 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:41:13,981 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:41:13,981 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:41:13,981 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:41:13,981 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:41:13,982 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'protocols'
2025-01-17 20:41:13,982 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:41:13,982 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 381, in discover_protocols
    loaded_module = importlib.import_module(module_name)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'protocols'

2025-01-17 20:41:13,982 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:41:13,982 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:41:13,982 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:41:13,982 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:41:16,835 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:41:16,835 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:41:16,852 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:41:16,852 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:41:16,852 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:41:16,852 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:41:16,852 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:41:16,853 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:41:16,853 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'protocols'
2025-01-17 20:41:16,853 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:41:16,853 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 381, in discover_protocols
    loaded_module = importlib.import_module(module_name)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'protocols'

2025-01-17 20:41:16,853 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:41:16,853 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:41:16,853 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:41:16,853 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:42:07,164 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:42:07,164 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:42:07,179 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:42:07,179 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:42:07,179 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:42:07,179 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:42:07,179 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:42:07,179 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:42:07,179 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance'
2025-01-17 20:42:07,179 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:42:07,180 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 380, in discover_protocols
    loaded_module = importlib.import_module(filepath)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1126, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance'

2025-01-17 20:42:07,180 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:42:07,180 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:42:07,180 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:42:07,180 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:42:27,113 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:42:27,113 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:42:27,137 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:42:27,137 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:42:27,137 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:42:27,137 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:42:27,137 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:42:27,138 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:42:27,138 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance'
2025-01-17 20:42:27,138 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:42:27,138 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 380, in discover_protocols
    loaded_module = importlib.import_module(filepath)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1126, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance'

2025-01-17 20:42:27,139 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:42:27,139 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:42:27,139 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:42:27,139 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:43:00,274 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:43:00,274 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:43:00,333 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:43:00,333 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:43:00,333 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:43:00,334 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:43:00,334 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:43:00,334 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:43:00,334 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'prance'
2025-01-17 20:43:00,334 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:43:00,334 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 380, in discover_protocols
    loaded_module = importlib.import_module(
                    ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'prance'

2025-01-17 20:43:00,334 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:43:00,334 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:43:00,334 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:43:00,334 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:43:09,823 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:43:09,823 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:43:09,837 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:43:09,837 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:43:09,837 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:43:09,837 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:43:09,837 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:43:09,837 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:43:09,837 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'prance'
2025-01-17 20:43:09,837 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:43:09,838 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 380, in discover_protocols
    loaded_module = importlib.import_module(
                    ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'prance'

2025-01-17 20:43:09,838 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:43:09,838 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:43:09,838 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:43:09,838 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:44:02,605 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:44:02,605 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:44:02,619 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:44:02,619 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:44:02,619 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:44:02,619 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:44:02,619 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:44:02,619 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:44:02,619 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'protocols'
2025-01-17 20:44:02,619 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:44:02,620 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 381, in discover_protocols
    loaded_module = importlib.import_module(
                    ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'protocols'

2025-01-17 20:44:02,620 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:44:02,620 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:44:02,620 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:44:02,620 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:44:32,376 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:44:32,377 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:44:32,391 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:44:32,391 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:44:32,391 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:44:32,391 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:44:32,391 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:44:32,391 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:44:32,392 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'praxis.protocol.protocols.prance.py'; 'praxis.protocol.protocols.prance' is not a package
2025-01-17 20:44:32,392 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:44:32,393 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 381, in discover_protocols
    loaded_module = importlib.import_module(
                    ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1135, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'praxis.protocol.protocols.prance.py'; 'praxis.protocol.protocols.prance' is not a package

2025-01-17 20:44:32,393 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:44:32,393 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:44:32,393 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:44:32,393 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:45:29,212 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:45:29,212 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:45:29,227 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:45:29,227 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:45:29,227 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:45:29,227 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:45:29,227 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:45:29,227 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:45:29,228 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'prance'
2025-01-17 20:45:29,228 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:45:29,228 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 387, in discover_protocols
    imported_module = importlib.import_module(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'prance'

2025-01-17 20:45:29,228 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:45:29,228 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:45:29,228 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:45:29,229 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:45:41,987 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:45:41,987 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:45:42,003 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:45:42,003 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:45:42,003 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:45:42,003 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:45:42,003 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:45:42,003 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:45:42,004 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: No module named 'prance'
2025-01-17 20:45:42,004 [ERROR] praxis.api.protocols - Error type: <class 'ModuleNotFoundError'>
2025-01-17 20:45:42,004 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 387, in discover_protocols
    imported_module = importlib.import_module(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'prance'

2025-01-17 20:45:42,004 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:45:42,004 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:45:42,004 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:45:42,004 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:46:08,335 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:46:08,335 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:46:08,348 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:46:08,348 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:46:08,348 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:46:08,348 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:46:08,348 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:46:08,348 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:46:08,348 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: module 'prance' has no attribute 'startswith'
2025-01-17 20:46:08,348 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:46:08,348 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 387, in discover_protocols
    imported_module = importlib.import_module(module)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 117, in import_module
    if name.startswith('.'):
       ^^^^^^^^^^^^^^^
AttributeError: module 'prance' has no attribute 'startswith'

2025-01-17 20:46:08,348 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:46:08,348 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:46:08,348 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:46:08,348 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:46:48,613 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:46:48,613 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:46:48,629 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:46:48,629 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:46:48,629 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:46:48,629 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:46:48,630 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:46:48,630 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:46:48,630 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'imported_module' is not defined
2025-01-17 20:46:48,630 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:46:48,630 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 387, in discover_protocols
    logger.info(f"Imported module: {imported_module}")
                                    ^^^^^^^^^^^^^^^
NameError: name 'imported_module' is not defined

2025-01-17 20:46:48,630 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:46:48,630 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:46:48,630 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:46:48,630 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:46:54,003 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:46:54,003 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:46:54,016 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:46:54,016 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:46:54,016 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:46:54,016 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:46:54,016 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:46:54,016 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:46:54,017 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:46:54,018 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:46:54,018 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:46:54,018 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'loaded_module' is not defined
2025-01-17 20:46:54,018 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:46:54,018 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 410, in discover_protocols
    loaded_module
NameError: name 'loaded_module' is not defined

2025-01-17 20:46:54,018 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:46:54,018 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:46:54,018 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:46:54,018 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:47:26,943 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:47:26,944 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:47:26,962 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:47:26,962 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:47:26,962 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:47:26,962 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:47:26,962 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:47:26,962 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:47:26,963 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:47:26,963 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:47:26,963 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:47:26,964 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'loaded_module' is not defined
2025-01-17 20:47:26,964 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:47:26,964 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 411, in discover_protocols
    loaded_module
NameError: name 'loaded_module' is not defined

2025-01-17 20:47:26,964 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:47:26,964 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:47:26,964 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:47:26,964 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:48:13,795 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:48:13,796 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:48:13,809 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:48:13,809 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:48:13,809 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:48:13,809 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:48:13,809 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:48:13,809 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:48:13,809 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: 'PraxisConfiguration' object has no attribute 'praxis_root'
2025-01-17 20:48:13,809 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:48:13,809 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 388, in discover_protocols
    filepath, config.praxis_root
              ^^^^^^^^^^^^^^^^^^
AttributeError: 'PraxisConfiguration' object has no attribute 'praxis_root'

2025-01-17 20:48:13,809 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:48:13,809 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:48:13,809 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:48:13,809 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:49:00,779 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:49:00,779 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:49:00,793 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:49:00,793 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:49:00,793 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:49:00,793 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:49:00,793 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:49:00,793 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:49:00,793 [INFO] praxis.api.protocols - Module name: ...pylabpraxis.praxis.protocol.protocols.prance.py
2025-01-17 20:49:00,793 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:49:00,794 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:49:00,794 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:49:00,794 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'loaded_module' is not defined
2025-01-17 20:49:00,794 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:49:00,794 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 416, in discover_protocols
    loaded_module
NameError: name 'loaded_module' is not defined

2025-01-17 20:49:00,794 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:49:00,794 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:49:00,794 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:49:00,794 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:49:11,701 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:49:11,702 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:49:11,715 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:49:11,715 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:49:11,715 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:49:11,715 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:49:11,715 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:49:11,716 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:49:11,716 [INFO] praxis.api.protocols - Module name: ...pylabpraxis.praxis.protocol.protocols.prance.py
2025-01-17 20:49:11,716 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: the 'package' argument is required to perform a relative import for '...pylabpraxis.praxis.protocol.protocols.prance.py'
2025-01-17 20:49:11,716 [ERROR] praxis.api.protocols - Error type: <class 'TypeError'>
2025-01-17 20:49:11,717 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 391, in discover_protocols
    imported_module = importlib.import_module(module_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 121, in import_module
    raise TypeError(msg.format(name))
TypeError: the 'package' argument is required to perform a relative import for '...pylabpraxis.praxis.protocol.protocols.prance.py'

2025-01-17 20:49:11,717 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:49:11,717 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:49:11,717 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:49:11,717 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:50:11,335 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:50:11,335 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:50:11,350 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:50:11,350 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:50:11,350 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:50:11,350 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:50:11,350 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:50:11,350 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:50:11,350 [INFO] praxis.api.protocols - Module name: .........pylabpraxis.praxis.protocol.protocols.prance.py
2025-01-17 20:50:11,350 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: the 'package' argument is required to perform a relative import for '.........pylabpraxis.praxis.protocol.protocols.prance.py'
2025-01-17 20:50:11,350 [ERROR] praxis.api.protocols - Error type: <class 'TypeError'>
2025-01-17 20:50:11,351 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 391, in discover_protocols
    imported_module = importlib.import_module(module_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py", line 121, in import_module
    raise TypeError(msg.format(name))
TypeError: the 'package' argument is required to perform a relative import for '.........pylabpraxis.praxis.protocol.protocols.prance.py'

2025-01-17 20:50:11,351 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:50:11,351 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:50:11,351 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:50:11,351 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:50:48,098 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:50:48,099 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:50:48,115 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:50:48,115 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:50:48,115 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:50:48,115 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:50:48,115 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:50:48,115 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:50:48,120 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:50:48,120 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:50:48,120 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:50:48,121 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'loaded_module' is not defined
2025-01-17 20:50:48,121 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:50:48,121 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 411, in discover_protocols
    loaded_module
NameError: name 'loaded_module' is not defined

2025-01-17 20:50:48,121 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:50:48,121 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:50:48,121 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:50:48,121 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:51:54,715 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:51:54,715 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:51:54,729 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:51:54,729 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:51:54,729 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:51:54,729 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:51:54,729 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:51:54,729 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:51:54,729 [INFO] praxis.api.protocols - Module: <module 'prance' from '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py'>
2025-01-17 20:51:54,730 [INFO] praxis.api.protocols - Module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x115d7e590>
2025-01-17 20:51:54,730 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:51:54,730 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:51:54,730 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:51:54,730 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'loaded_module' is not defined
2025-01-17 20:51:54,730 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:51:54,730 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 414, in discover_protocols
    loaded_module
NameError: name 'loaded_module' is not defined

2025-01-17 20:51:54,730 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:51:54,730 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:51:54,730 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:51:54,730 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:52:18,634 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:52:18,634 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:52:18,648 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:52:18,648 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:52:18,648 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:52:18,648 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:52:18,648 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:52:18,648 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:52:18,649 [INFO] praxis.api.protocols - Module: <module 'prance' from '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py'>
2025-01-17 20:52:18,649 [INFO] praxis.api.protocols - Module baseline_parameters: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 20:52:18,649 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:52:18,649 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:52:18,649 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:52:18,649 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'loaded_module' is not defined
2025-01-17 20:52:18,649 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:52:18,649 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 414, in discover_protocols
    loaded_module
NameError: name 'loaded_module' is not defined

2025-01-17 20:52:18,649 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:52:18,649 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:52:18,650 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:52:18,650 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:52:31,923 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:52:31,923 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:52:31,936 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:52:31,936 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:52:31,936 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:52:31,936 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:52:31,936 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:52:31,936 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:52:31,936 [INFO] praxis.api.protocols - Module: <module 'prance' from '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py'>
2025-01-17 20:52:31,936 [INFO] praxis.api.protocols - Module baseline_parameters: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 20:52:31,937 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:52:31,937 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:52:31,937 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:52:31,937 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'loaded_module' is not defined
2025-01-17 20:52:31,937 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:52:31,937 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 414, in discover_protocols
    loaded_module
NameError: name 'loaded_module' is not defined

2025-01-17 20:52:31,937 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:52:31,937 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:52:31,937 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:52:31,937 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:52:59,839 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:52:59,840 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:52:59,854 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:52:59,854 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:52:59,854 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:52:59,854 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:52:59,854 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:52:59,854 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:52:59,855 [INFO] praxis.api.protocols - Module: <module 'prance' from '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py'>
2025-01-17 20:52:59,855 [INFO] praxis.api.protocols - Module baseline_parameters: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 20:52:59,855 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:52:59,855 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:52:59,855 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:52:59,855 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'nidyke' is not defined
2025-01-17 20:52:59,855 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:52:59,855 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 413, in discover_protocols
    for obj_name, obj in inspect.getmembers(nidyke):
                                            ^^^^^^
NameError: name 'nidyke' is not defined

2025-01-17 20:52:59,855 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:52:59,855 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:52:59,855 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:52:59,855 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:53:03,135 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:53:03,135 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:53:03,149 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:53:03,149 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:53:03,149 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:53:03,149 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:53:03,149 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:53:03,149 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:53:03,149 [INFO] praxis.api.protocols - Module: <module 'prance' from '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py'>
2025-01-17 20:53:03,149 [INFO] praxis.api.protocols - Module baseline_parameters: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 20:53:03,150 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:53:03,150 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:53:03,150 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:53:03,150 [INFO] praxis.api.protocols - Object name: Any
2025-01-17 20:53:03,150 [INFO] praxis.api.protocols - Object type: <class 'typing._AnyMeta'>
2025-01-17 20:53:03,150 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:53:03,150 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:53:03,150 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:53:03,150 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:53:03,150 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:53:49,703 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:53:49,703 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:53:49,721 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:53:49,721 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:53:49,721 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:53:49,721 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:53:49,721 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:53:49,721 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:53:49,722 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:53:49,722 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:53:49,722 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:53:49,722 [INFO] praxis.api.protocols - Object name: Any
2025-01-17 20:53:49,722 [INFO] praxis.api.protocols - Object type: <class 'typing._AnyMeta'>
2025-01-17 20:53:49,722 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:53:49,722 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:53:49,722 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:53:49,722 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:53:49,722 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:53:59,513 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:53:59,513 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:53:59,528 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:53:59,528 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:53:59,528 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:53:59,528 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:53:59,528 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:53:59,528 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:53:59,529 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:53:59,529 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:53:59,529 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:53:59,529 [INFO] praxis.api.protocols - Object name: Any
2025-01-17 20:53:59,529 [INFO] praxis.api.protocols - Object type: <class 'typing._AnyMeta'>
2025-01-17 20:53:59,529 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:53:59,529 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:53:59,529 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:53:59,529 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:53:59,529 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:58:44,954 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:58:44,954 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:58:44,970 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:58:44,970 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:58:44,970 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:58:44,970 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:58:44,970 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:58:44,970 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:58:44,970 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:58:44,971 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:58:44,971 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:58:44,971 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Any' has no attribute 'initial_input'
2025-01-17 20:58:44,971 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:58:44,971 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 419, in discover_protocols
    f"Baseline parameters instance: {baseline_params.initial_input}"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Any' has no attribute 'initial_input'

2025-01-17 20:58:44,971 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: name 'baseline_params_instance' is not defined
2025-01-17 20:58:44,971 [ERROR] praxis.api.protocols - Error type: <class 'NameError'>
2025-01-17 20:58:44,971 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 439, in discover_protocols
    baseline_params_instance.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'baseline_params_instance' is not defined

2025-01-17 20:58:44,971 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:58:44,971 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:58:44,971 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:58:44,971 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:58:50,674 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:58:50,674 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:58:50,689 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:58:50,689 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:58:50,689 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:58:50,689 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:58:50,689 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:58:50,689 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:58:50,689 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:58:50,690 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:58:50,690 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:58:50,690 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Any' has no attribute 'initial_input'
2025-01-17 20:58:50,690 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:58:50,690 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 419, in discover_protocols
    f"Baseline parameters instance: {baseline_params.initial_input}"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Any' has no attribute 'initial_input'

2025-01-17 20:58:50,690 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: type object 'Any' has no attribute 'get_parameters_for_ui'
2025-01-17 20:58:50,690 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:58:50,690 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 439, in discover_protocols
    baseline_params.get_parameters_for_ui()
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'Any' has no attribute 'get_parameters_for_ui'

2025-01-17 20:58:50,690 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:58:50,690 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:58:50,690 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:58:50,690 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:59:36,430 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:59:36,430 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:59:36,447 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:59:36,447 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:59:36,447 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:59:36,447 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:59:36,447 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:59:36,447 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:59:36,447 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:59:36,448 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:59:36,448 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [WARNING] praxis.api.protocols - No ProtocolParameters instance found in the module
2025-01-17 20:59:36,448 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x11ea7e990>
2025-01-17 20:59:36,449 [INFO] praxis.api.protocols - Baseline parameters instance: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 20:59:36,449 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: Parameter '__name__' not found
2025-01-17 20:59:36,449 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:59:36,449 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 443, in discover_protocols
    "name": obj.__name__,
            ^^^^^^^^^^^^
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/parameter.py", line 122, in __getattr__
    raise AttributeError(f"Parameter '{name}' not found")
AttributeError: Parameter '__name__' not found

2025-01-17 20:59:36,449 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:59:36,449 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:59:36,449 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:59:36,449 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 20:59:48,545 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 20:59:48,545 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 20:59:48,557 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 20:59:48,557 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 20:59:48,557 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:59:48,557 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 20:59:48,557 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 20:59:48,557 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 20:59:48,558 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 20:59:48,558 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 20:59:48,558 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 20:59:48,558 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x127f7e3d0>
2025-01-17 20:59:48,558 [INFO] praxis.api.protocols - Baseline parameters instance: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 20:59:48,558 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: Parameter '__name__' not found
2025-01-17 20:59:48,558 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 20:59:48,558 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 443, in discover_protocols
    "name": obj.__name__,
            ^^^^^^^^^^^^
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/parameter.py", line 122, in __getattr__
    raise AttributeError(f"Parameter '{name}' not found")
AttributeError: Parameter '__name__' not found

2025-01-17 20:59:48,558 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 20:59:48,559 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 20:59:48,559 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 20:59:48,559 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 21:00:27,673 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:00:27,673 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:00:27,685 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:00:27,685 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:00:27,685 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:00:27,685 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:00:27,685 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:00:27,685 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:00:27,686 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:00:27,686 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:00:27,686 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:00:27,686 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x131082310>
2025-01-17 21:00:27,686 [INFO] praxis.api.protocols - Baseline parameters instance: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 21:00:27,686 [ERROR] praxis.api.protocols - Error loading protocol from prance.py: Parameter '__name__' not found
2025-01-17 21:00:27,686 [ERROR] praxis.api.protocols - Error type: <class 'AttributeError'>
2025-01-17 21:00:27,687 [ERROR] praxis.api.protocols - Error traceback: Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 443, in discover_protocols
    "name": obj.__name__,
            ^^^^^^^^^^^^
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/parameter.py", line 122, in __getattr__
    raise AttributeError(f"Parameter '{name}' not found")
AttributeError: Parameter '__name__' not found

2025-01-17 21:00:27,687 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:00:27,687 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:00:27,687 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:00:27,687 [INFO] praxis.api.protocols - 
Returning discovered protocols: []
2025-01-17 21:01:28,700 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:01:28,700 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:01:28,713 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:01:28,713 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:01:28,713 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:01:28,713 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:01:28,713 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:01:28,713 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:01:28,713 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:01:28,714 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:01:28,714 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:01:28,714 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x11f07df10>
2025-01-17 21:01:28,714 [INFO] praxis.api.protocols - Baseline parameters instance: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 21:01:28,714 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:01:28,714 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:01:28,714 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:01:28,714 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:01:28,714 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}]
2025-01-17 21:01:28,714 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:02:16,083 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:02:16,083 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:02:16,098 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:02:16,098 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:02:16,098 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:02:16,098 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:02:16,098 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:02:16,098 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:02:16,099 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:02:16,099 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:02:16,099 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:02:16,099 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x11387e5d0>
2025-01-17 21:02:16,099 [INFO] praxis.api.protocols - Baseline parameters instance: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 21:02:16,100 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}]
2025-01-17 21:02:16,100 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:02:16,100 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:02:16,100 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:02:16,100 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:02:16,100 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}]
2025-01-17 21:02:16,100 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:02:21,138 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:02:21,138 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:02:21,150 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:02:21,150 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:02:21,150 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:02:21,150 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:02:21,150 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:02:21,150 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:02:21,150 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:02:21,150 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:02:21,150 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:02:21,151 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x12487ded0>
2025-01-17 21:02:21,151 [INFO] praxis.api.protocols - Baseline parameters instance: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 21:02:21,151 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}]
2025-01-17 21:02:21,151 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:02:21,151 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:02:21,151 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:02:21,151 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:02:21,151 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}]
2025-01-17 21:02:21,151 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:03:44,065 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:03:44,065 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:03:44,083 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:03:44,083 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:03:44,083 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:03:44,083 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:03:44,083 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:03:44,083 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:03:44,083 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:03:44,084 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:03:44,084 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:03:44,084 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x11d47e8d0>
2025-01-17 21:03:44,084 [INFO] praxis.api.protocols - Baseline parameters instance: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 21:03:44,084 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}]
2025-01-17 21:03:44,084 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:03:44,084 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:03:44,085 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:03:44,085 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:03:44,085 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}]
2025-01-17 21:03:44,085 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:06:07,916 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:06:07,916 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:06:07,930 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:06:07,930 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:06:07,930 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:06:07,930 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:06:07,930 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:06:07,930 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:06:07,930 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:06:07,930 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:06:07,930 [INFO] praxis.api.protocols - Found baseline_parameters in module: <praxis.protocol.parameter.ProtocolParameters object at 0x12367e910>
2025-01-17 21:06:07,930 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:06:07,931 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:06:07,931 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:06:07,931 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:06:07,931 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:06:07,931 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:06:07,931 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:06:24,289 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:06:24,289 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:06:24,328 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:06:24,328 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:06:24,328 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:06:24,328 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:06:24,329 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:06:24,330 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:06:24,331 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:06:24,331 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:06:24,331 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:06:24,331 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x12ab7e390>
2025-01-17 21:06:24,331 [INFO] praxis.api.protocols - Baseline parameters instance: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 21:06:24,332 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}]
2025-01-17 21:06:24,332 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:06:24,332 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:06:24,332 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:06:24,332 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:06:24,333 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}]
2025-01-17 21:06:24,334 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:08:45,743 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:08:45,743 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:08:45,759 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:08:45,760 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:08:45,760 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:08:45,760 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:08:45,760 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:08:45,760 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:08:45,761 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:08:45,761 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:08:45,761 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:08:45,761 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x13667eed0>
2025-01-17 21:08:45,761 [INFO] praxis.api.protocols - Baseline parameters instance: {'tips_staged': {'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False}, 'bacteria_ids': {'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': []}, 'phage_ids': {'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': []}, 'no_phage_control': {'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0}, 'cycle_time': {'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'constraints': {'min_value': 1}}, 'mixing': {'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True}, 'mixing_volume': {'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}
2025-01-17 21:08:45,761 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:08:45,762 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:08:45,762 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:08:45,762 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:08:45,762 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:08:45,762 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:08:45,762 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:09:17,496 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:09:17,496 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:09:17,510 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:09:17,510 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:09:17,510 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:09:17,510 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:09:17,511 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:09:17,511 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:09:17,511 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:09:17,511 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:09:17,511 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:09:17,511 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x12a77e490>
2025-01-17 21:09:17,511 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:09:17,512 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:09:17,512 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:09:17,512 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:09:17,512 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:09:17,512 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:09:17,512 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:09:30,125 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:09:30,125 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:09:30,139 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:09:30,139 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:09:30,139 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:09:30,139 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:09:30,139 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:09:30,139 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:09:30,140 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:09:30,140 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:09:30,140 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:09:30,140 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x13ca7e650>
2025-01-17 21:09:30,140 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:09:30,140 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:09:30,140 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:09:30,140 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:09:30,140 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:09:30,140 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:09:30,140 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:09:41,770 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:09:41,770 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:09:41,783 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:09:41,783 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:09:41,783 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:09:41,783 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:09:41,783 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:09:41,783 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:09:41,783 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:09:41,783 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:09:41,784 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:09:41,784 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x12c17e910>
2025-01-17 21:09:41,784 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:09:41,784 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:09:41,784 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:09:41,784 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:09:41,784 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:09:41,784 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:09:41,784 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:10:37,181 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:10:37,181 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:10:37,198 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:10:37,198 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:10:37,198 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:10:37,198 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:10:37,198 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:10:37,198 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:10:37,198 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:10:37,198 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:10:37,199 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:10:37,199 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x11947e090>
2025-01-17 21:10:37,199 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:10:37,199 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:10:37,199 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:10:37,199 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:10:37,199 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:10:37,199 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:10:37,199 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:10:48,347 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:10:48,347 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:10:48,364 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:10:48,364 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:10:48,364 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:10:48,364 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:10:48,364 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:10:48,364 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:10:48,365 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:10:48,365 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:10:48,365 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the module
2025-01-17 21:10:48,365 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x10f17e450>
2025-01-17 21:10:48,365 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:10:48,365 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:10:48,365 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:10:48,365 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:10:48,365 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:10:48,365 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:10:48,365 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:10:55,485 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:10:55,485 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:10:55,499 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:10:55,499 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:10:55,499 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:10:55,499 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:10:55,499 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:10:55,499 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:10:55,500 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:10:55,500 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:10:55,500 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the module
2025-01-17 21:10:55,500 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x12957e390>
2025-01-17 21:10:55,500 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:10:55,501 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:10:55,501 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:10:55,501 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:10:55,501 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:10:55,501 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:10:55,501 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:11:04,948 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:11:04,948 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:11:04,967 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:11:04,967 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:11:04,967 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:11:04,967 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:11:04,967 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:11:04,967 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:11:04,967 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:11:04,967 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:11:04,967 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the module
2025-01-17 21:11:04,967 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x12787ea50>
2025-01-17 21:11:04,968 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:11:04,970 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:11:04,970 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:11:04,971 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:11:04,971 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:11:04,972 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:11:04,976 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:11:12,350 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:11:12,350 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:11:12,364 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:11:12,364 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:11:12,364 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:11:12,364 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:11:12,364 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:11:12,364 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:11:12,365 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:11:12,365 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:11:12,365 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:11:12,365 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x12ed7e510>
2025-01-17 21:11:12,365 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:11:12,365 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:11:12,365 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:11:12,365 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:11:12,365 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:11:12,366 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:11:12,366 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:11:32,084 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:11:32,084 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:11:32,097 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:11:32,097 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:11:32,097 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:11:32,097 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:11:32,097 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:11:32,097 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:11:32,097 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:11:32,097 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:11:32,097 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:11:32,097 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x12a77ead0>
2025-01-17 21:11:32,097 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:11:32,098 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:11:32,098 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:11:32,098 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:11:32,098 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:11:32,098 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:11:32,098 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:11:38,449 [INFO] praxis.api.protocols - Protocol API module initialized
2025-01-17 21:11:38,449 [DEBUG] praxis.api.protocols - Debug logging is enabled
2025-01-17 21:11:38,463 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:11:38,463 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:11:38,463 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:11:38,463 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:11:38,463 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:11:38,463 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:11:38,463 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:11:38,463 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:11:38,463 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:11:38,463 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x162d7ea10>
2025-01-17 21:11:38,463 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:11:38,464 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:11:38,464 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:11:38,464 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:11:38,464 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:11:38,464 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:11:38,464 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]
2025-01-17 21:19:25,209 [INFO] praxis.api.protocols - 
Handling POST /discover request...
2025-01-17 21:19:25,214 [INFO] praxis.api.protocols - Scanning directories: ['/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols']
2025-01-17 21:19:25,214 [INFO] praxis.api.protocols - Scanning directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:19:25,215 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols
2025-01-17 21:19:25,215 [DEBUG] praxis.api.protocols - Found files: ['prance.py', '__init__.py']
2025-01-17 21:19:25,215 [INFO] praxis.api.protocols - Loading protocol from: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-01-17 21:19:25,280 [DEBUG] praxis.api.protocols - Looking for Protocol subclasses in prance.py
2025-01-17 21:19:25,280 [INFO] praxis.api.protocols - Found protocol: Prance
2025-01-17 21:19:25,281 [DEBUG] praxis.api.protocols - Looking for ProtocolParameters in the same module
2025-01-17 21:19:25,281 [INFO] praxis.api.protocols - Found ProtocolParameters instance: <praxis.protocol.parameter.ProtocolParameters object at 0x162e04810>
2025-01-17 21:19:25,281 [INFO] praxis.api.protocols - Params for UI: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:19:25,281 [DEBUG] praxis.api.protocols - Walking directory: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/__pycache__
2025-01-17 21:19:25,281 [DEBUG] praxis.api.protocols - Found files: ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-01-17 21:19:25,282 [INFO] praxis.api.protocols - 
Final protocols with parameters:
2025-01-17 21:19:25,282 [INFO] praxis.api.protocols - 
Prance:
2025-01-17 21:19:25,282 [INFO] praxis.api.protocols - Parameters: [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}]
2025-01-17 21:19:25,283 [INFO] praxis.api.protocols - 
Returning discovered protocols: [{'name': 'Prance', 'file': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': 'Prance is a complex protocol that requires a lot of setup and teardown. It uses the liquid handler\n    to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n    ', 'parameters': [{'name': 'tips_staged', 'type': 'bool', 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}}, {'name': 'bacteria_ids', 'type': 'list', 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'phage_ids', 'type': 'list', 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}}, {'name': 'no_phage_control', 'type': 'int', 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}}, {'name': 'cycle_time', 'type': 'int', 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'sampling_interval', 'type': 'int', 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}}, {'name': 'mixing', 'type': 'bool', 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}}, {'name': 'mixing_volume', 'type': 'float', 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_speed', 'type': 'float', 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, {'name': 'mixing_cycles', 'type': 'int', 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}}, {'name': 'lagoon_flow_rate', 'type': 'float', 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, {'name': 'washer_volume', 'type': 'float', 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, {'name': 'basin_refill_frequency', 'type': 'int', 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}}, {'name': 'inducer_volume', 'type': 'float', 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}], 'config_fields': {'name': '', 'details': '', 'description': '', 'machines': [], 'liquid_handler_ids': [], 'users': [], 'directory': '', 'deck': '', 'needed_deck_resources': {}, 'other_args': {}}}]

2025-02-21 12:56:55,367 - INFO - Starting application initialization...
2025-02-21 12:56:55,367 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 12:56:55,639 - INFO - Successfully initialized dependencies
2025-02-21 12:57:41,866 - INFO - Starting application shutdown...
2025-02-21 12:57:41,892 - INFO - Successfully closed database connections
2025-02-21 12:57:43,117 - INFO - Starting application initialization...
2025-02-21 12:57:43,117 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 12:57:43,386 - INFO - Successfully initialized dependencies
2025-02-21 12:58:22,997 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 12:58:23,000 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 12:58:23,000 - INFO - Found 2 files
2025-02-21 12:58:23,001 - INFO - ['prance.py', '__init__.py']
2025-02-21 12:58:23,001 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 12:58:23,001 - INFO - Skipping __pycache__ or __init__ file
2025-02-21 12:58:23,001 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 12:58:23,001 - INFO - Skipping __pycache__ or __init__ file
2025-02-21 12:58:23,001 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 12:58:23,001 - INFO - Found 2 files
2025-02-21 12:58:23,001 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 12:58:23,096 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 12:58:23,097 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 12:58:23,097 - INFO - Found 2 files
2025-02-21 12:58:23,097 - INFO - ['prance.py', '__init__.py']
2025-02-21 12:58:23,097 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 12:58:23,097 - INFO - Skipping __pycache__ or __init__ file
2025-02-21 12:58:23,097 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 12:58:23,097 - INFO - Skipping __pycache__ or __init__ file
2025-02-21 12:58:23,097 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 12:58:23,097 - INFO - Found 2 files
2025-02-21 12:58:23,097 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 12:59:45,030 - INFO - Starting application shutdown...
2025-02-21 12:59:45,056 - INFO - Successfully closed database connections
2025-02-21 12:59:47,868 - INFO - Starting application initialization...
2025-02-21 12:59:47,869 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 12:59:48,448 - INFO - Successfully initialized dependencies
2025-02-21 12:59:48,470 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 12:59:48,471 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 12:59:48,471 - INFO - Found 2 files
2025-02-21 12:59:48,471 - INFO - ['prance.py', '__init__.py']
2025-02-21 12:59:48,471 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 12:59:48,472 - INFO - Skipping __pycache__ or __init__ file {filepath}
2025-02-21 12:59:48,472 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 12:59:48,472 - INFO - Skipping __pycache__ or __init__ file {filepath}
2025-02-21 12:59:48,472 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 12:59:48,472 - INFO - Found 2 files
2025-02-21 12:59:48,472 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 12:59:48,486 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 12:59:48,486 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 12:59:48,486 - INFO - Found 2 files
2025-02-21 12:59:48,486 - INFO - ['prance.py', '__init__.py']
2025-02-21 12:59:48,486 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 12:59:48,486 - INFO - Skipping __pycache__ or __init__ file {filepath}
2025-02-21 12:59:48,486 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 12:59:48,486 - INFO - Skipping __pycache__ or __init__ file {filepath}
2025-02-21 12:59:48,487 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 12:59:48,487 - INFO - Found 2 files
2025-02-21 12:59:48,487 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 13:00:09,066 - INFO - Starting application shutdown...
2025-02-21 13:00:09,105 - INFO - Successfully closed database connections
2025-02-21 13:00:10,294 - INFO - Starting application initialization...
2025-02-21 13:00:10,294 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 13:00:10,562 - INFO - Successfully initialized dependencies
2025-02-21 13:00:14,221 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 13:00:14,221 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 13:00:14,221 - INFO - Found 2 files
2025-02-21 13:00:14,221 - INFO - ['prance.py', '__init__.py']
2025-02-21 13:00:14,221 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 13:00:14,221 - INFO - Skipping __pycache__ or __init__ file ./praxis/protocol/protocols/prance.py
2025-02-21 13:00:14,221 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 13:00:14,221 - INFO - Skipping __pycache__ or __init__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 13:00:14,221 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 13:00:14,221 - INFO - Found 2 files
2025-02-21 13:00:14,221 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 13:00:14,233 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 13:00:14,234 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 13:00:14,234 - INFO - Found 2 files
2025-02-21 13:00:14,234 - INFO - ['prance.py', '__init__.py']
2025-02-21 13:00:14,234 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 13:00:14,234 - INFO - Skipping __pycache__ or __init__ file ./praxis/protocol/protocols/prance.py
2025-02-21 13:00:14,235 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 13:00:14,235 - INFO - Skipping __pycache__ or __init__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 13:00:14,235 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 13:00:14,235 - INFO - Found 2 files
2025-02-21 13:00:14,235 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:03:12,927 - INFO - Starting application shutdown...
2025-02-21 15:03:12,930 - INFO - Successfully closed database connections
2025-02-21 15:03:21,745 - INFO - Starting application initialization...
2025-02-21 15:03:21,745 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 15:03:21,986 - INFO - Successfully initialized dependencies
2025-02-21 15:03:44,909 - INFO - Starting application shutdown...
2025-02-21 15:03:44,940 - INFO - Successfully closed database connections
2025-02-21 15:03:45,706 - INFO - Starting application initialization...
2025-02-21 15:03:45,706 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 15:03:45,886 - INFO - Successfully initialized dependencies
2025-02-21 15:03:58,490 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:03:58,490 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:03:58,490 - INFO - Found 2 files
2025-02-21 15:03:58,490 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:03:58,490 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:03:58,490 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x123940b10>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:03:58,494 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:03:58,494 - INFO - Spec: ModuleSpec(name='__init__', loader=<_frozen_importlib_external.SourceFileLoader object at 0x123941990>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/__init__.py')
2025-02-21 15:03:58,495 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:03:58,495 - INFO - Found 2 files
2025-02-21 15:03:58,495 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:03:58,495 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:03:58,495 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:03:58,507 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:03:58,507 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:03:58,507 - INFO - Found 2 files
2025-02-21 15:03:58,507 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:03:58,507 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:03:58,507 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12395a410>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:03:58,508 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:03:58,508 - INFO - Spec: ModuleSpec(name='__init__', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12395ac50>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/__init__.py')
2025-02-21 15:03:58,511 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:03:58,511 - INFO - Found 2 files
2025-02-21 15:03:58,512 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:03:58,512 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:03:58,512 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:08:39,960 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:08:39,961 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:08:39,961 - INFO - Found 2 files
2025-02-21 15:08:39,961 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:08:39,961 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:08:39,962 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x123a51390>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:08:39,966 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:08:39,966 - INFO - Spec: ModuleSpec(name='__init__', loader=<_frozen_importlib_external.SourceFileLoader object at 0x123943c50>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/__init__.py')
2025-02-21 15:08:39,966 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:08:39,966 - INFO - Found 2 files
2025-02-21 15:08:39,966 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:08:39,967 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:08:39,967 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:08:39,984 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:08:39,985 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:08:39,985 - INFO - Found 2 files
2025-02-21 15:08:39,986 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:08:39,986 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:08:39,986 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x123942d10>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:08:39,987 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:08:39,988 - INFO - Spec: ModuleSpec(name='__init__', loader=<_frozen_importlib_external.SourceFileLoader object at 0x1237fdb10>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/__init__.py')
2025-02-21 15:08:39,988 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:08:39,989 - INFO - Found 2 files
2025-02-21 15:08:39,989 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:08:39,989 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:08:39,989 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:23:53,939 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:23:53,940 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:23:53,940 - INFO - Found 2 files
2025-02-21 15:23:53,940 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:23:53,940 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:23:53,940 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x1237d4d90>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:23:53,945 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:23:53,945 - INFO - Spec: ModuleSpec(name='__init__', loader=<_frozen_importlib_external.SourceFileLoader object at 0x1237d5390>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/__init__.py')
2025-02-21 15:23:53,945 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:23:53,945 - INFO - Found 2 files
2025-02-21 15:23:53,945 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:23:53,945 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:23:53,945 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:24:36,335 - INFO - Starting application shutdown...
2025-02-21 15:24:36,339 - INFO - Successfully closed database connections
2025-02-21 15:24:37,455 - INFO - Starting application initialization...
2025-02-21 15:24:37,455 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 15:24:37,645 - INFO - Successfully initialized dependencies
2025-02-21 15:24:40,323 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:24:40,323 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:24:40,324 - INFO - Found 2 files
2025-02-21 15:24:40,324 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:24:40,324 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:24:40,324 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb2bed0>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:24:40,325 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:24:40,325 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:24:40,325 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:24:40,325 - INFO - Found 2 files
2025-02-21 15:24:40,325 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:24:40,325 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:24:40,325 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:24:40,334 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:24:40,335 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:24:40,335 - INFO - Found 2 files
2025-02-21 15:24:40,335 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:24:40,335 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:24:40,335 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb43d50>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:24:40,336 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:24:40,336 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:24:40,336 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:24:40,337 - INFO - Found 2 files
2025-02-21 15:24:40,337 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:24:40,337 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:24:40,337 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:26:20,319 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:26:20,319 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:26:20,319 - INFO - Found 2 files
2025-02-21 15:26:20,319 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:26:20,319 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:26:20,319 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eafc490>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:26:20,320 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:26:20,320 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:26:20,320 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:26:20,320 - INFO - Found 2 files
2025-02-21 15:26:20,320 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:26:20,320 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:26:20,320 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:26:35,999 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:26:36,000 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:26:36,000 - INFO - Found 2 files
2025-02-21 15:26:36,000 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:26:36,000 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:26:36,000 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eae9850>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:26:36,001 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:26:36,001 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:26:36,001 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:26:36,001 - INFO - Found 2 files
2025-02-21 15:26:36,001 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:26:36,001 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:26:36,001 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:26:55,013 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:26:55,013 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:26:55,013 - INFO - Found 2 files
2025-02-21 15:26:55,013 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:26:55,013 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:26:55,013 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb55d50>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:26:55,015 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:26:55,015 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:26:55,015 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:26:55,015 - INFO - Found 2 files
2025-02-21 15:26:55,015 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:26:55,015 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:26:55,015 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:28:54,031 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:28:54,032 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:28:54,032 - INFO - Found 2 files
2025-02-21 15:28:54,032 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:28:54,032 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:28:54,032 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb57e50>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:28:54,034 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:28:54,034 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:28:54,034 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:28:54,034 - INFO - Found 2 files
2025-02-21 15:28:54,034 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:28:54,034 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:28:54,034 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:28:59,039 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:28:59,040 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:28:59,040 - INFO - Found 2 files
2025-02-21 15:28:59,041 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:28:59,041 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:28:59,041 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb4da50>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:28:59,132 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:28:59,132 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:28:59,132 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:28:59,133 - INFO - Found 2 files
2025-02-21 15:28:59,133 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:28:59,136 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:28:59,136 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:29:16,994 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:29:16,995 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:29:16,995 - INFO - Found 2 files
2025-02-21 15:29:16,995 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:29:16,995 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:29:16,995 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb41e50>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:29:16,996 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:29:16,996 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:29:16,997 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:29:16,997 - INFO - Found 2 files
2025-02-21 15:29:16,997 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:29:16,997 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:29:16,997 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:29:28,038 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:29:28,039 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:29:28,039 - INFO - Found 2 files
2025-02-21 15:29:28,039 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:29:28,039 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:29:28,039 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb44ad0>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:29:28,041 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:29:28,041 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:29:28,041 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:29:28,041 - INFO - Found 2 files
2025-02-21 15:29:28,041 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:29:28,041 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:29:28,041 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:29:47,004 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:29:47,004 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:29:47,005 - INFO - Found 2 files
2025-02-21 15:29:47,005 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:29:47,005 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:29:47,005 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb55c90>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:29:47,007 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:29:47,008 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:29:47,008 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:29:47,008 - INFO - Found 2 files
2025-02-21 15:29:47,008 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:29:47,008 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:29:47,008 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:30:32,001 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:30:32,002 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:30:32,002 - INFO - Found 2 files
2025-02-21 15:30:32,002 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:30:32,002 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:30:32,002 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eae83d0>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:30:32,003 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:30:32,003 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:30:32,003 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:30:32,003 - INFO - Found 2 files
2025-02-21 15:30:32,003 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:30:32,003 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:30:32,003 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:31:42,018 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:31:42,019 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:31:42,019 - INFO - Found 2 files
2025-02-21 15:31:42,019 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:31:42,019 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:31:42,019 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eae8710>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:31:42,020 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:31:42,020 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:31:42,020 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:31:42,020 - INFO - Found 2 files
2025-02-21 15:31:42,020 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:31:42,020 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:31:42,020 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:32:33,041 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:32:33,042 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:32:33,042 - INFO - Found 2 files
2025-02-21 15:32:33,042 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:32:33,042 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:32:33,042 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb402d0>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:32:33,051 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:32:33,051 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:32:33,052 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:32:33,053 - INFO - Found 2 files
2025-02-21 15:32:33,053 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:32:33,053 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:32:33,053 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:34:44,020 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:34:44,020 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:34:44,020 - INFO - Found 2 files
2025-02-21 15:34:44,020 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:34:44,020 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:34:44,021 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eae8fd0>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:34:44,024 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:34:44,024 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:34:44,024 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:34:44,024 - INFO - Found 2 files
2025-02-21 15:34:44,024 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:34:44,024 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:34:44,024 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:34:49,021 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:34:49,021 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:34:49,021 - INFO - Found 2 files
2025-02-21 15:34:49,021 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:34:49,021 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:34:49,021 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb427d0>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:34:49,021 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:34:49,021 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:34:49,021 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:34:49,021 - INFO - Found 2 files
2025-02-21 15:34:49,021 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:34:49,021 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:34:49,021 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:34:53,323 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:34:53,324 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:34:53,324 - INFO - Found 2 files
2025-02-21 15:34:53,324 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:34:53,324 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:34:53,324 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb4cd90>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:34:53,325 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:34:53,325 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:34:53,325 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:34:53,325 - INFO - Found 2 files
2025-02-21 15:34:53,325 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:34:53,325 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:34:53,325 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:34:53,335 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:34:53,336 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:34:53,336 - INFO - Found 2 files
2025-02-21 15:34:53,336 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:34:53,336 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:34:53,337 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb4f490>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:34:53,337 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:34:53,338 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:34:53,338 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:34:53,338 - INFO - Found 2 files
2025-02-21 15:34:53,338 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:34:53,338 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:34:53,338 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:37:11,042 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:37:11,043 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:37:11,043 - INFO - Found 2 files
2025-02-21 15:37:11,043 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:37:11,043 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:37:11,043 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb41f50>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:37:11,046 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:37:11,046 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:37:11,046 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:37:11,046 - INFO - Found 2 files
2025-02-21 15:37:11,046 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:37:11,046 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:37:11,046 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:37:11,060 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:37:11,060 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:37:11,061 - INFO - Found 2 files
2025-02-21 15:37:11,061 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:37:11,061 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:37:11,061 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eadfb90>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:37:11,063 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:37:11,063 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:37:11,063 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:37:11,063 - INFO - Found 2 files
2025-02-21 15:37:11,063 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:37:11,063 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:37:11,063 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:40:09,009 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:40:09,010 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:40:09,010 - INFO - Found 2 files
2025-02-21 15:40:09,010 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:40:09,010 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:40:09,010 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eaea150>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:40:09,011 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:09,011 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:09,012 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:40:09,012 - INFO - Found 2 files
2025-02-21 15:40:09,012 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:40:09,012 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:40:09,012 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:40:14,857 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:40:14,858 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:40:14,858 - INFO - Found 2 files
2025-02-21 15:40:14,858 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:40:14,858 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:40:14,858 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb41e10>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:40:14,860 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:14,860 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:14,860 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:40:14,860 - INFO - Found 2 files
2025-02-21 15:40:14,860 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:40:14,860 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:40:14,860 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:40:14,862 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:40:14,862 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:40:14,862 - INFO - Found 2 files
2025-02-21 15:40:14,862 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:40:14,862 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:40:14,862 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12ec5d550>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:40:14,863 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:14,863 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:14,863 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:40:14,863 - INFO - Found 2 files
2025-02-21 15:40:14,863 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:40:14,863 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:40:14,863 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:40:28,207 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:40:28,210 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:40:28,225 - INFO - Found 2 files
2025-02-21 15:40:28,226 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:40:28,227 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:40:28,229 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb43110>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:40:28,239 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:28,239 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:28,239 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:40:28,239 - INFO - Found 2 files
2025-02-21 15:40:28,239 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:40:28,239 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:40:28,239 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:40:28,264 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:40:28,264 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:40:28,264 - INFO - Found 2 files
2025-02-21 15:40:28,264 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:40:28,265 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:40:28,265 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb55550>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:40:28,265 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:28,265 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:28,266 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:40:28,266 - INFO - Found 2 files
2025-02-21 15:40:28,266 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:40:28,266 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:40:28,266 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:40:39,344 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:40:39,350 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:40:39,352 - INFO - Found 2 files
2025-02-21 15:40:39,352 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:40:39,353 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:40:39,353 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eb56ad0>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:40:39,356 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:39,356 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:39,356 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:40:39,356 - INFO - Found 2 files
2025-02-21 15:40:39,356 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:40:39,356 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:40:39,356 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:40:39,381 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:40:39,381 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:40:39,381 - INFO - Found 2 files
2025-02-21 15:40:39,381 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:40:39,381 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:40:39,381 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eae8090>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:40:39,383 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:39,383 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:40:39,383 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:40:39,383 - INFO - Found 2 files
2025-02-21 15:40:39,383 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:40:39,383 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:40:39,383 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:41:30,566 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:41:30,567 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:41:30,567 - INFO - Found 2 files
2025-02-21 15:41:30,567 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:41:30,567 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:41:30,567 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12ec5c550>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:41:30,569 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:41:30,569 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:41:30,569 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:41:30,569 - INFO - Found 2 files
2025-02-21 15:41:30,569 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:41:30,569 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:41:30,569 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:42:51,034 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:42:51,035 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:42:51,035 - INFO - Found 2 files
2025-02-21 15:42:51,035 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:42:51,035 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:42:51,036 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12ec64810>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:42:51,041 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:42:51,041 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:42:51,041 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:42:51,041 - INFO - Found 2 files
2025-02-21 15:42:51,041 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:42:51,041 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:42:51,041 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:42:51,060 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:42:51,060 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:42:51,060 - INFO - Found 2 files
2025-02-21 15:42:51,060 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:42:51,060 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:42:51,060 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12ec5c050>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:42:51,060 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:42:51,060 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:42:51,060 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:42:51,060 - INFO - Found 2 files
2025-02-21 15:42:51,060 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:42:51,060 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:42:51,060 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:48:48,396 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:48:48,416 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:48:48,416 - INFO - Found 2 files
2025-02-21 15:48:48,416 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:48:48,416 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:48:48,418 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eaea150>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:48:48,456 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:48:48,456 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:48:48,460 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:48:48,463 - INFO - Found 2 files
2025-02-21 15:48:48,463 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:48:48,463 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:48:48,463 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:48:48,517 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:48:48,517 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:48:48,518 - INFO - Found 2 files
2025-02-21 15:48:48,518 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:48:48,518 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:48:48,518 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12ec5d790>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:48:48,521 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:48:48,523 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:48:48,526 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:48:48,526 - INFO - Found 2 files
2025-02-21 15:48:48,527 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:48:48,527 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:48:48,527 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:48:50,303 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:48:50,303 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:48:50,303 - INFO - Found 2 files
2025-02-21 15:48:50,303 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:48:50,303 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:48:50,304 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12ec640d0>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:48:50,305 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:48:50,305 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:48:50,305 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:48:50,306 - INFO - Found 2 files
2025-02-21 15:48:50,306 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:48:50,306 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:48:50,306 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:48:50,316 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:48:50,316 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:48:50,316 - INFO - Found 2 files
2025-02-21 15:48:50,316 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:48:50,316 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:48:50,316 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12eadf7d0>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:48:50,317 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:48:50,317 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:48:50,317 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:48:50,317 - INFO - Found 2 files
2025-02-21 15:48:50,317 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:48:50,317 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:48:50,317 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:51:02,055 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:51:02,056 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:51:02,056 - INFO - Found 2 files
2025-02-21 15:51:02,056 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:51:02,056 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:51:02,057 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x12ec5d010>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:51:02,059 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:51:02,059 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:51:02,059 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:51:02,059 - INFO - Found 2 files
2025-02-21 15:51:02,059 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:51:02,059 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:51:02,059 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:51:44,280 - INFO - Starting application shutdown...
2025-02-21 15:51:44,283 - INFO - Successfully closed database connections
2025-02-21 15:51:45,274 - INFO - Starting application initialization...
2025-02-21 15:51:45,274 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 15:51:45,521 - INFO - Successfully initialized dependencies
2025-02-21 15:51:50,047 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:51:50,047 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:51:50,047 - INFO - Found 2 files
2025-02-21 15:51:50,047 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:51:50,047 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:51:50,047 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x134e2f890>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:51:50,048 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:51:50,048 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:51:50,048 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:51:50,048 - INFO - Found 2 files
2025-02-21 15:51:50,048 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:51:50,048 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:51:50,048 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:51:51,022 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:51:51,022 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:51:51,022 - INFO - Found 2 files
2025-02-21 15:51:51,022 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:51:51,022 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:51:51,022 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x134e49790>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:51:51,070 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:51:51,070 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:51:51,070 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:51:51,070 - INFO - Found 2 files
2025-02-21 15:51:51,070 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:51:51,070 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:51:51,070 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:51:56,139 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:51:56,140 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:51:56,140 - INFO - Found 2 files
2025-02-21 15:51:56,140 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:51:56,140 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:51:56,140 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x134def510>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:51:56,141 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:51:56,141 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:51:56,141 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:51:56,141 - INFO - Found 2 files
2025-02-21 15:51:56,141 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:51:56,141 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:51:56,141 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:51:56,147 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:51:56,147 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:51:56,147 - INFO - Found 2 files
2025-02-21 15:51:56,147 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:51:56,147 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:51:56,148 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x134e54610>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:51:56,149 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:51:56,149 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:51:56,149 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:51:56,149 - INFO - Found 2 files
2025-02-21 15:51:56,149 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:51:56,149 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:51:56,149 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:52:51,626 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:52:51,627 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:52:51,627 - INFO - Found 2 files
2025-02-21 15:52:51,627 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:52:51,627 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:52:51,627 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x134e56f10>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:52:51,637 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:52:51,637 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:52:51,637 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:52:51,638 - INFO - Found 2 files
2025-02-21 15:52:51,638 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:52:51,638 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:52:51,638 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:52:51,650 - INFO - Searching in directory: ./praxis/protocol/protocols
2025-02-21 15:52:51,651 - INFO - Searching in ./praxis/protocol/protocols
2025-02-21 15:52:51,651 - INFO - Found 2 files
2025-02-21 15:52:51,651 - INFO - ['prance.py', '__init__.py']
2025-02-21 15:52:51,651 - INFO - Loading protocol from ./praxis/protocol/protocols/prance.py
2025-02-21 15:52:51,651 - INFO - Spec: ModuleSpec(name='prance', loader=<_frozen_importlib_external.SourceFileLoader object at 0x134e42e90>, origin='/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/./praxis/protocol/protocols/prance.py')
2025-02-21 15:52:51,652 - INFO - Loading protocol from ./praxis/protocol/protocols/__init__.py
2025-02-21 15:52:51,652 - INFO - Skipping __pycache__ file ./praxis/protocol/protocols/__init__.py
2025-02-21 15:52:51,652 - INFO - Searching in ./praxis/protocol/protocols/__pycache__
2025-02-21 15:52:51,652 - INFO - Found 2 files
2025-02-21 15:52:51,652 - INFO - ['prance.cpython-311.pyc', '__init__.cpython-311.pyc']
2025-02-21 15:52:51,652 - INFO - Skipping non-Python file prance.cpython-311.pyc or init file
2025-02-21 15:52:51,652 - INFO - Skipping non-Python file __init__.cpython-311.pyc or init file
2025-02-21 15:54:00,289 - INFO - Starting application shutdown...
2025-02-21 15:54:00,314 - INFO - Successfully closed database connections
2025-02-21 15:54:01,210 - INFO - Starting application initialization...
2025-02-21 15:54:01,210 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 15:54:01,394 - INFO - Successfully initialized dependencies
2025-02-21 15:54:30,025 - INFO - Starting application shutdown...
2025-02-21 15:54:30,050 - INFO - Successfully closed database connections
2025-02-21 15:54:30,895 - INFO - Starting application initialization...
2025-02-21 15:54:30,895 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 15:54:31,075 - INFO - Successfully initialized dependencies
2025-02-21 15:57:53,390 - INFO - Starting application shutdown...
2025-02-21 15:57:53,445 - INFO - Successfully closed database connections
2025-02-21 16:08:07,015 - INFO - Starting application initialization...
2025-02-21 16:08:07,015 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 16:08:07,247 - INFO - Successfully initialized dependencies
2025-02-21 16:08:31,328 - INFO - Starting application shutdown...
2025-02-21 16:08:31,353 - INFO - Successfully closed database connections
2025-02-21 16:08:32,202 - INFO - Starting application initialization...
2025-02-21 16:08:32,202 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 16:08:32,392 - INFO - Successfully initialized dependencies
2025-02-21 16:08:41,120 - INFO - Starting application shutdown...
2025-02-21 16:08:41,172 - INFO - Successfully closed database connections
2025-02-21 16:22:44,103 - INFO - Starting application initialization...
2025-02-21 16:22:44,103 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 16:22:44,103 - ERROR - Error during startup: name 'DatabaseManager' is not defined
2025-02-21 16:22:44,103 - INFO - Starting application shutdown...
2025-02-21 16:22:44,103 - INFO - Successfully closed database connections
2025-02-21 16:24:37,964 - INFO - Starting application initialization...
2025-02-21 16:24:37,964 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 16:24:38,235 - INFO - Successfully initialized dependencies
2025-02-21 16:27:26,985 - INFO - Starting application shutdown...
2025-02-21 16:27:27,013 - INFO - Successfully closed database connections
2025-02-21 16:27:28,228 - INFO - Starting application initialization...
2025-02-21 16:27:28,228 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 16:27:28,424 - INFO - Successfully initialized dependencies
2025-02-21 16:32:48,991 - INFO - Starting application shutdown...
2025-02-21 16:32:48,993 - INFO - Successfully closed database connections
2025-02-21 16:32:50,615 - INFO - Starting application initialization...
2025-02-21 16:32:50,615 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 16:32:50,822 - INFO - Successfully initialized dependencies
2025-02-21 16:35:20,961 - INFO - Starting application shutdown...
2025-02-21 16:35:21,020 - INFO - Successfully closed database connections
2025-02-21 16:35:21,996 - INFO - Starting application initialization...
2025-02-21 16:35:21,997 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 16:35:22,235 - INFO - Successfully initialized dependencies
2025-02-21 16:36:34,715 - INFO - Starting application shutdown...
2025-02-21 16:36:34,736 - INFO - Successfully closed database connections
2025-02-21 16:36:35,669 - INFO - Starting application initialization...
2025-02-21 16:36:35,669 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 16:36:35,852 - INFO - Successfully initialized dependencies
2025-02-21 16:37:18,688 - INFO - Starting application shutdown...
2025-02-21 16:37:18,729 - INFO - Successfully closed database connections
2025-02-21 16:37:19,950 - INFO - Starting application initialization...
2025-02-21 16:37:19,950 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 16:37:20,133 - INFO - Successfully initialized dependencies
2025-02-21 16:39:08,287 - INFO - Starting application shutdown...
2025-02-21 16:39:08,319 - INFO - Successfully closed database connections
2025-02-21 16:39:29,025 - INFO - Starting application initialization...
2025-02-21 16:39:29,025 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 16:39:29,265 - INFO - Successfully initialized dependencies
2025-02-21 16:57:39,457 - INFO - Starting application shutdown...
2025-02-21 16:57:39,459 - INFO - Successfully closed database connections
2025-02-21 16:58:01,621 - INFO - Starting application initialization...
2025-02-21 16:58:01,621 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 16:58:01,855 - INFO - Successfully initialized dependencies
2025-02-21 16:58:45,781 - INFO - Starting application shutdown...
2025-02-21 16:58:45,807 - INFO - Successfully closed database connections
2025-02-21 16:58:47,048 - INFO - Starting application initialization...
2025-02-21 16:58:47,048 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 16:58:47,291 - INFO - Successfully initialized dependencies
2025-02-21 17:00:00,638 - INFO - Starting application shutdown...
2025-02-21 17:00:00,662 - INFO - Successfully closed database connections
2025-02-21 17:00:01,520 - INFO - Starting application initialization...
2025-02-21 17:00:01,521 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:00:01,718 - INFO - Successfully initialized dependencies
2025-02-21 17:01:34,534 - INFO - Starting application shutdown...
2025-02-21 17:01:34,581 - INFO - Successfully closed database connections
2025-02-21 17:01:35,547 - INFO - Starting application initialization...
2025-02-21 17:01:35,547 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:01:35,734 - INFO - Successfully initialized dependencies
2025-02-21 17:03:24,711 - INFO - Starting application shutdown...
2025-02-21 17:03:24,735 - INFO - Successfully closed database connections
2025-02-21 17:03:25,586 - INFO - Starting application initialization...
2025-02-21 17:03:25,586 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:03:25,776 - INFO - Successfully initialized dependencies
2025-02-21 17:03:37,733 - INFO - Starting application shutdown...
2025-02-21 17:03:37,752 - INFO - Successfully closed database connections
2025-02-21 17:03:38,560 - INFO - Starting application initialization...
2025-02-21 17:03:38,560 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:03:38,756 - INFO - Successfully initialized dependencies
2025-02-21 17:03:47,172 - INFO - Starting application shutdown...
2025-02-21 17:03:47,208 - INFO - Successfully closed database connections
2025-02-21 17:03:53,413 - INFO - Starting application initialization...
2025-02-21 17:03:53,413 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:03:53,596 - INFO - Successfully initialized dependencies
2025-02-21 17:03:59,832 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:03:59,832 - INFO - Query parameters: {}
2025-02-21 17:03:59,832 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:03:59,832 - INFO - Query parameters: {}
2025-02-21 17:03:59,832 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:03:59,832 - INFO - Query parameters: {}
2025-02-21 17:03:59,911 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:03:59,911 - INFO - Query parameters: {}
2025-02-21 17:03:59,956 - INFO - Response status: 200
2025-02-21 17:04:00,088 - INFO - Response status: 200
2025-02-21 17:04:00,089 - INFO - Response status: 404
2025-02-21 17:04:00,124 - INFO - Response status: 200
2025-02-21 17:04:03,189 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-21 17:04:03,189 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-21 17:04:03,190 - INFO - Response status: 404
2025-02-21 17:04:11,033 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:04:11,033 - INFO - Query parameters: {}
2025-02-21 17:04:11,033 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:04:11,033 - INFO - Query parameters: {}
2025-02-21 17:04:11,033 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:04:11,033 - INFO - Query parameters: {}
2025-02-21 17:04:11,033 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:04:11,033 - INFO - Query parameters: {}
2025-02-21 17:04:11,036 - INFO - Response status: 200
2025-02-21 17:04:11,038 - INFO - Response status: 200
2025-02-21 17:04:11,039 - INFO - Response status: 404
2025-02-21 17:04:11,040 - INFO - Response status: 200
2025-02-21 17:04:45,116 - INFO - Starting application shutdown...
2025-02-21 17:04:45,152 - INFO - Successfully closed database connections
2025-02-21 17:05:19,757 - INFO - Starting application initialization...
2025-02-21 17:05:19,757 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:05:20,082 - INFO - Successfully initialized dependencies
2025-02-21 17:05:30,196 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:05:30,196 - INFO - Query parameters: {}
2025-02-21 17:05:30,197 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:05:30,197 - INFO - Query parameters: {}
2025-02-21 17:05:30,197 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:05:30,197 - INFO - Query parameters: {}
2025-02-21 17:05:30,262 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:05:30,262 - INFO - Query parameters: {}
2025-02-21 17:05:30,265 - INFO - Response status: 200
2025-02-21 17:05:30,266 - INFO - Response status: 200
2025-02-21 17:05:30,266 - INFO - Response status: 404
2025-02-21 17:05:30,268 - INFO - Response status: 200
2025-02-21 17:05:30,273 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:05:30,273 - INFO - Query parameters: {}
2025-02-21 17:05:30,273 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:05:30,274 - INFO - Query parameters: {}
2025-02-21 17:05:30,278 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:05:30,278 - INFO - Query parameters: {}
2025-02-21 17:05:30,279 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:05:30,279 - INFO - Query parameters: {}
2025-02-21 17:05:30,284 - INFO - Response status: 200
2025-02-21 17:05:30,289 - INFO - Response status: 200
2025-02-21 17:05:30,293 - INFO - Response status: 404
2025-02-21 17:05:30,293 - INFO - Response status: 200
2025-02-21 17:05:31,689 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-21 17:05:31,690 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-21 17:05:31,690 - INFO - Response status: 404
2025-02-21 17:06:55,057 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:06:55,058 - INFO - Query parameters: {}
2025-02-21 17:06:55,058 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:06:55,058 - INFO - Query parameters: {}
2025-02-21 17:06:55,058 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:06:55,058 - INFO - Query parameters: {}
2025-02-21 17:06:55,058 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:06:55,058 - INFO - Query parameters: {}
2025-02-21 17:06:55,064 - INFO - Response status: 200
2025-02-21 17:06:55,070 - INFO - Response status: 200
2025-02-21 17:06:55,071 - INFO - Response status: 404
2025-02-21 17:06:55,073 - INFO - Response status: 200
2025-02-21 17:07:02,044 - INFO - Starting application shutdown...
2025-02-21 17:07:02,071 - INFO - Successfully closed database connections
2025-02-21 17:07:02,989 - INFO - Starting application initialization...
2025-02-21 17:07:02,989 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:07:03,186 - INFO - Successfully initialized dependencies
2025-02-21 17:07:13,503 - INFO - Starting application shutdown...
2025-02-21 17:07:13,539 - INFO - Successfully closed database connections
2025-02-21 17:07:14,422 - INFO - Starting application initialization...
2025-02-21 17:07:14,422 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:07:14,609 - INFO - Successfully initialized dependencies
2025-02-21 17:07:23,218 - INFO - Starting application shutdown...
2025-02-21 17:07:23,251 - INFO - Successfully closed database connections
2025-02-21 17:07:24,148 - INFO - Starting application initialization...
2025-02-21 17:07:24,148 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:07:24,336 - INFO - Successfully initialized dependencies
2025-02-21 17:07:28,806 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:07:28,807 - INFO - Query parameters: {}
2025-02-21 17:07:28,807 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:07:28,807 - INFO - Query parameters: {}
2025-02-21 17:07:28,808 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:07:28,808 - INFO - Query parameters: {}
2025-02-21 17:07:28,868 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:07:28,869 - INFO - Query parameters: {}
2025-02-21 17:07:28,871 - INFO - Response status: 200
2025-02-21 17:07:28,872 - INFO - Response status: 200
2025-02-21 17:07:28,872 - INFO - Response status: 404
2025-02-21 17:07:28,873 - INFO - Response status: 200
2025-02-21 17:07:28,876 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:07:28,876 - INFO - Query parameters: {}
2025-02-21 17:07:28,877 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:07:28,877 - INFO - Query parameters: {}
2025-02-21 17:07:28,877 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:07:28,877 - INFO - Query parameters: {}
2025-02-21 17:07:28,880 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:07:28,880 - INFO - Query parameters: {}
2025-02-21 17:07:28,881 - INFO - Response status: 200
2025-02-21 17:07:28,882 - INFO - Response status: 200
2025-02-21 17:07:28,883 - INFO - Response status: 404
2025-02-21 17:07:28,883 - INFO - Response status: 200
2025-02-21 17:07:30,158 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-21 17:07:30,161 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-21 17:07:30,168 - INFO - Response status: 404
2025-02-21 17:07:39,035 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:07:39,035 - INFO - Query parameters: {}
2025-02-21 17:07:39,035 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:07:39,035 - INFO - Query parameters: {}
2025-02-21 17:07:39,035 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:07:39,035 - INFO - Query parameters: {}
2025-02-21 17:07:39,035 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:07:39,035 - INFO - Query parameters: {}
2025-02-21 17:07:39,039 - INFO - Response status: 200
2025-02-21 17:07:39,040 - INFO - Response status: 200
2025-02-21 17:07:39,040 - INFO - Response status: 404
2025-02-21 17:07:39,041 - INFO - Response status: 200
2025-02-21 17:07:56,314 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:07:56,314 - INFO - Query parameters: {}
2025-02-21 17:07:56,314 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:07:56,314 - INFO - Query parameters: {}
2025-02-21 17:07:56,314 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:07:56,314 - INFO - Query parameters: {}
2025-02-21 17:07:56,314 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:07:56,314 - INFO - Query parameters: {}
2025-02-21 17:07:56,318 - INFO - Response status: 200
2025-02-21 17:07:56,320 - INFO - Response status: 200
2025-02-21 17:07:56,321 - INFO - Response status: 404
2025-02-21 17:07:56,323 - INFO - Response status: 200
2025-02-21 17:07:56,327 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:07:56,328 - INFO - Query parameters: {}
2025-02-21 17:07:56,328 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:07:56,328 - INFO - Query parameters: {}
2025-02-21 17:07:56,331 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:07:56,331 - INFO - Query parameters: {}
2025-02-21 17:07:56,331 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:07:56,331 - INFO - Query parameters: {}
2025-02-21 17:07:56,333 - INFO - Response status: 200
2025-02-21 17:07:56,336 - INFO - Response status: 200
2025-02-21 17:07:56,337 - INFO - Response status: 200
2025-02-21 17:07:56,337 - INFO - Response status: 404
2025-02-21 17:08:00,512 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-21 17:08:00,512 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-21 17:08:00,513 - INFO - Response status: 404
2025-02-21 17:08:38,026 - INFO - Starting application shutdown...
2025-02-21 17:08:38,072 - INFO - Successfully closed database connections
2025-02-21 17:08:39,251 - INFO - Starting application initialization...
2025-02-21 17:08:39,251 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:08:39,447 - INFO - Successfully initialized dependencies
2025-02-21 17:09:15,746 - INFO - Starting application shutdown...
2025-02-21 17:09:15,784 - INFO - Successfully closed database connections
2025-02-21 17:09:17,335 - INFO - Starting application initialization...
2025-02-21 17:09:17,335 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:09:17,537 - INFO - Successfully initialized dependencies
2025-02-21 17:09:17,540 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:09:17,540 - INFO - Query parameters: {}
2025-02-21 17:09:17,541 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:09:17,541 - INFO - Query parameters: {}
2025-02-21 17:09:17,541 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:09:17,541 - INFO - Query parameters: {}
2025-02-21 17:09:17,541 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:09:17,541 - INFO - Query parameters: {}
2025-02-21 17:09:17,569 - INFO - Response status: 200
2025-02-21 17:09:17,570 - INFO - Response status: 200
2025-02-21 17:09:17,570 - INFO - Response status: 404
2025-02-21 17:09:17,570 - INFO - Response status: 200
2025-02-21 17:09:17,570 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:09:17,570 - INFO - Query parameters: {}
2025-02-21 17:09:17,571 - INFO - Response status: 200
2025-02-21 17:09:17,575 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:09:17,576 - INFO - Query parameters: {}
2025-02-21 17:09:17,578 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:09:17,578 - INFO - Query parameters: {}
2025-02-21 17:09:17,578 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:09:17,578 - INFO - Query parameters: {}
2025-02-21 17:09:17,579 - INFO - Response status: 200
2025-02-21 17:09:17,581 - INFO - Response status: 404
2025-02-21 17:09:17,581 - INFO - Response status: 200
2025-02-21 17:09:18,786 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-21 17:09:18,786 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-21 17:09:18,786 - INFO - === Protocol Details Request ===
2025-02-21 17:09:18,786 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-21 17:09:18,786 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-21 17:09:18,786 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:09:18,786 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:09:49,789 - INFO - Starting application shutdown...
2025-02-21 17:09:49,815 - INFO - Successfully closed database connections
2025-02-21 17:09:50,849 - INFO - Starting application initialization...
2025-02-21 17:09:50,849 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:09:51,029 - INFO - Successfully initialized dependencies
2025-02-21 17:09:53,752 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:09:53,753 - INFO - Query parameters: {}
2025-02-21 17:09:53,753 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:09:53,755 - INFO - Query parameters: {}
2025-02-21 17:09:53,755 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:09:53,756 - INFO - Query parameters: {}
2025-02-21 17:09:53,756 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:09:53,756 - INFO - Query parameters: {}
2025-02-21 17:09:53,813 - INFO - Response status: 200
2025-02-21 17:09:53,814 - INFO - Response status: 200
2025-02-21 17:09:53,815 - INFO - Response status: 404
2025-02-21 17:09:53,816 - INFO - Response status: 200
2025-02-21 17:09:53,818 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:09:53,818 - INFO - Query parameters: {}
2025-02-21 17:09:53,819 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:09:53,819 - INFO - Query parameters: {}
2025-02-21 17:09:53,820 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:09:53,820 - INFO - Query parameters: {}
2025-02-21 17:09:53,823 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:09:53,823 - INFO - Query parameters: {}
2025-02-21 17:09:53,824 - INFO - Response status: 200
2025-02-21 17:09:53,826 - INFO - Response status: 200
2025-02-21 17:09:53,828 - INFO - Response status: 200
2025-02-21 17:09:53,829 - INFO - Response status: 404
2025-02-21 17:09:55,286 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-21 17:09:55,298 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-21 17:09:55,299 - INFO - === Protocol Details Request ===
2025-02-21 17:09:55,299 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-21 17:09:55,300 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-21 17:09:55,300 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:09:55,300 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:11:06,047 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:11:06,048 - INFO - Query parameters: {}
2025-02-21 17:11:06,048 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:11:06,048 - INFO - Query parameters: {}
2025-02-21 17:11:06,048 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:11:06,048 - INFO - Query parameters: {}
2025-02-21 17:11:06,050 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:11:06,050 - INFO - Query parameters: {}
2025-02-21 17:11:06,054 - INFO - Response status: 200
2025-02-21 17:11:06,057 - INFO - Response status: 200
2025-02-21 17:11:06,058 - INFO - Response status: 404
2025-02-21 17:11:06,060 - INFO - Response status: 200
2025-02-21 17:11:36,950 - INFO - Starting application shutdown...
2025-02-21 17:11:36,987 - INFO - Successfully closed database connections
2025-02-21 17:11:37,915 - INFO - Starting application initialization...
2025-02-21 17:11:37,915 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:11:38,143 - INFO - Successfully initialized dependencies
2025-02-21 17:11:40,981 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:11:40,981 - INFO - Query parameters: {}
2025-02-21 17:11:40,981 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:11:40,981 - INFO - Query parameters: {}
2025-02-21 17:11:40,981 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:11:40,981 - INFO - Query parameters: {}
2025-02-21 17:11:40,981 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:11:40,981 - INFO - Query parameters: {}
2025-02-21 17:11:41,167 - INFO - Response status: 200
2025-02-21 17:11:41,169 - INFO - Response status: 200
2025-02-21 17:11:41,169 - INFO - Response status: 404
2025-02-21 17:11:41,171 - INFO - Response status: 200
2025-02-21 17:11:41,173 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:11:41,173 - INFO - Query parameters: {}
2025-02-21 17:11:41,174 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:11:41,174 - INFO - Query parameters: {}
2025-02-21 17:11:41,175 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:11:41,175 - INFO - Query parameters: {}
2025-02-21 17:11:41,179 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:11:41,179 - INFO - Query parameters: {}
2025-02-21 17:11:41,180 - INFO - Response status: 200
2025-02-21 17:11:41,181 - INFO - Response status: 200
2025-02-21 17:11:41,181 - INFO - Response status: 404
2025-02-21 17:11:41,182 - INFO - Response status: 200
2025-02-21 17:11:43,189 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-21 17:11:43,189 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-21 17:11:43,189 - INFO - === Protocol Details Request ===
2025-02-21 17:11:43,189 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-21 17:11:43,189 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-21 17:11:43,189 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:11:43,189 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:11:43,190 - ERROR - Error getting protocol details: 'property' object is not iterable
Traceback (most recent call last):
  File "/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/api/protocols.py", line 213, in get_protocol_details
    "assets": [
              ^
TypeError: 'property' object is not iterable
2025-02-21 17:11:43,190 - INFO - Response status: 500
2025-02-21 17:13:52,115 - INFO - Starting application shutdown...
2025-02-21 17:13:52,140 - INFO - Successfully closed database connections
2025-02-21 17:13:53,431 - INFO - Starting application initialization...
2025-02-21 17:13:53,431 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:13:53,612 - INFO - Successfully initialized dependencies
2025-02-21 17:14:07,170 - INFO - Starting application shutdown...
2025-02-21 17:14:07,194 - INFO - Successfully closed database connections
2025-02-21 17:14:08,066 - INFO - Starting application initialization...
2025-02-21 17:14:08,066 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:14:08,266 - INFO - Successfully initialized dependencies
2025-02-21 17:15:54,061 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:15:54,062 - INFO - Query parameters: {}
2025-02-21 17:15:54,062 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:15:54,062 - INFO - Query parameters: {}
2025-02-21 17:15:54,062 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:15:54,062 - INFO - Query parameters: {}
2025-02-21 17:15:54,062 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:15:54,062 - INFO - Query parameters: {}
2025-02-21 17:15:54,221 - INFO - Response status: 200
2025-02-21 17:15:54,223 - INFO - Response status: 200
2025-02-21 17:15:54,223 - INFO - Response status: 404
2025-02-21 17:15:54,223 - INFO - Response status: 200
2025-02-21 17:15:55,229 - INFO - Starting application shutdown...
2025-02-21 17:15:55,268 - INFO - Successfully closed database connections
2025-02-21 17:15:56,268 - INFO - Starting application initialization...
2025-02-21 17:15:56,268 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:15:56,468 - INFO - Successfully initialized dependencies
2025-02-21 17:16:00,044 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:16:00,044 - INFO - Query parameters: {}
2025-02-21 17:16:00,044 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:16:00,044 - INFO - Query parameters: {}
2025-02-21 17:16:00,044 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:16:00,044 - INFO - Query parameters: {}
2025-02-21 17:16:00,044 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:16:00,044 - INFO - Query parameters: {}
2025-02-21 17:16:00,096 - INFO - Response status: 200
2025-02-21 17:16:00,098 - INFO - Response status: 200
2025-02-21 17:16:00,100 - INFO - Response status: 404
2025-02-21 17:16:00,105 - INFO - Response status: 200
2025-02-21 17:16:11,560 - INFO - Starting application shutdown...
2025-02-21 17:16:11,589 - INFO - Successfully closed database connections
2025-02-21 17:16:12,408 - INFO - Starting application initialization...
2025-02-21 17:16:12,408 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:16:12,597 - INFO - Successfully initialized dependencies
2025-02-21 17:18:20,992 - INFO - Starting application shutdown...
2025-02-21 17:18:21,024 - INFO - Successfully closed database connections
2025-02-21 17:18:22,125 - INFO - Starting application initialization...
2025-02-21 17:18:22,125 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:18:22,360 - INFO - Successfully initialized dependencies
2025-02-21 17:19:23,111 - INFO - Starting application shutdown...
2025-02-21 17:19:23,143 - INFO - Successfully closed database connections
2025-02-21 17:19:23,986 - INFO - Starting application initialization...
2025-02-21 17:19:23,987 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-21 17:19:24,241 - INFO - Successfully initialized dependencies
2025-02-21 17:20:21,131 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:20:21,132 - INFO - Query parameters: {}
2025-02-21 17:20:21,132 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:20:21,132 - INFO - Query parameters: {}
2025-02-21 17:20:21,132 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:20:21,132 - INFO - Query parameters: {}
2025-02-21 17:20:21,132 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:20:21,132 - INFO - Query parameters: {}
2025-02-21 17:20:21,180 - INFO - Response status: 200
2025-02-21 17:20:21,181 - INFO - Response status: 200
2025-02-21 17:20:21,181 - INFO - Response status: 200
2025-02-21 17:20:21,182 - INFO - Response status: 404
2025-02-21 17:20:21,185 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:20:21,185 - INFO - Query parameters: {}
2025-02-21 17:20:21,186 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:20:21,186 - INFO - Query parameters: {}
2025-02-21 17:20:21,188 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:20:21,188 - INFO - Query parameters: {}
2025-02-21 17:20:21,189 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:20:21,189 - INFO - Query parameters: {}
2025-02-21 17:20:21,192 - INFO - Response status: 200
2025-02-21 17:20:21,194 - INFO - Response status: 200
2025-02-21 17:20:21,196 - INFO - Response status: 404
2025-02-21 17:20:21,197 - INFO - Response status: 200
2025-02-21 17:20:22,466 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-21 17:20:22,466 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-21 17:20:22,467 - INFO - === Protocol Details Request ===
2025-02-21 17:20:22,467 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-21 17:20:22,468 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-21 17:20:22,468 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:20:22,468 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:20:22,468 - INFO - === Protocol Details Request ===
2025-02-21 17:20:22,468 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:20:22,468 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-21 17:20:22,468 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:20:22,468 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:20:22,470 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-21 17:20:22,470 - INFO - Response status: 200
2025-02-21 17:22:11,057 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:22:11,059 - INFO - Query parameters: {}
2025-02-21 17:22:11,060 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:22:11,060 - INFO - Query parameters: {}
2025-02-21 17:22:11,060 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:22:11,060 - INFO - Query parameters: {}
2025-02-21 17:22:11,060 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:22:11,060 - INFO - Query parameters: {}
2025-02-21 17:22:11,065 - INFO - Response status: 200
2025-02-21 17:22:11,067 - INFO - Response status: 200
2025-02-21 17:22:11,067 - INFO - Response status: 404
2025-02-21 17:22:11,068 - INFO - Response status: 200
2025-02-21 17:22:13,349 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:22:13,349 - INFO - Query parameters: {}
2025-02-21 17:22:13,350 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:22:13,350 - INFO - Query parameters: {}
2025-02-21 17:22:13,350 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:22:13,350 - INFO - Query parameters: {}
2025-02-21 17:22:13,350 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:22:13,350 - INFO - Query parameters: {}
2025-02-21 17:22:13,353 - INFO - Response status: 200
2025-02-21 17:22:13,356 - INFO - Response status: 200
2025-02-21 17:22:13,358 - INFO - Response status: 200
2025-02-21 17:22:13,358 - INFO - Response status: 404
2025-02-21 17:22:13,363 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-21 17:22:13,363 - INFO - Query parameters: {}
2025-02-21 17:22:13,363 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-21 17:22:13,364 - INFO - Query parameters: {}
2025-02-21 17:22:13,365 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-21 17:22:13,365 - INFO - Query parameters: {}
2025-02-21 17:22:13,368 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-21 17:22:13,368 - INFO - Query parameters: {}
2025-02-21 17:22:13,372 - INFO - Response status: 200
2025-02-21 17:22:13,385 - INFO - Response status: 200
2025-02-21 17:22:13,393 - INFO - Response status: 404
2025-02-21 17:22:13,398 - INFO - Response status: 200
2025-02-21 17:22:17,263 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-21 17:22:17,263 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-21 17:22:17,263 - INFO - === Protocol Details Request ===
2025-02-21 17:22:17,263 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-21 17:22:17,263 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-21 17:22:17,264 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:22:17,264 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:22:17,264 - INFO - === Protocol Details Request ===
2025-02-21 17:22:17,264 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:22:17,264 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-21 17:22:17,264 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:22:17,264 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-21 17:22:17,264 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-21 17:22:17,265 - INFO - Response status: 200
2025-02-22 15:05:20,556 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:05:20,576 - INFO - Query parameters: {}
2025-02-22 15:05:20,582 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:05:20,582 - INFO - Query parameters: {}
2025-02-22 15:05:20,582 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:05:20,582 - INFO - Query parameters: {}
2025-02-22 15:05:20,583 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:05:20,583 - INFO - Query parameters: {}
2025-02-22 15:05:20,667 - INFO - Response status: 200
2025-02-22 15:05:20,761 - INFO - Response status: 200
2025-02-22 15:05:20,764 - INFO - Response status: 404
2025-02-22 15:05:20,770 - INFO - Response status: 200
2025-02-22 15:05:20,776 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:05:20,776 - INFO - Query parameters: {}
2025-02-22 15:05:20,777 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:05:20,777 - INFO - Query parameters: {}
2025-02-22 15:05:20,809 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:05:20,810 - INFO - Query parameters: {}
2025-02-22 15:05:20,834 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:05:20,835 - INFO - Query parameters: {}
2025-02-22 15:05:20,835 - INFO - Response status: 200
2025-02-22 15:05:20,883 - INFO - Response status: 200
2025-02-22 15:05:20,888 - INFO - Response status: 200
2025-02-22 15:05:20,897 - INFO - Response status: 404
2025-02-22 15:05:22,503 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:05:22,504 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:05:22,504 - INFO - === Protocol Details Request ===
2025-02-22 15:05:22,504 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:05:22,504 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:05:22,505 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:05:22,505 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:05:22,505 - INFO - === Protocol Details Request ===
2025-02-22 15:05:22,505 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:05:22,505 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:05:22,505 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:05:22,505 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:05:22,506 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-22 15:05:22,507 - INFO - Response status: 200
2025-02-22 15:06:58,990 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:06:58,991 - INFO - Query parameters: {}
2025-02-22 15:06:58,993 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:06:58,993 - INFO - Query parameters: {}
2025-02-22 15:06:58,993 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:06:58,993 - INFO - Query parameters: {}
2025-02-22 15:06:58,994 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:06:58,994 - INFO - Query parameters: {}
2025-02-22 15:06:59,049 - INFO - Response status: 200
2025-02-22 15:06:59,055 - INFO - Response status: 200
2025-02-22 15:06:59,056 - INFO - Response status: 404
2025-02-22 15:06:59,062 - INFO - Response status: 200
2025-02-22 15:06:59,067 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:06:59,068 - INFO - Query parameters: {}
2025-02-22 15:06:59,068 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:06:59,068 - INFO - Query parameters: {}
2025-02-22 15:06:59,073 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:06:59,073 - INFO - Query parameters: {}
2025-02-22 15:06:59,075 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:06:59,077 - INFO - Query parameters: {}
2025-02-22 15:06:59,078 - INFO - Response status: 200
2025-02-22 15:06:59,083 - INFO - Response status: 200
2025-02-22 15:06:59,094 - INFO - Response status: 200
2025-02-22 15:06:59,097 - INFO - Response status: 404
2025-02-22 15:07:16,824 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:07:16,826 - INFO - Query parameters: {}
2025-02-22 15:07:16,826 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:07:16,826 - INFO - Query parameters: {}
2025-02-22 15:07:16,827 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:07:16,827 - INFO - Query parameters: {}
2025-02-22 15:07:16,827 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:07:16,827 - INFO - Query parameters: {}
2025-02-22 15:07:16,862 - INFO - Response status: 200
2025-02-22 15:07:16,877 - INFO - Response status: 200
2025-02-22 15:07:16,912 - INFO - Response status: 404
2025-02-22 15:07:16,941 - INFO - Response status: 200
2025-02-22 15:07:44,772 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:07:44,773 - INFO - Query parameters: {}
2025-02-22 15:07:44,773 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:07:44,774 - INFO - Query parameters: {}
2025-02-22 15:07:44,774 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:07:44,774 - INFO - Query parameters: {}
2025-02-22 15:07:44,774 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:07:44,774 - INFO - Query parameters: {}
2025-02-22 15:07:44,805 - INFO - Response status: 200
2025-02-22 15:07:44,808 - INFO - Response status: 200
2025-02-22 15:07:44,808 - INFO - Response status: 404
2025-02-22 15:07:44,809 - INFO - Response status: 200
2025-02-22 15:08:36,783 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:08:36,791 - INFO - Query parameters: {}
2025-02-22 15:08:36,805 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:08:36,812 - INFO - Query parameters: {}
2025-02-22 15:08:36,812 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:08:36,812 - INFO - Query parameters: {}
2025-02-22 15:08:36,813 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:08:36,813 - INFO - Query parameters: {}
2025-02-22 15:08:36,823 - INFO - Response status: 200
2025-02-22 15:08:36,828 - INFO - Response status: 200
2025-02-22 15:08:36,829 - INFO - Response status: 404
2025-02-22 15:08:36,835 - INFO - Response status: 200
2025-02-22 15:09:13,853 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:09:13,884 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:09:13,979 - INFO - === Protocol Details Request ===
2025-02-22 15:09:13,979 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:09:13,979 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:09:13,982 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:13,983 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:13,983 - INFO - === Protocol Details Request ===
2025-02-22 15:09:13,984 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:13,984 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:09:13,984 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:13,984 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:13,993 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-22 15:09:13,998 - INFO - Response status: 200
2025-02-22 15:09:27,942 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:09:28,060 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:09:28,145 - INFO - === Protocol Details Request ===
2025-02-22 15:09:28,146 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:09:28,146 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:09:28,146 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:28,146 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:28,146 - INFO - === Protocol Details Request ===
2025-02-22 15:09:28,146 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:28,146 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:09:28,146 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:28,146 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:28,418 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-22 15:09:28,612 - INFO - Response status: 200
2025-02-22 15:09:31,123 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:09:31,125 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:09:31,139 - INFO - === Protocol Details Request ===
2025-02-22 15:09:31,143 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:09:31,143 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:09:31,143 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:31,143 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:31,145 - INFO - === Protocol Details Request ===
2025-02-22 15:09:31,145 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:31,149 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:09:31,149 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:31,150 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:09:31,182 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-22 15:09:31,335 - INFO - Response status: 200
2025-02-22 15:10:11,887 - INFO - Starting application shutdown...
2025-02-22 15:10:11,890 - INFO - Successfully closed database connections
2025-02-22 15:10:13,951 - INFO - Starting application initialization...
2025-02-22 15:10:13,951 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:10:14,731 - INFO - Successfully initialized dependencies
2025-02-22 15:11:38,998 - INFO - Starting application shutdown...
2025-02-22 15:11:39,039 - INFO - Successfully closed database connections
2025-02-22 15:11:47,877 - INFO - Starting application initialization...
2025-02-22 15:11:47,878 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:11:48,458 - INFO - Successfully initialized dependencies
2025-02-22 15:11:48,467 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:11:48,467 - INFO - Query parameters: {}
2025-02-22 15:11:48,468 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:11:48,468 - INFO - Query parameters: {}
2025-02-22 15:11:48,468 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:11:48,468 - INFO - Query parameters: {}
2025-02-22 15:11:48,468 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:11:48,468 - INFO - Query parameters: {}
2025-02-22 15:11:48,550 - INFO - Response status: 200
2025-02-22 15:11:48,551 - INFO - Response status: 200
2025-02-22 15:11:48,551 - INFO - Response status: 404
2025-02-22 15:11:48,552 - INFO - Response status: 200
2025-02-22 15:11:48,553 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:11:48,553 - INFO - Query parameters: {}
2025-02-22 15:11:48,554 - INFO - Response status: 200
2025-02-22 15:11:48,558 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:11:48,558 - INFO - Query parameters: {}
2025-02-22 15:11:48,558 - INFO - Response status: 200
2025-02-22 15:11:48,564 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:11:48,565 - INFO - Query parameters: {}
2025-02-22 15:11:48,565 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:11:48,565 - INFO - Query parameters: {}
2025-02-22 15:11:48,585 - INFO - Response status: 200
2025-02-22 15:11:48,588 - INFO - Response status: 404
2025-02-22 15:11:49,973 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:11:49,974 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:11:49,974 - INFO - === Protocol Details Request ===
2025-02-22 15:11:49,974 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:11:49,974 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:11:49,974 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:11:49,975 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:11:49,975 - INFO - === Protocol Details Request ===
2025-02-22 15:11:49,975 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:11:49,975 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:11:49,975 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:11:49,975 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:11:49,976 - INFO - === Protocol Details Request ===
2025-02-22 15:11:49,976 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:11:49,976 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 15:11:49,976 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-22 15:11:49,978 - INFO - Response status: 200
2025-02-22 15:15:35,375 - INFO - Starting application shutdown...
2025-02-22 15:15:35,536 - INFO - Successfully closed database connections
2025-02-22 15:15:39,724 - INFO - Starting application initialization...
2025-02-22 15:15:39,724 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:15:40,256 - INFO - Successfully initialized dependencies
2025-02-22 15:15:40,266 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:15:40,266 - INFO - Query parameters: {}
2025-02-22 15:15:40,266 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:15:40,266 - INFO - Query parameters: {}
2025-02-22 15:15:40,266 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:15:40,266 - INFO - Query parameters: {}
2025-02-22 15:15:40,267 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:15:40,267 - INFO - Query parameters: {}
2025-02-22 15:15:40,341 - INFO - Response status: 200
2025-02-22 15:15:40,343 - INFO - Response status: 200
2025-02-22 15:15:40,343 - INFO - Response status: 404
2025-02-22 15:15:40,346 - INFO - Response status: 200
2025-02-22 15:15:40,351 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:15:40,351 - INFO - Query parameters: {}
2025-02-22 15:15:40,362 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:15:40,362 - INFO - Query parameters: {}
2025-02-22 15:15:40,374 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:15:40,374 - INFO - Query parameters: {}
2025-02-22 15:15:40,376 - INFO - Response status: 200
2025-02-22 15:15:40,377 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:15:40,377 - INFO - Query parameters: {}
2025-02-22 15:15:40,379 - INFO - Response status: 200
2025-02-22 15:15:40,380 - INFO - Response status: 200
2025-02-22 15:15:40,389 - INFO - Response status: 404
2025-02-22 15:15:42,193 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:15:42,194 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:15:42,195 - INFO - === Protocol Details Request ===
2025-02-22 15:15:42,195 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:15:42,195 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:15:42,195 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:15:42,195 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:15:42,195 - INFO - === Protocol Details Request ===
2025-02-22 15:15:42,195 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:15:42,195 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:15:42,195 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:15:42,195 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:15:42,196 - INFO - === Protocol Details Request ===
2025-02-22 15:15:42,196 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:15:42,196 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 15:15:42,196 - INFO - Protocol module name: 
2025-02-22 15:15:42,196 - INFO - Protocol module description: 
2025-02-22 15:15:42,196 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x12f036ed0>
2025-02-22 15:15:42,196 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x12f070b10>
2025-02-22 15:15:42,196 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-22 15:15:42,197 - INFO - Response status: 200
2025-02-22 15:17:36,324 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:17:36,347 - INFO - Query parameters: {}
2025-02-22 15:17:36,355 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:17:36,356 - INFO - Query parameters: {}
2025-02-22 15:17:36,356 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:17:36,356 - INFO - Query parameters: {}
2025-02-22 15:17:36,356 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:17:36,356 - INFO - Query parameters: {}
2025-02-22 15:17:36,454 - INFO - Response status: 200
2025-02-22 15:17:36,489 - INFO - Response status: 200
2025-02-22 15:17:36,533 - INFO - Response status: 404
2025-02-22 15:17:36,571 - INFO - Response status: 200
2025-02-22 15:17:36,600 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:17:36,610 - INFO - Query parameters: {}
2025-02-22 15:17:36,636 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:17:36,637 - INFO - Query parameters: {}
2025-02-22 15:17:36,638 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:17:36,638 - INFO - Query parameters: {}
2025-02-22 15:17:36,639 - INFO - Response status: 200
2025-02-22 15:17:36,640 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:17:36,640 - INFO - Query parameters: {}
2025-02-22 15:17:36,648 - INFO - Response status: 200
2025-02-22 15:17:36,663 - INFO - Response status: 404
2025-02-22 15:17:36,664 - INFO - Response status: 200
2025-02-22 15:17:38,405 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:17:38,406 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:17:38,406 - INFO - === Protocol Details Request ===
2025-02-22 15:17:38,408 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:17:38,408 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:17:38,408 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:17:38,408 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:17:38,409 - INFO - === Protocol Details Request ===
2025-02-22 15:17:38,409 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:17:38,409 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:17:38,409 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:17:38,409 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:17:38,409 - INFO - === Protocol Details Request ===
2025-02-22 15:17:38,410 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:17:38,410 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 15:17:38,410 - INFO - Protocol module name: 
2025-02-22 15:17:38,410 - INFO - Protocol module description: 
2025-02-22 15:17:38,410 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x12f07bad0>
2025-02-22 15:17:38,410 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x12f078d90>
2025-02-22 15:17:38,410 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-22 15:17:38,412 - INFO - Response status: 200
2025-02-22 15:17:41,511 - INFO - Starting application shutdown...
2025-02-22 15:17:41,542 - INFO - Successfully closed database connections
2025-02-22 15:17:44,002 - INFO - Starting application initialization...
2025-02-22 15:17:44,003 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:17:44,525 - INFO - Successfully initialized dependencies
2025-02-22 15:19:38,635 - INFO - Starting application shutdown...
2025-02-22 15:19:38,681 - INFO - Successfully closed database connections
2025-02-22 15:20:28,486 - INFO - Starting application initialization...
2025-02-22 15:20:28,486 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:20:29,206 - INFO - Successfully initialized dependencies
2025-02-22 15:20:42,609 - INFO - Starting application shutdown...
2025-02-22 15:20:42,634 - INFO - Successfully closed database connections
2025-02-22 15:20:43,865 - INFO - Starting application initialization...
2025-02-22 15:20:43,865 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:20:44,627 - INFO - Successfully initialized dependencies
2025-02-22 15:21:29,329 - INFO - Starting application shutdown...
2025-02-22 15:21:29,369 - INFO - Successfully closed database connections
2025-02-22 15:21:30,525 - INFO - Starting application initialization...
2025-02-22 15:21:30,525 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:21:30,812 - INFO - Successfully initialized dependencies
2025-02-22 15:21:45,368 - INFO - Starting application shutdown...
2025-02-22 15:21:45,390 - INFO - Successfully closed database connections
2025-02-22 15:21:47,111 - INFO - Starting application initialization...
2025-02-22 15:21:47,111 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:21:47,448 - INFO - Successfully initialized dependencies
2025-02-22 15:22:26,597 - INFO - Starting application shutdown...
2025-02-22 15:22:26,632 - INFO - Successfully closed database connections
2025-02-22 15:22:28,330 - INFO - Starting application initialization...
2025-02-22 15:22:28,331 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:22:28,781 - INFO - Successfully initialized dependencies
2025-02-22 15:22:58,451 - INFO - Starting application shutdown...
2025-02-22 15:22:58,500 - INFO - Successfully closed database connections
2025-02-22 15:22:59,727 - INFO - Starting application initialization...
2025-02-22 15:22:59,727 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:23:00,009 - INFO - Successfully initialized dependencies
2025-02-22 15:24:29,684 - INFO - Starting application shutdown...
2025-02-22 15:24:29,733 - INFO - Successfully closed database connections
2025-02-22 15:24:34,510 - INFO - Starting application initialization...
2025-02-22 15:24:34,511 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:24:35,256 - INFO - Successfully initialized dependencies
2025-02-22 15:25:21,338 - INFO - Starting application shutdown...
2025-02-22 15:25:21,383 - INFO - Successfully closed database connections
2025-02-22 15:25:24,838 - INFO - Starting application initialization...
2025-02-22 15:25:24,838 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:25:25,318 - INFO - Successfully initialized dependencies
2025-02-22 15:25:34,066 - INFO - Starting application shutdown...
2025-02-22 15:25:34,113 - INFO - Successfully closed database connections
2025-02-22 15:25:35,677 - INFO - Starting application initialization...
2025-02-22 15:25:35,677 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:25:36,046 - INFO - Successfully initialized dependencies
2025-02-22 15:25:56,943 - INFO - Starting application shutdown...
2025-02-22 15:25:56,989 - INFO - Successfully closed database connections
2025-02-22 15:26:01,928 - INFO - Starting application initialization...
2025-02-22 15:26:01,928 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:26:02,726 - INFO - Successfully initialized dependencies
2025-02-22 15:26:11,233 - INFO - Starting application shutdown...
2025-02-22 15:26:11,324 - INFO - Successfully closed database connections
2025-02-22 15:26:13,516 - INFO - Starting application initialization...
2025-02-22 15:26:13,516 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:26:14,284 - INFO - Successfully initialized dependencies
2025-02-22 15:26:35,761 - INFO - Starting application shutdown...
2025-02-22 15:26:35,796 - INFO - Successfully closed database connections
2025-02-22 15:26:37,537 - INFO - Starting application initialization...
2025-02-22 15:26:37,537 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:26:37,992 - INFO - Successfully initialized dependencies
2025-02-22 15:27:11,377 - INFO - Starting application shutdown...
2025-02-22 15:27:11,421 - INFO - Successfully closed database connections
2025-02-22 15:27:21,818 - INFO - Starting application initialization...
2025-02-22 15:27:21,819 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:27:22,130 - INFO - Successfully initialized dependencies
2025-02-22 15:28:02,370 - INFO - Starting application shutdown...
2025-02-22 15:28:02,481 - INFO - Successfully closed database connections
2025-02-22 15:28:07,250 - INFO - Starting application initialization...
2025-02-22 15:28:07,250 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:28:07,787 - INFO - Successfully initialized dependencies
2025-02-22 15:28:30,910 - INFO - Starting application shutdown...
2025-02-22 15:28:30,950 - INFO - Successfully closed database connections
2025-02-22 15:29:35,412 - INFO - Starting application initialization...
2025-02-22 15:29:35,412 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:29:35,854 - INFO - Successfully initialized dependencies
2025-02-22 15:30:45,954 - INFO - Starting application shutdown...
2025-02-22 15:30:45,993 - INFO - Successfully closed database connections
2025-02-22 15:30:47,377 - INFO - Starting application initialization...
2025-02-22 15:30:47,377 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:30:47,676 - INFO - Successfully initialized dependencies
2025-02-22 15:30:58,497 - INFO - Starting application shutdown...
2025-02-22 15:30:58,539 - INFO - Successfully closed database connections
2025-02-22 15:31:01,004 - INFO - Starting application initialization...
2025-02-22 15:31:01,004 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:31:01,600 - INFO - Successfully initialized dependencies
2025-02-22 15:31:10,295 - INFO - Starting application shutdown...
2025-02-22 15:31:10,338 - INFO - Successfully closed database connections
2025-02-22 15:31:14,710 - INFO - Starting application initialization...
2025-02-22 15:31:14,710 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:31:15,415 - INFO - Successfully initialized dependencies
2025-02-22 15:32:04,508 - INFO - Starting application shutdown...
2025-02-22 15:32:04,659 - INFO - Successfully closed database connections
2025-02-22 15:32:08,137 - INFO - Starting application initialization...
2025-02-22 15:32:08,138 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:32:08,933 - INFO - Successfully initialized dependencies
2025-02-22 15:32:26,846 - INFO - Starting application shutdown...
2025-02-22 15:32:26,892 - INFO - Successfully closed database connections
2025-02-22 15:32:30,661 - INFO - Starting application initialization...
2025-02-22 15:32:30,661 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:32:31,462 - INFO - Successfully initialized dependencies
2025-02-22 15:32:53,991 - INFO - Starting application shutdown...
2025-02-22 15:32:54,046 - INFO - Successfully closed database connections
2025-02-22 15:32:55,721 - INFO - Starting application initialization...
2025-02-22 15:32:55,721 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:32:56,117 - INFO - Successfully initialized dependencies
2025-02-22 15:33:15,288 - INFO - Starting application shutdown...
2025-02-22 15:33:15,319 - INFO - Successfully closed database connections
2025-02-22 15:33:17,241 - INFO - Starting application initialization...
2025-02-22 15:33:17,241 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:33:17,823 - INFO - Successfully initialized dependencies
2025-02-22 15:33:46,966 - INFO - Starting application shutdown...
2025-02-22 15:33:46,992 - INFO - Successfully closed database connections
2025-02-22 15:33:49,470 - INFO - Starting application initialization...
2025-02-22 15:33:49,470 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:33:49,892 - INFO - Successfully initialized dependencies
2025-02-22 15:35:25,903 - INFO - Starting application shutdown...
2025-02-22 15:35:25,989 - INFO - Successfully closed database connections
2025-02-22 15:35:30,407 - INFO - Starting application initialization...
2025-02-22 15:35:30,407 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:35:31,035 - INFO - Successfully initialized dependencies
2025-02-22 15:36:18,969 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:36:18,970 - INFO - Query parameters: {}
2025-02-22 15:36:18,971 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:36:18,971 - INFO - Query parameters: {}
2025-02-22 15:36:18,978 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:36:18,978 - INFO - Query parameters: {}
2025-02-22 15:36:18,978 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:36:18,978 - INFO - Query parameters: {}
2025-02-22 15:36:19,165 - INFO - Response status: 200
2025-02-22 15:36:19,170 - INFO - Response status: 200
2025-02-22 15:36:19,172 - INFO - Response status: 404
2025-02-22 15:36:19,188 - INFO - Response status: 200
2025-02-22 15:36:26,376 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:36:26,377 - INFO - Query parameters: {}
2025-02-22 15:36:26,380 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:36:26,380 - INFO - Query parameters: {}
2025-02-22 15:36:26,380 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:36:26,380 - INFO - Query parameters: {}
2025-02-22 15:36:26,380 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:36:26,380 - INFO - Query parameters: {}
2025-02-22 15:36:26,386 - INFO - Response status: 200
2025-02-22 15:36:26,463 - INFO - Response status: 200
2025-02-22 15:36:26,526 - INFO - Response status: 200
2025-02-22 15:36:26,538 - INFO - Response status: 404
2025-02-22 15:36:26,552 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:36:26,553 - INFO - Query parameters: {}
2025-02-22 15:36:26,558 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:36:26,559 - INFO - Query parameters: {}
2025-02-22 15:36:26,581 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:36:26,581 - INFO - Query parameters: {}
2025-02-22 15:36:26,585 - INFO - Response status: 200
2025-02-22 15:36:26,586 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:36:26,587 - INFO - Query parameters: {}
2025-02-22 15:36:26,639 - INFO - Response status: 200
2025-02-22 15:36:26,733 - INFO - Response status: 200
2025-02-22 15:36:27,177 - INFO - Response status: 404
2025-02-22 15:36:29,676 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:36:29,677 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:36:29,678 - INFO - === Protocol Details Request ===
2025-02-22 15:36:29,678 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:36:29,678 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:36:29,678 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:36:29,678 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:36:29,678 - INFO - === Protocol Details Request ===
2025-02-22 15:36:29,678 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:36:29,678 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:36:29,678 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:36:29,678 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:36:29,679 - INFO - === Protocol Details Request ===
2025-02-22 15:36:29,679 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:36:29,680 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 15:36:29,680 - INFO - Protocol module name: prance
2025-02-22 15:36:29,680 - INFO - Protocol module description: None
2025-02-22 15:36:29,680 - INFO - Protocol module baseline_parameters: {'tips_staged': {'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, 'bacteria_ids': {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'phage_ids': {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'no_phage_control': {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, 'cycle_time': {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, 'sampling_interval': {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, 'mixing': {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, 'mixing_volume': {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_speed': {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_cycles': {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, 'lagoon_flow_rate': {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, 'washer_volume': {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, 'basin_refill_frequency': {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, 'inducer_volume': {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}}
2025-02-22 15:36:29,680 - INFO - Protocol module required_assets: {'pumps1': {'name': 'pumps1', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 1', 'required': True}, 'pumps2': {'name': 'pumps2', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 2', 'required': True}, 'tip_washer': {'name': 'tip_washer', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Washer for tip cleaning', 'required': True}, 'sample_reservoir': {'name': 'sample_reservoir', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Reservoir for samples', 'required': True}, 'holding': {'name': 'holding', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for holding samples', 'required': True}, 'induced': {'name': 'induced', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for induced samples', 'required': True}, 'lagoons': {'name': 'lagoons', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for lagoon samples', 'required': True}, 'holding_tip_rack': {'name': 'holding_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for holding operations', 'required': True}, 'induced_tip_rack': {'name': 'induced_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for induction operations', 'required': True}, 'lagoon_tip_rack_1': {'name': 'lagoon_tip_rack_1', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'First tip rack for lagoon operations', 'required': True}, 'plate_reader': {'name': 'plate_reader', 'type': <class 'pylabrobot.plate_reading.plate_reader.PlateReader'>, 'description': 'Reader for plate measurements', 'required': True}}
2025-02-22 15:36:29,680 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-22 15:36:29,682 - INFO - Response status: 200
2025-02-22 15:39:46,060 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:39:46,060 - INFO - Query parameters: {}
2025-02-22 15:39:46,061 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:39:46,061 - INFO - Query parameters: {}
2025-02-22 15:39:46,061 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:39:46,061 - INFO - Query parameters: {}
2025-02-22 15:39:46,062 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:39:46,062 - INFO - Query parameters: {}
2025-02-22 15:39:46,194 - INFO - Response status: 200
2025-02-22 15:39:46,290 - INFO - Response status: 200
2025-02-22 15:39:46,291 - INFO - Response status: 404
2025-02-22 15:39:46,292 - INFO - Response status: 200
2025-02-22 15:39:46,300 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:39:46,300 - INFO - Query parameters: {}
2025-02-22 15:39:46,307 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:39:46,307 - INFO - Query parameters: {}
2025-02-22 15:39:46,308 - INFO - Response status: 200
2025-02-22 15:39:46,310 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:39:46,310 - INFO - Query parameters: {}
2025-02-22 15:39:46,311 - INFO - Response status: 200
2025-02-22 15:39:46,314 - INFO - Response status: 404
2025-02-22 15:39:46,632 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:39:46,633 - INFO - Query parameters: {}
2025-02-22 15:39:46,650 - INFO - Response status: 200
2025-02-22 15:39:48,138 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:39:48,139 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:39:48,139 - INFO - === Protocol Details Request ===
2025-02-22 15:39:48,140 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:39:48,140 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:39:48,140 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:39:48,140 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:39:48,140 - INFO - === Protocol Details Request ===
2025-02-22 15:39:48,140 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:39:48,141 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:39:48,141 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:39:48,141 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:39:48,142 - INFO - === Protocol Details Request ===
2025-02-22 15:39:48,142 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:39:48,142 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 15:39:48,142 - INFO - Protocol module name: prance
2025-02-22 15:39:48,142 - INFO - Protocol module description: None
2025-02-22 15:39:48,143 - INFO - Protocol module baseline_parameters: {'tips_staged': {'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, 'bacteria_ids': {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'phage_ids': {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'no_phage_control': {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, 'cycle_time': {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, 'sampling_interval': {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, 'mixing': {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, 'mixing_volume': {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_speed': {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_cycles': {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, 'lagoon_flow_rate': {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, 'washer_volume': {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, 'basin_refill_frequency': {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, 'inducer_volume': {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}}
2025-02-22 15:39:48,144 - INFO - Protocol module required_assets: {'pumps1': {'name': 'pumps1', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 1', 'required': True}, 'pumps2': {'name': 'pumps2', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 2', 'required': True}, 'tip_washer': {'name': 'tip_washer', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Washer for tip cleaning', 'required': True}, 'sample_reservoir': {'name': 'sample_reservoir', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Reservoir for samples', 'required': True}, 'holding': {'name': 'holding', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for holding samples', 'required': True}, 'induced': {'name': 'induced', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for induced samples', 'required': True}, 'lagoons': {'name': 'lagoons', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for lagoon samples', 'required': True}, 'holding_tip_rack': {'name': 'holding_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for holding operations', 'required': True}, 'induced_tip_rack': {'name': 'induced_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for induction operations', 'required': True}, 'lagoon_tip_rack_1': {'name': 'lagoon_tip_rack_1', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'First tip rack for lagoon operations', 'required': True}, 'plate_reader': {'name': 'plate_reader', 'type': <class 'pylabrobot.plate_reading.plate_reader.PlateReader'>, 'description': 'Reader for plate measurements', 'required': True}}
2025-02-22 15:39:48,144 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-22 15:39:48,144 - INFO - Response status: 200
2025-02-22 15:39:49,252 - INFO - Starting application shutdown...
2025-02-22 15:39:49,278 - INFO - Successfully closed database connections
2025-02-22 15:39:51,885 - INFO - Starting application initialization...
2025-02-22 15:39:51,885 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:39:53,024 - INFO - Successfully initialized dependencies
2025-02-22 15:40:17,467 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:40:17,468 - INFO - Query parameters: {}
2025-02-22 15:40:17,468 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:40:17,468 - INFO - Query parameters: {}
2025-02-22 15:40:17,468 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:40:17,468 - INFO - Query parameters: {}
2025-02-22 15:40:17,471 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:40:17,471 - INFO - Query parameters: {}
2025-02-22 15:40:17,577 - INFO - Response status: 200
2025-02-22 15:40:17,581 - INFO - Response status: 200
2025-02-22 15:40:17,582 - INFO - Response status: 404
2025-02-22 15:40:17,585 - INFO - Response status: 200
2025-02-22 15:40:17,590 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:40:17,590 - INFO - Query parameters: {}
2025-02-22 15:40:17,591 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:40:17,591 - INFO - Query parameters: {}
2025-02-22 15:40:17,598 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:40:17,598 - INFO - Query parameters: {}
2025-02-22 15:40:17,602 - INFO - Response status: 200
2025-02-22 15:40:17,602 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:40:17,602 - INFO - Query parameters: {}
2025-02-22 15:40:17,605 - INFO - Response status: 200
2025-02-22 15:40:17,608 - INFO - Response status: 200
2025-02-22 15:40:17,611 - INFO - Response status: 404
2025-02-22 15:40:20,394 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:40:20,395 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:40:20,395 - INFO - === Protocol Details Request ===
2025-02-22 15:40:20,395 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:40:20,395 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:40:20,395 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:40:20,395 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:40:20,395 - INFO - === Protocol Details Request ===
2025-02-22 15:40:20,395 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:40:20,395 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:40:20,395 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:40:20,395 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:40:20,396 - INFO - === Protocol Details Request ===
2025-02-22 15:40:20,396 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:40:20,396 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 15:40:20,396 - INFO - Protocol module name: prance
2025-02-22 15:40:20,396 - INFO - Protocol module description: None
2025-02-22 15:40:20,396 - INFO - Protocol module baseline_parameters: {'tips_staged': {'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, 'bacteria_ids': {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'phage_ids': {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'no_phage_control': {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, 'cycle_time': {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, 'sampling_interval': {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, 'mixing': {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, 'mixing_volume': {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_speed': {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_cycles': {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, 'lagoon_flow_rate': {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, 'washer_volume': {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, 'basin_refill_frequency': {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, 'inducer_volume': {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}}
2025-02-22 15:40:20,396 - INFO - Protocol module required_assets: {'pumps1': {'name': 'pumps1', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 1', 'required': True}, 'pumps2': {'name': 'pumps2', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 2', 'required': True}, 'tip_washer': {'name': 'tip_washer', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Washer for tip cleaning', 'required': True}, 'sample_reservoir': {'name': 'sample_reservoir', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Reservoir for samples', 'required': True}, 'holding': {'name': 'holding', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for holding samples', 'required': True}, 'induced': {'name': 'induced', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for induced samples', 'required': True}, 'lagoons': {'name': 'lagoons', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for lagoon samples', 'required': True}, 'holding_tip_rack': {'name': 'holding_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for holding operations', 'required': True}, 'induced_tip_rack': {'name': 'induced_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for induction operations', 'required': True}, 'lagoon_tip_rack_1': {'name': 'lagoon_tip_rack_1', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'First tip rack for lagoon operations', 'required': True}, 'plate_reader': {'name': 'plate_reader', 'type': <class 'pylabrobot.plate_reading.plate_reader.PlateReader'>, 'description': 'Reader for plate measurements', 'required': True}}
2025-02-22 15:40:20,396 - INFO - Protocol details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': None, 'baseline_parameters': {'tips_staged': {'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, 'bacteria_ids': {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'phage_ids': {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'no_phage_control': {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, 'cycle_time': {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, 'sampling_interval': {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, 'mixing': {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, 'mixing_volume': {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_speed': {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_cycles': {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, 'lagoon_flow_rate': {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, 'washer_volume': {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, 'basin_refill_frequency': {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, 'inducer_volume': {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}}, 'required_assets': {'pumps1': {'name': 'pumps1', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 1', 'required': True}, 'pumps2': {'name': 'pumps2', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 2', 'required': True}, 'tip_washer': {'name': 'tip_washer', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Washer for tip cleaning', 'required': True}, 'sample_reservoir': {'name': 'sample_reservoir', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Reservoir for samples', 'required': True}, 'holding': {'name': 'holding', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for holding samples', 'required': True}, 'induced': {'name': 'induced', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for induced samples', 'required': True}, 'lagoons': {'name': 'lagoons', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for lagoon samples', 'required': True}, 'holding_tip_rack': {'name': 'holding_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for holding operations', 'required': True}, 'induced_tip_rack': {'name': 'induced_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for induction operations', 'required': True}, 'lagoon_tip_rack_1': {'name': 'lagoon_tip_rack_1', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'First tip rack for lagoon operations', 'required': True}, 'plate_reader': {'name': 'plate_reader', 'type': <class 'pylabrobot.plate_reading.plate_reader.PlateReader'>, 'description': 'Reader for plate measurements', 'required': True}}, 'requires_config': False}
2025-02-22 15:40:20,396 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-22 15:40:20,396 - INFO - Response status: 200
2025-02-22 15:44:08,598 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:44:08,600 - INFO - Query parameters: {}
2025-02-22 15:44:08,601 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:44:08,601 - INFO - Query parameters: {}
2025-02-22 15:44:08,601 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:44:08,601 - INFO - Query parameters: {}
2025-02-22 15:44:08,602 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:44:08,602 - INFO - Query parameters: {}
2025-02-22 15:44:08,642 - INFO - Response status: 200
2025-02-22 15:44:08,653 - INFO - Response status: 200
2025-02-22 15:44:08,655 - INFO - Response status: 404
2025-02-22 15:44:08,667 - INFO - Response status: 200
2025-02-22 15:44:08,669 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:44:08,669 - INFO - Query parameters: {}
2025-02-22 15:44:08,672 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:44:08,672 - INFO - Query parameters: {}
2025-02-22 15:44:08,673 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:44:08,673 - INFO - Query parameters: {}
2025-02-22 15:44:08,674 - INFO - Response status: 200
2025-02-22 15:44:08,675 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:44:08,676 - INFO - Query parameters: {}
2025-02-22 15:44:08,686 - INFO - Response status: 200
2025-02-22 15:44:08,691 - INFO - Response status: 200
2025-02-22 15:44:08,692 - INFO - Response status: 404
2025-02-22 15:44:10,242 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:44:10,242 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:44:10,244 - INFO - === Protocol Details Request ===
2025-02-22 15:44:10,244 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:44:10,245 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:44:10,245 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:44:10,245 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:44:10,245 - INFO - === Protocol Details Request ===
2025-02-22 15:44:10,245 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:44:10,245 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:44:10,245 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:44:10,246 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:44:10,247 - INFO - === Protocol Details Request ===
2025-02-22 15:44:10,247 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:44:10,247 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 15:44:10,247 - INFO - Protocol module name: prance
2025-02-22 15:44:10,247 - INFO - Protocol module description: None
2025-02-22 15:44:10,247 - INFO - Protocol module baseline_parameters: {'tips_staged': {'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, 'bacteria_ids': {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'phage_ids': {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'no_phage_control': {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, 'cycle_time': {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, 'sampling_interval': {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, 'mixing': {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, 'mixing_volume': {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_speed': {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_cycles': {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, 'lagoon_flow_rate': {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, 'washer_volume': {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, 'basin_refill_frequency': {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, 'inducer_volume': {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}}
2025-02-22 15:44:10,247 - INFO - Protocol module required_assets: {'pumps1': {'name': 'pumps1', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 1', 'required': True}, 'pumps2': {'name': 'pumps2', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 2', 'required': True}, 'tip_washer': {'name': 'tip_washer', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Washer for tip cleaning', 'required': True}, 'sample_reservoir': {'name': 'sample_reservoir', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Reservoir for samples', 'required': True}, 'holding': {'name': 'holding', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for holding samples', 'required': True}, 'induced': {'name': 'induced', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for induced samples', 'required': True}, 'lagoons': {'name': 'lagoons', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for lagoon samples', 'required': True}, 'holding_tip_rack': {'name': 'holding_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for holding operations', 'required': True}, 'induced_tip_rack': {'name': 'induced_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for induction operations', 'required': True}, 'lagoon_tip_rack_1': {'name': 'lagoon_tip_rack_1', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'First tip rack for lagoon operations', 'required': True}, 'plate_reader': {'name': 'plate_reader', 'type': <class 'pylabrobot.plate_reading.plate_reader.PlateReader'>, 'description': 'Reader for plate measurements', 'required': True}}
2025-02-22 15:44:10,248 - INFO - Protocol details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': None, 'baseline_parameters': {'tips_staged': {'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, 'bacteria_ids': {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'phage_ids': {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'no_phage_control': {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, 'cycle_time': {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, 'sampling_interval': {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, 'mixing': {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, 'mixing_volume': {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_speed': {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_cycles': {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, 'lagoon_flow_rate': {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, 'washer_volume': {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, 'basin_refill_frequency': {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, 'inducer_volume': {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}}, 'required_assets': {'pumps1': {'name': 'pumps1', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 1', 'required': True}, 'pumps2': {'name': 'pumps2', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 2', 'required': True}, 'tip_washer': {'name': 'tip_washer', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Washer for tip cleaning', 'required': True}, 'sample_reservoir': {'name': 'sample_reservoir', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Reservoir for samples', 'required': True}, 'holding': {'name': 'holding', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for holding samples', 'required': True}, 'induced': {'name': 'induced', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for induced samples', 'required': True}, 'lagoons': {'name': 'lagoons', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for lagoon samples', 'required': True}, 'holding_tip_rack': {'name': 'holding_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for holding operations', 'required': True}, 'induced_tip_rack': {'name': 'induced_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for induction operations', 'required': True}, 'lagoon_tip_rack_1': {'name': 'lagoon_tip_rack_1', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'First tip rack for lagoon operations', 'required': True}, 'plate_reader': {'name': 'plate_reader', 'type': <class 'pylabrobot.plate_reading.plate_reader.PlateReader'>, 'description': 'Reader for plate measurements', 'required': True}}, 'requires_config': False}
2025-02-22 15:44:10,248 - INFO - Returning serialized details: {'name': '', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '', 'requires_config': True, 'parameters': {}, 'assets': [], 'has_assets': False, 'has_parameters': False}
2025-02-22 15:44:10,254 - INFO - Response status: 200
2025-02-22 15:44:15,396 - INFO - Starting application shutdown...
2025-02-22 15:44:15,424 - INFO - Successfully closed database connections
2025-02-22 15:44:18,201 - INFO - Starting application initialization...
2025-02-22 15:44:18,201 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:44:18,624 - INFO - Successfully initialized dependencies
2025-02-22 15:44:28,874 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:44:28,893 - INFO - Query parameters: {}
2025-02-22 15:44:28,902 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:44:28,902 - INFO - Query parameters: {}
2025-02-22 15:44:28,902 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:44:28,911 - INFO - Query parameters: {}
2025-02-22 15:44:29,006 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:44:29,006 - INFO - Query parameters: {}
2025-02-22 15:44:29,147 - INFO - Response status: 200
2025-02-22 15:44:29,150 - INFO - Response status: 200
2025-02-22 15:44:29,151 - INFO - Response status: 404
2025-02-22 15:44:29,152 - INFO - Response status: 200
2025-02-22 15:44:29,154 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:44:29,154 - INFO - Query parameters: {}
2025-02-22 15:44:29,166 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:44:29,167 - INFO - Query parameters: {}
2025-02-22 15:44:29,168 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:44:29,168 - INFO - Query parameters: {}
2025-02-22 15:44:29,169 - INFO - Response status: 200
2025-02-22 15:44:29,171 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:44:29,172 - INFO - Query parameters: {}
2025-02-22 15:44:29,174 - INFO - Response status: 200
2025-02-22 15:44:29,176 - INFO - Response status: 200
2025-02-22 15:44:29,182 - INFO - Response status: 404
2025-02-22 15:44:30,114 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:44:30,115 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:44:30,116 - INFO - === Protocol Details Request ===
2025-02-22 15:44:30,116 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:44:30,116 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:44:30,116 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:44:30,116 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:44:30,116 - INFO - === Protocol Details Request ===
2025-02-22 15:44:30,116 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:44:30,116 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:44:30,117 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:44:30,117 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:44:30,117 - INFO - === Protocol Details Request ===
2025-02-22 15:44:30,117 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:44:30,117 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 15:44:30,117 - INFO - Protocol module name: prance
2025-02-22 15:44:30,117 - INFO - Protocol module description: None
2025-02-22 15:44:30,118 - INFO - Protocol module baseline_parameters: {'tips_staged': {'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, 'bacteria_ids': {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'phage_ids': {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'no_phage_control': {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, 'cycle_time': {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, 'sampling_interval': {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, 'mixing': {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, 'mixing_volume': {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_speed': {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_cycles': {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, 'lagoon_flow_rate': {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, 'washer_volume': {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, 'basin_refill_frequency': {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, 'inducer_volume': {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}}
2025-02-22 15:44:30,118 - INFO - Protocol module required_assets: {'pumps1': {'name': 'pumps1', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 1', 'required': True}, 'pumps2': {'name': 'pumps2', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 2', 'required': True}, 'tip_washer': {'name': 'tip_washer', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Washer for tip cleaning', 'required': True}, 'sample_reservoir': {'name': 'sample_reservoir', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Reservoir for samples', 'required': True}, 'holding': {'name': 'holding', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for holding samples', 'required': True}, 'induced': {'name': 'induced', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for induced samples', 'required': True}, 'lagoons': {'name': 'lagoons', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for lagoon samples', 'required': True}, 'holding_tip_rack': {'name': 'holding_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for holding operations', 'required': True}, 'induced_tip_rack': {'name': 'induced_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for induction operations', 'required': True}, 'lagoon_tip_rack_1': {'name': 'lagoon_tip_rack_1', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'First tip rack for lagoon operations', 'required': True}, 'plate_reader': {'name': 'plate_reader', 'type': <class 'pylabrobot.plate_reading.plate_reader.PlateReader'>, 'description': 'Reader for plate measurements', 'required': True}}
2025-02-22 15:44:30,118 - INFO - Protocol details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': None, 'baseline_parameters': {'tips_staged': {'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, 'bacteria_ids': {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'phage_ids': {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'no_phage_control': {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, 'cycle_time': {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, 'sampling_interval': {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, 'mixing': {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, 'mixing_volume': {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_speed': {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_cycles': {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, 'lagoon_flow_rate': {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, 'washer_volume': {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, 'basin_refill_frequency': {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, 'inducer_volume': {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}}, 'required_assets': {'pumps1': {'name': 'pumps1', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 1', 'required': True}, 'pumps2': {'name': 'pumps2', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 2', 'required': True}, 'tip_washer': {'name': 'tip_washer', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Washer for tip cleaning', 'required': True}, 'sample_reservoir': {'name': 'sample_reservoir', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Reservoir for samples', 'required': True}, 'holding': {'name': 'holding', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for holding samples', 'required': True}, 'induced': {'name': 'induced', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for induced samples', 'required': True}, 'lagoons': {'name': 'lagoons', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for lagoon samples', 'required': True}, 'holding_tip_rack': {'name': 'holding_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for holding operations', 'required': True}, 'induced_tip_rack': {'name': 'induced_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for induction operations', 'required': True}, 'lagoon_tip_rack_1': {'name': 'lagoon_tip_rack_1', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'First tip rack for lagoon operations', 'required': True}, 'plate_reader': {'name': 'plate_reader', 'type': <class 'pylabrobot.plate_reading.plate_reader.PlateReader'>, 'description': 'Reader for plate measurements', 'required': True}}, 'requires_config': False}
2025-02-22 15:44:30,118 - ERROR - Invalid type for description: expected <class 'str'>, got <class 'NoneType'>
2025-02-22 15:44:30,118 - INFO - Response status: 500
2025-02-22 15:46:01,346 - INFO - Starting application shutdown...
2025-02-22 15:46:01,370 - INFO - Successfully closed database connections
2025-02-22 15:46:03,265 - INFO - Starting application initialization...
2025-02-22 15:46:03,265 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:46:03,784 - INFO - Successfully initialized dependencies
2025-02-22 15:47:23,570 - INFO - Starting application shutdown...
2025-02-22 15:47:23,596 - INFO - Successfully closed database connections
2025-02-22 15:47:25,202 - INFO - Starting application initialization...
2025-02-22 15:47:25,202 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:47:25,599 - INFO - Successfully initialized dependencies
2025-02-22 15:52:02,974 - INFO - Starting application shutdown...
2025-02-22 15:52:03,017 - INFO - Successfully closed database connections
2025-02-22 15:52:04,144 - INFO - Starting application initialization...
2025-02-22 15:52:04,144 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:52:04,438 - INFO - Successfully initialized dependencies
2025-02-22 15:52:35,940 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:52:35,940 - INFO - Query parameters: {}
2025-02-22 15:52:35,940 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:52:35,941 - INFO - Query parameters: {}
2025-02-22 15:52:35,941 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:52:35,941 - INFO - Query parameters: {}
2025-02-22 15:52:35,943 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:52:35,943 - INFO - Query parameters: {}
2025-02-22 15:52:36,016 - INFO - Response status: 200
2025-02-22 15:52:36,018 - INFO - Response status: 200
2025-02-22 15:52:36,018 - INFO - Response status: 404
2025-02-22 15:52:36,020 - INFO - Response status: 200
2025-02-22 15:52:36,022 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:52:36,022 - INFO - Query parameters: {}
2025-02-22 15:52:36,027 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:52:36,027 - INFO - Query parameters: {}
2025-02-22 15:52:36,027 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:52:36,028 - INFO - Query parameters: {}
2025-02-22 15:52:36,028 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:52:36,029 - INFO - Query parameters: {}
2025-02-22 15:52:36,033 - INFO - Response status: 200
2025-02-22 15:52:36,037 - INFO - Response status: 200
2025-02-22 15:52:36,039 - INFO - Response status: 404
2025-02-22 15:52:36,039 - INFO - Response status: 200
2025-02-22 15:52:41,629 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:52:41,629 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:52:41,630 - INFO - === Protocol Details Request ===
2025-02-22 15:52:41,630 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:52:41,630 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:52:41,630 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:52:41,630 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:52:41,630 - INFO - === Protocol Details Request ===
2025-02-22 15:52:41,630 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:52:41,630 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:52:41,630 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:52:41,630 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:52:41,631 - INFO - === Protocol Details Request ===
2025-02-22 15:52:41,631 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:52:41,631 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 15:52:41,631 - INFO - Protocol module name: prance
2025-02-22 15:52:41,631 - INFO - Protocol module description: 
This module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.
It uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.

Attributes:



2025-02-22 15:52:41,632 - INFO - Protocol module baseline_parameters: {'tips_staged': {'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, 'bacteria_ids': {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'phage_ids': {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'no_phage_control': {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, 'cycle_time': {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, 'sampling_interval': {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, 'mixing': {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, 'mixing_volume': {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_speed': {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_cycles': {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, 'lagoon_flow_rate': {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, 'washer_volume': {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, 'basin_refill_frequency': {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, 'inducer_volume': {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}}
2025-02-22 15:52:41,632 - INFO - Protocol module required_assets: {'pumps1': {'name': 'pumps1', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 1', 'required': True}, 'pumps2': {'name': 'pumps2', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 2', 'required': True}, 'tip_washer': {'name': 'tip_washer', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Washer for tip cleaning', 'required': True}, 'sample_reservoir': {'name': 'sample_reservoir', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Reservoir for samples', 'required': True}, 'holding': {'name': 'holding', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for holding samples', 'required': True}, 'induced': {'name': 'induced', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for induced samples', 'required': True}, 'lagoons': {'name': 'lagoons', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for lagoon samples', 'required': True}, 'holding_tip_rack': {'name': 'holding_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for holding operations', 'required': True}, 'induced_tip_rack': {'name': 'induced_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for induction operations', 'required': True}, 'lagoon_tip_rack_1': {'name': 'lagoon_tip_rack_1', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'First tip rack for lagoon operations', 'required': True}, 'plate_reader': {'name': 'plate_reader', 'type': <class 'pylabrobot.plate_reading.plate_reader.PlateReader'>, 'description': 'Reader for plate measurements', 'required': True}}
2025-02-22 15:52:41,632 - INFO - Protocol details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'baseline_parameters': {'tips_staged': {'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, 'bacteria_ids': {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'phage_ids': {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'no_phage_control': {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, 'cycle_time': {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, 'sampling_interval': {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, 'mixing': {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, 'mixing_volume': {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_speed': {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_cycles': {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, 'lagoon_flow_rate': {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, 'washer_volume': {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, 'basin_refill_frequency': {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, 'inducer_volume': {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}}, 'required_assets': {'pumps1': {'name': 'pumps1', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 1', 'required': True}, 'pumps2': {'name': 'pumps2', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 2', 'required': True}, 'tip_washer': {'name': 'tip_washer', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Washer for tip cleaning', 'required': True}, 'sample_reservoir': {'name': 'sample_reservoir', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Reservoir for samples', 'required': True}, 'holding': {'name': 'holding', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for holding samples', 'required': True}, 'induced': {'name': 'induced', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for induced samples', 'required': True}, 'lagoons': {'name': 'lagoons', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for lagoon samples', 'required': True}, 'holding_tip_rack': {'name': 'holding_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for holding operations', 'required': True}, 'induced_tip_rack': {'name': 'induced_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for induction operations', 'required': True}, 'lagoon_tip_rack_1': {'name': 'lagoon_tip_rack_1', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'First tip rack for lagoon operations', 'required': True}, 'plate_reader': {'name': 'plate_reader', 'type': <class 'pylabrobot.plate_reading.plate_reader.PlateReader'>, 'description': 'Reader for plate measurements', 'required': True}}, 'requires_config': False}
2025-02-22 15:52:41,632 - ERROR - Missing required field: parameters
2025-02-22 15:52:41,632 - INFO - Response status: 500
2025-02-22 15:54:50,918 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:54:50,923 - INFO - Query parameters: {}
2025-02-22 15:54:50,927 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:54:50,927 - INFO - Query parameters: {}
2025-02-22 15:54:50,927 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:54:50,928 - INFO - Query parameters: {}
2025-02-22 15:54:50,928 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:54:50,928 - INFO - Query parameters: {}
2025-02-22 15:54:51,013 - INFO - Response status: 200
2025-02-22 15:54:51,021 - INFO - Response status: 200
2025-02-22 15:54:51,039 - INFO - Response status: 404
2025-02-22 15:54:51,049 - INFO - Response status: 200
2025-02-22 15:54:51,197 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:54:51,197 - INFO - Query parameters: {}
2025-02-22 15:54:51,198 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:54:51,200 - INFO - Query parameters: {}
2025-02-22 15:54:51,288 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:54:51,305 - INFO - Query parameters: {}
2025-02-22 15:54:51,360 - INFO - Response status: 200
2025-02-22 15:54:51,386 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:54:51,386 - INFO - Query parameters: {}
2025-02-22 15:54:51,541 - INFO - Response status: 200
2025-02-22 15:54:51,564 - INFO - Response status: 200
2025-02-22 15:54:51,635 - INFO - Response status: 404
2025-02-22 15:54:53,180 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:54:53,181 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:54:53,183 - INFO - === Protocol Details Request ===
2025-02-22 15:54:53,183 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:54:53,183 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:54:53,183 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:54:53,184 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:54:53,184 - INFO - === Protocol Details Request ===
2025-02-22 15:54:53,184 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:54:53,184 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:54:53,184 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:54:53,184 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:54:53,186 - INFO - === Protocol Details Request ===
2025-02-22 15:54:53,186 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:54:53,186 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 15:54:53,186 - INFO - Protocol module name: prance
2025-02-22 15:54:53,186 - INFO - Protocol module description: 
This module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.
It uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.

Attributes:



2025-02-22 15:54:53,186 - INFO - Protocol module baseline_parameters: {'tips_staged': {'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, 'bacteria_ids': {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'phage_ids': {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'no_phage_control': {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, 'cycle_time': {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, 'sampling_interval': {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, 'mixing': {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, 'mixing_volume': {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_speed': {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_cycles': {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, 'lagoon_flow_rate': {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, 'washer_volume': {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, 'basin_refill_frequency': {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, 'inducer_volume': {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}}
2025-02-22 15:54:53,186 - INFO - Protocol module required_assets: {'pumps1': {'name': 'pumps1', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 1', 'required': True}, 'pumps2': {'name': 'pumps2', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 2', 'required': True}, 'tip_washer': {'name': 'tip_washer', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Washer for tip cleaning', 'required': True}, 'sample_reservoir': {'name': 'sample_reservoir', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Reservoir for samples', 'required': True}, 'holding': {'name': 'holding', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for holding samples', 'required': True}, 'induced': {'name': 'induced', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for induced samples', 'required': True}, 'lagoons': {'name': 'lagoons', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for lagoon samples', 'required': True}, 'holding_tip_rack': {'name': 'holding_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for holding operations', 'required': True}, 'induced_tip_rack': {'name': 'induced_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for induction operations', 'required': True}, 'lagoon_tip_rack_1': {'name': 'lagoon_tip_rack_1', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'First tip rack for lagoon operations', 'required': True}, 'plate_reader': {'name': 'plate_reader', 'type': <class 'pylabrobot.plate_reading.plate_reader.PlateReader'>, 'description': 'Reader for plate measurements', 'required': True}}
2025-02-22 15:54:53,187 - INFO - Protocol details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'baseline_parameters': {'tips_staged': {'name': 'tips_staged', 'type': <class 'bool'>, 'description': 'Whether tips have been staged on the deck', 'default': False, 'required': True, 'constraints': {}, 'current_value': False}, 'bacteria_ids': {'name': 'bacteria_ids', 'type': <class 'list'>, 'description': 'List of bacteria IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'phage_ids': {'name': 'phage_ids', 'type': <class 'list'>, 'description': 'List of phage IDs to use', 'default': [], 'required': True, 'constraints': {}, 'current_value': []}, 'no_phage_control': {'name': 'no_phage_control', 'type': <class 'int'>, 'description': 'Number of no-phage control wells', 'default': 0, 'required': True, 'constraints': {}, 'current_value': 0}, 'cycle_time': {'name': 'cycle_time', 'type': <class 'int'>, 'description': 'Time between cycles in minutes', 'default': 60, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 60}, 'sampling_interval': {'name': 'sampling_interval', 'type': <class 'int'>, 'description': 'Time between samples in minutes', 'default': 30, 'required': True, 'constraints': {'min_value': 1}, 'current_value': 30}, 'mixing': {'name': 'mixing', 'type': <class 'bool'>, 'description': 'Whether to mix samples', 'default': True, 'required': True, 'constraints': {}, 'current_value': True}, 'mixing_volume': {'name': 'mixing_volume', 'type': <class 'float'>, 'description': 'Volume to use for mixing in µL', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_speed': {'name': 'mixing_speed', 'type': <class 'float'>, 'description': 'Speed to use for mixing in µL/s', 'default': 100.0, 'required': True, 'constraints': {'min_value': 10.0, 'max_value': 1000.0}, 'current_value': 100.0}, 'mixing_cycles': {'name': 'mixing_cycles', 'type': <class 'int'>, 'description': 'Number of mixing cycles', 'default': 3, 'required': True, 'constraints': {'min_value': 1, 'max_value': 10}, 'current_value': 3}, 'lagoon_flow_rate': {'name': 'lagoon_flow_rate', 'type': <class 'float'>, 'description': 'Flow rate for lagoon operations in mL/min', 'default': 0.5, 'required': True, 'constraints': {'min_value': 0.1, 'max_value': 5.0}, 'current_value': 0.5}, 'washer_volume': {'name': 'washer_volume', 'type': <class 'float'>, 'description': 'Volume to use for washing in µL', 'default': 1000.0, 'required': True, 'constraints': {'min_value': 100.0, 'max_value': 5000.0}, 'current_value': 1000.0}, 'basin_refill_frequency': {'name': 'basin_refill_frequency', 'type': <class 'int'>, 'description': 'How often to refill the basin in hours', 'default': 24, 'required': True, 'constraints': {'min_value': 1, 'max_value': 72}, 'current_value': 24}, 'inducer_volume': {'name': 'inducer_volume', 'type': <class 'float'>, 'description': 'Volume of inducer to add in µL', 'default': 50.0, 'required': True, 'constraints': {'min_value': 1.0, 'max_value': 1000.0}, 'current_value': 50.0}}, 'required_assets': {'pumps1': {'name': 'pumps1', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 1', 'required': True}, 'pumps2': {'name': 'pumps2', 'type': <class 'pylabrobot.pumps.pumparray.PumpArray'>, 'description': 'Fluidic pump 2', 'required': True}, 'tip_washer': {'name': 'tip_washer', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Washer for tip cleaning', 'required': True}, 'sample_reservoir': {'name': 'sample_reservoir', 'type': <class 'pylabrobot.resources.resource.Resource'>, 'description': 'Reservoir for samples', 'required': True}, 'holding': {'name': 'holding', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for holding samples', 'required': True}, 'induced': {'name': 'induced', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for induced samples', 'required': True}, 'lagoons': {'name': 'lagoons', 'type': <class 'pylabrobot.resources.plate.Plate'>, 'description': 'Plate for lagoon samples', 'required': True}, 'holding_tip_rack': {'name': 'holding_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for holding operations', 'required': True}, 'induced_tip_rack': {'name': 'induced_tip_rack', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'Tip rack for induction operations', 'required': True}, 'lagoon_tip_rack_1': {'name': 'lagoon_tip_rack_1', 'type': <class 'pylabrobot.resources.tip_rack.TipRack'>, 'description': 'First tip rack for lagoon operations', 'required': True}, 'plate_reader': {'name': 'plate_reader', 'type': <class 'pylabrobot.plate_reading.plate_reader.PlateReader'>, 'description': 'Reader for plate measurements', 'required': True}}, 'requires_config': False}
2025-02-22 15:54:53,187 - ERROR - Missing required field: parameters
2025-02-22 15:54:53,187 - INFO - Response status: 500
2025-02-22 15:55:05,011 - INFO - Starting application shutdown...
2025-02-22 15:55:05,057 - INFO - Successfully closed database connections
2025-02-22 15:55:08,968 - INFO - Starting application initialization...
2025-02-22 15:55:08,968 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:55:09,435 - INFO - Successfully initialized dependencies
2025-02-22 15:56:31,474 - INFO - Starting application shutdown...
2025-02-22 15:56:31,504 - INFO - Successfully closed database connections
2025-02-22 15:56:33,784 - INFO - Starting application initialization...
2025-02-22 15:56:33,784 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-22 15:56:34,452 - INFO - Successfully initialized dependencies
2025-02-22 15:56:34,466 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:56:34,467 - INFO - Query parameters: {}
2025-02-22 15:56:34,468 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:56:34,469 - INFO - Query parameters: {}
2025-02-22 15:56:34,470 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:56:34,474 - INFO - Query parameters: {}
2025-02-22 15:56:34,474 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:56:34,475 - INFO - Query parameters: {}
2025-02-22 15:56:34,534 - INFO - Response status: 200
2025-02-22 15:56:34,536 - INFO - Response status: 200
2025-02-22 15:56:34,537 - INFO - Response status: 404
2025-02-22 15:56:34,539 - INFO - Response status: 200
2025-02-22 15:56:34,544 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:56:34,545 - INFO - Query parameters: {}
2025-02-22 15:56:34,545 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:56:34,545 - INFO - Query parameters: {}
2025-02-22 15:56:34,551 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:56:34,551 - INFO - Query parameters: {}
2025-02-22 15:56:34,552 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:56:34,552 - INFO - Query parameters: {}
2025-02-22 15:56:34,553 - INFO - Response status: 200
2025-02-22 15:56:34,556 - INFO - Response status: 200
2025-02-22 15:56:34,558 - INFO - Response status: 200
2025-02-22 15:56:34,559 - INFO - Response status: 404
2025-02-22 15:56:35,822 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 15:56:35,822 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 15:56:35,823 - INFO - === Protocol Details Request ===
2025-02-22 15:56:35,823 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 15:56:35,823 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:56:35,823 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:56:35,823 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:56:35,823 - INFO - === Protocol Details Request ===
2025-02-22 15:56:35,823 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:56:35,823 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 15:56:35,823 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:56:35,823 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:56:35,824 - INFO - === Protocol Details Request ===
2025-02-22 15:56:35,824 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 15:56:35,824 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 15:56:35,824 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ec44290>
2025-02-22 15:56:35,824 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ec44750>
2025-02-22 15:56:35,825 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 15:56:35,825 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 15:56:35,827 - INFO - Response status: 200
2025-02-22 15:58:42,000 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:58:42,001 - INFO - Query parameters: {}
2025-02-22 15:58:42,004 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:58:42,004 - INFO - Query parameters: {}
2025-02-22 15:58:42,004 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:58:42,004 - INFO - Query parameters: {}
2025-02-22 15:58:42,005 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:58:42,005 - INFO - Query parameters: {}
2025-02-22 15:58:42,017 - INFO - Response status: 200
2025-02-22 15:58:42,025 - INFO - Response status: 200
2025-02-22 15:58:42,032 - INFO - Response status: 404
2025-02-22 15:58:42,042 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 15:58:42,043 - INFO - Query parameters: {}
2025-02-22 15:58:42,043 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 15:58:42,044 - INFO - Query parameters: {}
2025-02-22 15:58:42,044 - INFO - Response status: 200
2025-02-22 15:58:42,051 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 15:58:42,051 - INFO - Query parameters: {}
2025-02-22 15:58:42,053 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 15:58:42,053 - INFO - Query parameters: {}
2025-02-22 15:58:42,055 - INFO - Response status: 200
2025-02-22 15:58:42,062 - INFO - Response status: 200
2025-02-22 15:58:42,065 - INFO - Response status: 404
2025-02-22 15:58:42,066 - INFO - Response status: 200
2025-02-22 16:00:33,347 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:00:33,349 - INFO - Query parameters: {}
2025-02-22 16:00:33,350 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:00:33,350 - INFO - Query parameters: {}
2025-02-22 16:00:33,350 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:00:33,352 - INFO - Query parameters: {}
2025-02-22 16:00:33,353 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:00:33,353 - INFO - Query parameters: {}
2025-02-22 16:00:33,408 - INFO - Response status: 200
2025-02-22 16:00:33,434 - INFO - Response status: 200
2025-02-22 16:00:33,435 - INFO - Response status: 404
2025-02-22 16:00:33,452 - INFO - Response status: 200
2025-02-22 16:00:33,468 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:00:33,468 - INFO - Query parameters: {}
2025-02-22 16:00:33,509 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:00:33,509 - INFO - Query parameters: {}
2025-02-22 16:00:33,511 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:00:33,511 - INFO - Query parameters: {}
2025-02-22 16:00:33,512 - INFO - Response status: 200
2025-02-22 16:00:33,512 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:00:33,513 - INFO - Query parameters: {}
2025-02-22 16:00:33,527 - INFO - Response status: 200
2025-02-22 16:00:33,532 - INFO - Response status: 200
2025-02-22 16:00:33,534 - INFO - Response status: 404
2025-02-22 16:00:34,363 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:00:34,364 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:00:34,365 - INFO - === Protocol Details Request ===
2025-02-22 16:00:34,365 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:00:34,365 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:00:34,366 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:00:34,366 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:00:34,366 - INFO - === Protocol Details Request ===
2025-02-22 16:00:34,366 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:00:34,366 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:00:34,366 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:00:34,366 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:00:34,367 - INFO - === Protocol Details Request ===
2025-02-22 16:00:34,367 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:00:34,368 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:00:34,368 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ec8bb90>
2025-02-22 16:00:34,368 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ec88d10>
2025-02-22 16:00:34,368 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:00:34,368 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:00:34,370 - INFO - Response status: 200
2025-02-22 16:00:34,645 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:00:34,647 - INFO - Query parameters: {}
2025-02-22 16:00:34,649 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:00:34,650 - INFO - Query parameters: {}
2025-02-22 16:00:34,651 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:00:34,651 - INFO - Query parameters: {}
2025-02-22 16:00:34,651 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:00:34,651 - INFO - Query parameters: {}
2025-02-22 16:00:34,651 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:00:34,651 - INFO - Query parameters: {}
2025-02-22 16:00:34,761 - INFO - Response status: 500
2025-02-22 16:00:34,761 - INFO - Response status: 500
2025-02-22 16:00:34,766 - INFO - Response status: 500
2025-02-22 16:00:34,767 - INFO - Response status: 500
2025-02-22 16:00:34,768 - INFO - Response status: 500
2025-02-22 16:00:56,339 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:00:56,340 - INFO - Query parameters: {}
2025-02-22 16:00:56,341 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:00:56,341 - INFO - Query parameters: {}
2025-02-22 16:00:56,342 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:00:56,342 - INFO - Query parameters: {}
2025-02-22 16:00:56,342 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:00:56,342 - INFO - Query parameters: {}
2025-02-22 16:00:56,349 - INFO - Response status: 200
2025-02-22 16:00:56,352 - INFO - Response status: 200
2025-02-22 16:00:56,353 - INFO - Response status: 404
2025-02-22 16:00:56,355 - INFO - Response status: 200
2025-02-22 16:00:56,366 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:00:56,366 - INFO - Query parameters: {}
2025-02-22 16:00:56,385 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:00:56,385 - INFO - Query parameters: {}
2025-02-22 16:00:56,392 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:00:56,392 - INFO - Query parameters: {}
2025-02-22 16:00:56,393 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:00:56,393 - INFO - Query parameters: {}
2025-02-22 16:00:56,394 - INFO - Response status: 200
2025-02-22 16:00:56,402 - INFO - Response status: 200
2025-02-22 16:00:56,405 - INFO - Response status: 200
2025-02-22 16:00:56,406 - INFO - Response status: 404
2025-02-22 16:13:12,901 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:13:12,902 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:13:12,909 - INFO - === Protocol Details Request ===
2025-02-22 16:13:12,910 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:13:12,910 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:13:12,911 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:13:12,911 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:13:12,912 - INFO - === Protocol Details Request ===
2025-02-22 16:13:12,913 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:13:12,914 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:13:12,914 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:13:12,914 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:13:12,918 - INFO - === Protocol Details Request ===
2025-02-22 16:13:12,918 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:13:12,918 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:13:12,918 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ec083d0>
2025-02-22 16:13:12,918 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11eaf8790>
2025-02-22 16:13:12,919 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:13:12,919 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:13:12,921 - INFO - Response status: 200
2025-02-22 16:13:13,085 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:13:13,086 - INFO - Query parameters: {}
2025-02-22 16:13:13,139 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:13:13,140 - INFO - Query parameters: {}
2025-02-22 16:13:13,140 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:13:13,140 - INFO - Query parameters: {}
2025-02-22 16:13:13,141 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:13:13,141 - INFO - Query parameters: {}
2025-02-22 16:13:13,142 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:13:13,142 - INFO - Query parameters: {}
2025-02-22 16:13:13,307 - INFO - Response status: 500
2025-02-22 16:13:13,307 - INFO - Response status: 500
2025-02-22 16:13:13,307 - INFO - Response status: 500
2025-02-22 16:13:13,308 - INFO - Response status: 500
2025-02-22 16:13:13,312 - INFO - Response status: 500
2025-02-22 16:15:36,224 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:15:36,236 - INFO - Query parameters: {}
2025-02-22 16:15:36,251 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:15:36,252 - INFO - Query parameters: {}
2025-02-22 16:15:36,290 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:15:36,291 - INFO - Query parameters: {}
2025-02-22 16:15:36,291 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:15:36,291 - INFO - Query parameters: {}
2025-02-22 16:15:36,292 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:15:36,292 - INFO - Query parameters: {}
2025-02-22 16:15:36,308 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:15:36,309 - INFO - Query parameters: {}
2025-02-22 16:15:36,315 - INFO - Response status: 200
2025-02-22 16:15:36,317 - INFO - Response status: 200
2025-02-22 16:15:36,341 - INFO - Response status: 404
2025-02-22 16:15:36,373 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:15:36,373 - INFO - Query parameters: {}
2025-02-22 16:15:36,374 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:15:36,374 - INFO - Query parameters: {}
2025-02-22 16:15:36,374 - INFO - Response status: 200
2025-02-22 16:15:36,388 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:15:36,388 - INFO - Query parameters: {}
2025-02-22 16:15:36,393 - INFO - Response status: 500
2025-02-22 16:15:36,405 - INFO - Response status: 500
2025-02-22 16:15:36,424 - INFO - Response status: 500
2025-02-22 16:15:36,427 - INFO - Response status: 500
2025-02-22 16:15:36,452 - INFO - Response status: 500
2025-02-22 16:16:26,251 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:16:26,253 - INFO - Query parameters: {}
2025-02-22 16:16:26,256 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:16:26,257 - INFO - Query parameters: {}
2025-02-22 16:16:26,257 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:16:26,257 - INFO - Query parameters: {}
2025-02-22 16:16:26,257 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:16:26,257 - INFO - Query parameters: {}
2025-02-22 16:16:26,257 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:16:26,257 - INFO - Query parameters: {}
2025-02-22 16:16:26,257 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:16:26,257 - INFO - Query parameters: {}
2025-02-22 16:16:26,303 - INFO - Response status: 200
2025-02-22 16:16:26,336 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:16:26,336 - INFO - Query parameters: {}
2025-02-22 16:16:26,336 - INFO - Response status: 200
2025-02-22 16:16:26,339 - INFO - Response status: 404
2025-02-22 16:16:26,374 - INFO - Response status: 200
2025-02-22 16:16:26,418 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:16:26,418 - INFO - Query parameters: {}
2025-02-22 16:16:26,418 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:16:26,418 - INFO - Query parameters: {}
2025-02-22 16:16:26,441 - INFO - Response status: 500
2025-02-22 16:16:26,442 - INFO - Response status: 500
2025-02-22 16:16:26,453 - INFO - Response status: 500
2025-02-22 16:16:26,465 - INFO - Response status: 500
2025-02-22 16:16:26,467 - INFO - Response status: 500
2025-02-22 16:16:34,341 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:16:34,342 - INFO - Query parameters: {}
2025-02-22 16:16:34,342 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:16:34,342 - INFO - Query parameters: {}
2025-02-22 16:16:34,343 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:16:34,343 - INFO - Query parameters: {}
2025-02-22 16:16:34,343 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:16:34,344 - INFO - Query parameters: {}
2025-02-22 16:16:34,355 - INFO - Response status: 200
2025-02-22 16:16:34,358 - INFO - Response status: 200
2025-02-22 16:16:34,358 - INFO - Response status: 404
2025-02-22 16:16:34,359 - INFO - Response status: 200
2025-02-22 16:16:34,363 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:16:34,363 - INFO - Query parameters: {}
2025-02-22 16:16:34,364 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:16:34,365 - INFO - Query parameters: {}
2025-02-22 16:16:34,622 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:16:34,624 - INFO - Query parameters: {}
2025-02-22 16:16:34,626 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:16:34,632 - INFO - Query parameters: {}
2025-02-22 16:16:34,634 - INFO - Response status: 200
2025-02-22 16:16:34,674 - INFO - Response status: 200
2025-02-22 16:16:34,676 - INFO - Response status: 200
2025-02-22 16:16:34,704 - INFO - Response status: 404
2025-02-22 16:16:38,004 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:16:38,005 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:16:38,005 - INFO - === Protocol Details Request ===
2025-02-22 16:16:38,006 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:16:38,006 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:16:38,006 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:16:38,006 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:16:38,006 - INFO - === Protocol Details Request ===
2025-02-22 16:16:38,006 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:16:38,006 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:16:38,006 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:16:38,006 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:16:38,007 - INFO - === Protocol Details Request ===
2025-02-22 16:16:38,007 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:16:38,007 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:16:38,007 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ec9da10>
2025-02-22 16:16:38,007 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ec9dd90>
2025-02-22 16:16:38,008 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:16:38,008 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:16:38,009 - INFO - Response status: 200
2025-02-22 16:16:38,178 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:16:38,178 - INFO - Query parameters: {}
2025-02-22 16:16:38,180 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:16:38,181 - INFO - Query parameters: {}
2025-02-22 16:16:38,181 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:16:38,181 - INFO - Query parameters: {}
2025-02-22 16:16:38,181 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:16:38,182 - INFO - Query parameters: {}
2025-02-22 16:16:38,183 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:16:38,183 - INFO - Query parameters: {}
2025-02-22 16:16:38,188 - INFO - Response status: 500
2025-02-22 16:16:38,190 - INFO - Response status: 500
2025-02-22 16:16:38,190 - INFO - Response status: 500
2025-02-22 16:16:38,192 - INFO - Response status: 500
2025-02-22 16:16:38,193 - INFO - Response status: 500
2025-02-22 16:20:48,565 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:20:48,567 - INFO - Query parameters: {}
2025-02-22 16:20:48,568 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:20:48,569 - INFO - Query parameters: {}
2025-02-22 16:20:48,569 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:20:48,569 - INFO - Query parameters: {}
2025-02-22 16:20:48,570 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:20:48,570 - INFO - Query parameters: {}
2025-02-22 16:20:48,588 - INFO - Response status: 200
2025-02-22 16:20:48,680 - INFO - Response status: 200
2025-02-22 16:20:48,687 - INFO - Response status: 404
2025-02-22 16:20:48,692 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:20:48,692 - INFO - Query parameters: {}
2025-02-22 16:20:48,696 - INFO - Response status: 200
2025-02-22 16:20:48,728 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:20:48,728 - INFO - Query parameters: {}
2025-02-22 16:20:48,760 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:20:48,765 - INFO - Query parameters: {}
2025-02-22 16:20:48,767 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:20:48,767 - INFO - Query parameters: {}
2025-02-22 16:20:48,767 - INFO - Response status: 200
2025-02-22 16:20:48,774 - INFO - Response status: 200
2025-02-22 16:20:48,791 - INFO - Response status: 200
2025-02-22 16:20:48,800 - INFO - Response status: 404
2025-02-22 16:20:52,037 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:20:52,038 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:20:52,042 - INFO - === Protocol Details Request ===
2025-02-22 16:20:52,042 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:20:52,050 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:20:52,056 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:20:52,056 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:20:52,057 - INFO - === Protocol Details Request ===
2025-02-22 16:20:52,057 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:20:52,075 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:20:52,075 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:20:52,075 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:20:52,076 - INFO - === Protocol Details Request ===
2025-02-22 16:20:52,076 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:20:52,076 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:20:52,076 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ec88210>
2025-02-22 16:20:52,076 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ec88890>
2025-02-22 16:20:52,077 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:20:52,081 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:20:52,082 - INFO - Response status: 200
2025-02-22 16:20:52,626 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:20:52,626 - INFO - Query parameters: {}
2025-02-22 16:20:52,626 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:20:52,629 - INFO - Query parameters: {}
2025-02-22 16:20:52,631 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:20:52,632 - INFO - Query parameters: {}
2025-02-22 16:20:52,632 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:20:52,632 - INFO - Query parameters: {}
2025-02-22 16:20:52,632 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:20:52,632 - INFO - Query parameters: {}
2025-02-22 16:20:52,727 - INFO - Response status: 500
2025-02-22 16:20:52,728 - INFO - Response status: 500
2025-02-22 16:20:52,729 - INFO - Response status: 500
2025-02-22 16:20:52,730 - INFO - Response status: 500
2025-02-22 16:20:52,732 - INFO - Response status: 500
2025-02-22 16:24:01,841 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:24:01,871 - INFO - Query parameters: {}
2025-02-22 16:24:01,876 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:24:01,880 - INFO - Query parameters: {}
2025-02-22 16:24:01,896 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:24:01,896 - INFO - Query parameters: {}
2025-02-22 16:24:01,897 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:24:01,897 - INFO - Query parameters: {}
2025-02-22 16:24:02,071 - INFO - Response status: 200
2025-02-22 16:24:02,165 - INFO - Response status: 200
2025-02-22 16:24:02,287 - INFO - Response status: 200
2025-02-22 16:24:02,297 - INFO - Response status: 404
2025-02-22 16:24:02,468 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:24:02,481 - INFO - Query parameters: {}
2025-02-22 16:24:02,752 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:24:02,753 - INFO - Query parameters: {}
2025-02-22 16:24:02,755 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:24:02,755 - INFO - Query parameters: {}
2025-02-22 16:24:02,755 - INFO - Response status: 200
2025-02-22 16:24:02,857 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:24:02,896 - INFO - Query parameters: {}
2025-02-22 16:24:03,000 - INFO - Response status: 200
2025-02-22 16:24:03,004 - INFO - Response status: 200
2025-02-22 16:24:03,058 - INFO - Response status: 404
2025-02-22 16:24:05,728 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:24:05,731 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:24:05,732 - INFO - === Protocol Details Request ===
2025-02-22 16:24:05,736 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:24:05,736 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:24:05,736 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:24:05,737 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:24:05,739 - INFO - === Protocol Details Request ===
2025-02-22 16:24:05,739 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:24:05,739 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:24:05,739 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:24:05,740 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:24:05,741 - INFO - === Protocol Details Request ===
2025-02-22 16:24:05,741 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:24:05,741 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:24:05,741 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ec78250>
2025-02-22 16:24:05,741 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ec78e90>
2025-02-22 16:24:05,742 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:24:05,742 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:24:05,744 - INFO - Response status: 200
2025-02-22 16:24:05,921 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:24:05,921 - INFO - Query parameters: {}
2025-02-22 16:24:05,921 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:24:05,921 - INFO - Query parameters: {}
2025-02-22 16:24:05,924 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:24:05,924 - INFO - Query parameters: {}
2025-02-22 16:24:05,924 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:24:05,924 - INFO - Query parameters: {}
2025-02-22 16:24:05,926 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:24:05,926 - INFO - Query parameters: {}
2025-02-22 16:24:05,936 - INFO - Response status: 500
2025-02-22 16:24:05,936 - INFO - Response status: 500
2025-02-22 16:24:05,937 - INFO - Response status: 500
2025-02-22 16:24:05,938 - INFO - Response status: 500
2025-02-22 16:24:05,939 - INFO - Response status: 500
2025-02-22 16:32:12,077 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:32:12,080 - INFO - Query parameters: {}
2025-02-22 16:32:12,082 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:32:12,082 - INFO - Query parameters: {}
2025-02-22 16:32:12,082 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:32:12,082 - INFO - Query parameters: {}
2025-02-22 16:32:12,083 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:32:12,083 - INFO - Query parameters: {}
2025-02-22 16:32:12,083 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:32:12,083 - INFO - Query parameters: {}
2025-02-22 16:32:12,083 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:32:12,083 - INFO - Query parameters: {}
2025-02-22 16:32:12,145 - INFO - Response status: 200
2025-02-22 16:32:12,158 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:32:12,160 - INFO - Query parameters: {}
2025-02-22 16:32:12,161 - INFO - Response status: 200
2025-02-22 16:32:12,161 - INFO - Response status: 404
2025-02-22 16:32:12,172 - INFO - Response status: 200
2025-02-22 16:32:12,184 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:32:12,186 - INFO - Query parameters: {}
2025-02-22 16:32:12,187 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:32:12,187 - INFO - Query parameters: {}
2025-02-22 16:32:12,543 - INFO - Response status: 500
2025-02-22 16:32:12,550 - INFO - Response status: 500
2025-02-22 16:32:12,554 - INFO - Response status: 500
2025-02-22 16:32:12,555 - INFO - Response status: 500
2025-02-22 16:32:12,559 - INFO - Response status: 500
2025-02-22 16:34:20,458 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:34:20,463 - INFO - Query parameters: {}
2025-02-22 16:34:20,464 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:34:20,464 - INFO - Query parameters: {}
2025-02-22 16:34:20,465 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:34:20,465 - INFO - Query parameters: {}
2025-02-22 16:34:20,465 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:34:20,465 - INFO - Query parameters: {}
2025-02-22 16:34:20,481 - INFO - Response status: 200
2025-02-22 16:34:20,489 - INFO - Response status: 200
2025-02-22 16:34:20,490 - INFO - Response status: 404
2025-02-22 16:34:20,504 - INFO - Response status: 200
2025-02-22 16:34:20,717 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:34:20,752 - INFO - Query parameters: {}
2025-02-22 16:34:20,786 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:34:20,786 - INFO - Query parameters: {}
2025-02-22 16:34:20,792 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:34:20,792 - INFO - Query parameters: {}
2025-02-22 16:34:20,793 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:34:20,793 - INFO - Query parameters: {}
2025-02-22 16:34:20,793 - INFO - Response status: 200
2025-02-22 16:34:20,798 - INFO - Response status: 200
2025-02-22 16:34:21,036 - INFO - Response status: 200
2025-02-22 16:34:21,038 - INFO - Response status: 404
2025-02-22 16:34:22,348 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:34:22,349 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:34:22,349 - INFO - === Protocol Details Request ===
2025-02-22 16:34:22,349 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:34:22,349 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:34:22,349 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:34:22,349 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:34:22,349 - INFO - === Protocol Details Request ===
2025-02-22 16:34:22,349 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:34:22,350 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:34:22,350 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:34:22,350 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:34:22,350 - INFO - === Protocol Details Request ===
2025-02-22 16:34:22,350 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:34:22,350 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:34:22,350 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ec61110>
2025-02-22 16:34:22,351 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ec7a4d0>
2025-02-22 16:34:22,351 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:34:22,351 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:34:22,352 - INFO - Response status: 200
2025-02-22 16:34:22,661 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:34:22,661 - INFO - Query parameters: {}
2025-02-22 16:34:22,672 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:34:22,672 - INFO - Query parameters: {}
2025-02-22 16:34:22,674 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:34:22,675 - INFO - Query parameters: {}
2025-02-22 16:34:22,677 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:34:22,677 - INFO - Query parameters: {}
2025-02-22 16:34:22,678 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:34:22,678 - INFO - Query parameters: {}
2025-02-22 16:34:22,716 - INFO - Response status: 500
2025-02-22 16:34:22,718 - INFO - Response status: 500
2025-02-22 16:34:22,718 - INFO - Response status: 500
2025-02-22 16:34:22,721 - INFO - Response status: 500
2025-02-22 16:34:22,727 - INFO - Response status: 500
2025-02-22 16:39:02,216 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:39:02,226 - INFO - Query parameters: {}
2025-02-22 16:39:02,227 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:39:02,227 - INFO - Query parameters: {}
2025-02-22 16:39:02,228 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:39:02,228 - INFO - Query parameters: {}
2025-02-22 16:39:02,229 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:39:02,230 - INFO - Query parameters: {}
2025-02-22 16:39:02,326 - INFO - Response status: 200
2025-02-22 16:39:02,375 - INFO - Response status: 200
2025-02-22 16:39:02,377 - INFO - Response status: 404
2025-02-22 16:39:02,452 - INFO - Response status: 200
2025-02-22 16:39:02,459 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:39:02,459 - INFO - Query parameters: {}
2025-02-22 16:39:02,559 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:39:02,559 - INFO - Query parameters: {}
2025-02-22 16:39:02,589 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:39:02,589 - INFO - Query parameters: {}
2025-02-22 16:39:02,591 - INFO - Response status: 200
2025-02-22 16:39:02,604 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:39:02,605 - INFO - Query parameters: {}
2025-02-22 16:39:02,655 - INFO - Response status: 200
2025-02-22 16:39:02,685 - INFO - Response status: 200
2025-02-22 16:39:02,687 - INFO - Response status: 404
2025-02-22 16:39:04,292 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:39:04,292 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:39:04,292 - INFO - === Protocol Details Request ===
2025-02-22 16:39:04,293 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:39:04,293 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:39:04,293 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:39:04,293 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:39:04,293 - INFO - === Protocol Details Request ===
2025-02-22 16:39:04,293 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:39:04,293 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:39:04,293 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:39:04,293 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:39:04,294 - INFO - === Protocol Details Request ===
2025-02-22 16:39:04,294 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:39:04,295 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:39:04,295 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ecdc410>
2025-02-22 16:39:04,295 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ecde310>
2025-02-22 16:39:04,295 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:39:04,295 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:39:04,296 - INFO - Response status: 200
2025-02-22 16:39:04,579 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:39:04,579 - INFO - Query parameters: {}
2025-02-22 16:39:04,591 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:39:04,622 - INFO - Query parameters: {}
2025-02-22 16:39:04,623 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:39:04,623 - INFO - Query parameters: {}
2025-02-22 16:39:04,624 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:39:04,624 - INFO - Query parameters: {}
2025-02-22 16:39:04,624 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:39:04,624 - INFO - Query parameters: {}
2025-02-22 16:39:04,659 - INFO - Response status: 500
2025-02-22 16:39:04,661 - INFO - Response status: 500
2025-02-22 16:39:04,667 - INFO - Response status: 500
2025-02-22 16:39:04,673 - INFO - Response status: 500
2025-02-22 16:39:04,675 - INFO - Response status: 500
2025-02-22 16:45:20,419 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:45:20,419 - INFO - Query parameters: {}
2025-02-22 16:45:20,420 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:45:20,420 - INFO - Query parameters: {}
2025-02-22 16:45:20,420 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:45:20,420 - INFO - Query parameters: {}
2025-02-22 16:45:20,421 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:45:20,421 - INFO - Query parameters: {}
2025-02-22 16:45:20,433 - INFO - Response status: 200
2025-02-22 16:45:20,440 - INFO - Response status: 200
2025-02-22 16:45:20,441 - INFO - Response status: 404
2025-02-22 16:45:20,471 - INFO - Response status: 200
2025-02-22 16:45:20,477 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:45:20,478 - INFO - Query parameters: {}
2025-02-22 16:45:20,503 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:45:20,504 - INFO - Query parameters: {}
2025-02-22 16:45:20,509 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:45:20,509 - INFO - Query parameters: {}
2025-02-22 16:45:20,510 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:45:20,510 - INFO - Query parameters: {}
2025-02-22 16:45:20,511 - INFO - Response status: 200
2025-02-22 16:45:20,515 - INFO - Response status: 200
2025-02-22 16:45:20,520 - INFO - Response status: 200
2025-02-22 16:45:20,525 - INFO - Response status: 404
2025-02-22 16:45:22,190 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:45:22,190 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:45:22,191 - INFO - === Protocol Details Request ===
2025-02-22 16:45:22,191 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:45:22,191 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:45:22,192 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:45:22,192 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:45:22,192 - INFO - === Protocol Details Request ===
2025-02-22 16:45:22,192 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:45:22,192 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:45:22,192 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:45:22,192 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:45:22,192 - INFO - === Protocol Details Request ===
2025-02-22 16:45:22,192 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:45:22,192 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:45:22,195 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ec55450>
2025-02-22 16:45:22,195 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ec88910>
2025-02-22 16:45:22,195 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:45:22,195 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:45:22,196 - INFO - Response status: 200
2025-02-22 16:45:22,395 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:45:22,396 - INFO - Query parameters: {}
2025-02-22 16:45:22,431 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:45:22,432 - INFO - Query parameters: {}
2025-02-22 16:45:22,432 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:45:22,432 - INFO - Query parameters: {}
2025-02-22 16:45:22,433 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:45:22,433 - INFO - Query parameters: {}
2025-02-22 16:45:22,434 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:45:22,436 - INFO - Query parameters: {}
2025-02-22 16:45:22,874 - INFO - Response status: 500
2025-02-22 16:45:22,875 - INFO - Response status: 500
2025-02-22 16:45:22,875 - INFO - Response status: 500
2025-02-22 16:45:22,876 - INFO - Response status: 500
2025-02-22 16:45:22,881 - INFO - Response status: 500
2025-02-22 16:47:01,231 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:47:01,232 - INFO - Query parameters: {}
2025-02-22 16:47:01,232 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:47:01,232 - INFO - Query parameters: {}
2025-02-22 16:47:01,232 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:47:01,232 - INFO - Query parameters: {}
2025-02-22 16:47:01,232 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:47:01,233 - INFO - Query parameters: {}
2025-02-22 16:47:01,242 - INFO - Response status: 200
2025-02-22 16:47:01,248 - INFO - Response status: 200
2025-02-22 16:47:01,251 - INFO - Response status: 200
2025-02-22 16:47:01,255 - INFO - Response status: 404
2025-02-22 16:47:01,287 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:47:01,288 - INFO - Query parameters: {}
2025-02-22 16:47:01,290 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:47:01,291 - INFO - Query parameters: {}
2025-02-22 16:47:01,297 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:47:01,301 - INFO - Query parameters: {}
2025-02-22 16:47:01,308 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:47:01,309 - INFO - Query parameters: {}
2025-02-22 16:47:01,316 - INFO - Response status: 200
2025-02-22 16:47:01,338 - INFO - Response status: 200
2025-02-22 16:47:01,346 - INFO - Response status: 200
2025-02-22 16:47:01,376 - INFO - Response status: 404
2025-02-22 16:47:03,517 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:47:03,517 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:47:03,518 - INFO - === Protocol Details Request ===
2025-02-22 16:47:03,518 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:47:03,518 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:47:03,518 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:47:03,518 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:47:03,518 - INFO - === Protocol Details Request ===
2025-02-22 16:47:03,518 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:47:03,518 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:47:03,518 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:47:03,518 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:47:03,519 - INFO - === Protocol Details Request ===
2025-02-22 16:47:03,519 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:47:03,519 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:47:03,519 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ecc7e10>
2025-02-22 16:47:03,519 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ecc47d0>
2025-02-22 16:47:03,519 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:47:03,519 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:47:03,520 - INFO - Response status: 200
2025-02-22 16:47:03,735 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:47:03,735 - INFO - Query parameters: {}
2025-02-22 16:47:03,787 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:47:03,787 - INFO - Query parameters: {}
2025-02-22 16:47:03,787 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:47:03,787 - INFO - Query parameters: {}
2025-02-22 16:47:03,787 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:47:03,787 - INFO - Query parameters: {}
2025-02-22 16:47:03,788 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:47:03,788 - INFO - Query parameters: {}
2025-02-22 16:47:03,840 - INFO - Response status: 500
2025-02-22 16:47:03,841 - INFO - Response status: 500
2025-02-22 16:47:03,841 - INFO - Response status: 500
2025-02-22 16:47:03,844 - INFO - Response status: 500
2025-02-22 16:47:03,845 - INFO - Response status: 500
2025-02-22 16:49:35,149 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:49:35,150 - INFO - Query parameters: {}
2025-02-22 16:49:35,151 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:49:35,151 - INFO - Query parameters: {}
2025-02-22 16:49:35,151 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:49:35,151 - INFO - Query parameters: {}
2025-02-22 16:49:35,151 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:49:35,151 - INFO - Query parameters: {}
2025-02-22 16:49:35,435 - INFO - Response status: 200
2025-02-22 16:49:35,548 - INFO - Response status: 200
2025-02-22 16:49:35,552 - INFO - Response status: 404
2025-02-22 16:49:35,627 - INFO - Response status: 200
2025-02-22 16:49:35,631 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:49:35,632 - INFO - Query parameters: {}
2025-02-22 16:49:35,690 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:49:35,690 - INFO - Query parameters: {}
2025-02-22 16:49:35,703 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:49:35,703 - INFO - Query parameters: {}
2025-02-22 16:49:35,708 - INFO - Response status: 200
2025-02-22 16:49:35,711 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:49:35,711 - INFO - Query parameters: {}
2025-02-22 16:49:35,716 - INFO - Response status: 200
2025-02-22 16:49:35,836 - INFO - Response status: 200
2025-02-22 16:49:35,862 - INFO - Response status: 404
2025-02-22 16:49:36,587 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:49:36,588 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:49:36,599 - INFO - === Protocol Details Request ===
2025-02-22 16:49:36,599 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:49:36,767 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:49:36,776 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:49:36,806 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:49:36,823 - INFO - === Protocol Details Request ===
2025-02-22 16:49:36,824 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:49:36,835 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:49:36,835 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:49:36,835 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:49:36,847 - INFO - === Protocol Details Request ===
2025-02-22 16:49:36,848 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:49:36,852 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:49:36,853 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ecbe110>
2025-02-22 16:49:36,853 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ecbde50>
2025-02-22 16:49:36,857 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:49:36,857 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:49:36,862 - INFO - Response status: 200
2025-02-22 16:49:37,308 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:49:37,308 - INFO - Query parameters: {}
2025-02-22 16:49:37,325 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:49:37,325 - INFO - Query parameters: {}
2025-02-22 16:49:37,325 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:49:37,325 - INFO - Query parameters: {}
2025-02-22 16:49:37,325 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:49:37,325 - INFO - Query parameters: {}
2025-02-22 16:49:37,326 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:49:37,326 - INFO - Query parameters: {}
2025-02-22 16:49:37,386 - INFO - Response status: 500
2025-02-22 16:49:37,394 - INFO - Response status: 500
2025-02-22 16:49:37,400 - INFO - Response status: 500
2025-02-22 16:49:37,411 - INFO - Response status: 500
2025-02-22 16:49:37,421 - INFO - Response status: 500
2025-02-22 16:52:43,336 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:52:43,339 - INFO - Query parameters: {}
2025-02-22 16:52:43,340 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:52:43,340 - INFO - Query parameters: {}
2025-02-22 16:52:43,341 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:52:43,341 - INFO - Query parameters: {}
2025-02-22 16:52:43,341 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:52:43,341 - INFO - Query parameters: {}
2025-02-22 16:52:43,381 - INFO - Response status: 200
2025-02-22 16:52:43,478 - INFO - Response status: 200
2025-02-22 16:52:43,490 - INFO - Response status: 404
2025-02-22 16:52:43,518 - INFO - Response status: 200
2025-02-22 16:52:43,541 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:52:43,550 - INFO - Query parameters: {}
2025-02-22 16:52:43,550 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:52:43,550 - INFO - Query parameters: {}
2025-02-22 16:52:43,556 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:52:43,556 - INFO - Query parameters: {}
2025-02-22 16:52:43,556 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:52:43,556 - INFO - Query parameters: {}
2025-02-22 16:52:43,558 - INFO - Response status: 200
2025-02-22 16:52:43,566 - INFO - Response status: 200
2025-02-22 16:52:43,566 - INFO - Response status: 404
2025-02-22 16:52:43,567 - INFO - Response status: 200
2025-02-22 16:52:45,736 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:52:45,736 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:52:45,737 - INFO - === Protocol Details Request ===
2025-02-22 16:52:45,737 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:52:45,737 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:52:45,737 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:52:45,737 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:52:45,738 - INFO - === Protocol Details Request ===
2025-02-22 16:52:45,738 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:52:45,738 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:52:45,738 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:52:45,738 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:52:45,738 - INFO - === Protocol Details Request ===
2025-02-22 16:52:45,738 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:52:45,739 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:52:45,739 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ec45b10>
2025-02-22 16:52:45,739 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ec9f410>
2025-02-22 16:52:45,739 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:52:45,739 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:52:45,740 - INFO - Response status: 200
2025-02-22 16:52:46,032 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:52:46,032 - INFO - Query parameters: {}
2025-02-22 16:52:46,036 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:52:46,036 - INFO - Query parameters: {}
2025-02-22 16:52:46,040 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:52:46,040 - INFO - Query parameters: {}
2025-02-22 16:52:46,040 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:52:46,040 - INFO - Query parameters: {}
2025-02-22 16:52:46,041 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:52:46,041 - INFO - Query parameters: {}
2025-02-22 16:52:46,055 - INFO - Response status: 500
2025-02-22 16:52:46,056 - INFO - Response status: 500
2025-02-22 16:52:46,057 - INFO - Response status: 500
2025-02-22 16:52:46,101 - INFO - Response status: 500
2025-02-22 16:52:46,106 - INFO - Response status: 500
2025-02-22 16:56:00,974 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:56:00,975 - INFO - Query parameters: {}
2025-02-22 16:56:00,976 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:56:00,976 - INFO - Query parameters: {}
2025-02-22 16:56:00,977 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:56:00,977 - INFO - Query parameters: {}
2025-02-22 16:56:00,977 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:56:00,977 - INFO - Query parameters: {}
2025-02-22 16:56:01,026 - INFO - Response status: 200
2025-02-22 16:56:01,031 - INFO - Response status: 200
2025-02-22 16:56:01,048 - INFO - Response status: 404
2025-02-22 16:56:01,056 - INFO - Response status: 200
2025-02-22 16:56:01,105 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:56:01,106 - INFO - Query parameters: {}
2025-02-22 16:56:01,109 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:56:01,110 - INFO - Query parameters: {}
2025-02-22 16:56:01,127 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:56:01,130 - INFO - Query parameters: {}
2025-02-22 16:56:01,183 - INFO - Response status: 200
2025-02-22 16:56:01,185 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:56:01,185 - INFO - Query parameters: {}
2025-02-22 16:56:01,205 - INFO - Response status: 200
2025-02-22 16:56:01,210 - INFO - Response status: 404
2025-02-22 16:56:01,221 - INFO - Response status: 200
2025-02-22 16:56:02,839 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:56:02,839 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:56:02,840 - INFO - === Protocol Details Request ===
2025-02-22 16:56:02,840 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:56:02,840 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:56:02,840 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:56:02,840 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:56:02,840 - INFO - === Protocol Details Request ===
2025-02-22 16:56:02,840 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:56:02,840 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:56:02,840 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:56:02,841 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:56:02,841 - INFO - === Protocol Details Request ===
2025-02-22 16:56:02,841 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:56:02,841 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:56:02,841 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ec61b90>
2025-02-22 16:56:02,841 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ec639d0>
2025-02-22 16:56:02,842 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:56:02,842 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:56:02,844 - INFO - Response status: 200
2025-02-22 16:56:03,157 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:56:03,158 - INFO - Query parameters: {}
2025-02-22 16:56:03,171 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:56:03,171 - INFO - Query parameters: {}
2025-02-22 16:56:03,171 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:56:03,171 - INFO - Query parameters: {}
2025-02-22 16:56:03,175 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:56:03,175 - INFO - Query parameters: {}
2025-02-22 16:56:03,175 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:56:03,175 - INFO - Query parameters: {}
2025-02-22 16:56:03,228 - INFO - Response status: 500
2025-02-22 16:56:03,230 - INFO - Response status: 500
2025-02-22 16:56:03,232 - INFO - Response status: 500
2025-02-22 16:56:03,234 - INFO - Response status: 500
2025-02-22 16:56:03,238 - INFO - Response status: 500
2025-02-22 16:59:07,155 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:59:07,182 - INFO - Query parameters: {}
2025-02-22 16:59:07,182 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:59:07,182 - INFO - Query parameters: {}
2025-02-22 16:59:07,182 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:59:07,182 - INFO - Query parameters: {}
2025-02-22 16:59:07,182 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:59:07,183 - INFO - Query parameters: {}
2025-02-22 16:59:07,211 - INFO - Response status: 200
2025-02-22 16:59:07,262 - INFO - Response status: 200
2025-02-22 16:59:07,283 - INFO - Response status: 404
2025-02-22 16:59:07,289 - INFO - Response status: 200
2025-02-22 16:59:07,297 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 16:59:07,298 - INFO - Query parameters: {}
2025-02-22 16:59:07,309 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 16:59:07,310 - INFO - Query parameters: {}
2025-02-22 16:59:07,323 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 16:59:07,323 - INFO - Query parameters: {}
2025-02-22 16:59:07,324 - INFO - Response status: 200
2025-02-22 16:59:07,332 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 16:59:07,335 - INFO - Query parameters: {}
2025-02-22 16:59:07,354 - INFO - Response status: 200
2025-02-22 16:59:07,368 - INFO - Response status: 200
2025-02-22 16:59:07,372 - INFO - Response status: 404
2025-02-22 16:59:12,017 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-22 16:59:12,017 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-22 16:59:12,018 - INFO - === Protocol Details Request ===
2025-02-22 16:59:12,018 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-22 16:59:12,018 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:59:12,018 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:59:12,018 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:59:12,018 - INFO - === Protocol Details Request ===
2025-02-22 16:59:12,018 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:59:12,018 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-22 16:59:12,018 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:59:12,018 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:59:12,019 - INFO - === Protocol Details Request ===
2025-02-22 16:59:12,019 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-22 16:59:12,019 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-22 16:59:12,019 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ecf3d50>
2025-02-22 16:59:12,019 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ecf3f90>
2025-02-22 16:59:12,020 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:59:12,020 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-22 16:59:12,021 - INFO - Response status: 200
2025-02-22 16:59:12,192 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-22 16:59:12,193 - INFO - Query parameters: {}
2025-02-22 16:59:12,199 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-22 16:59:12,199 - INFO - Query parameters: {}
2025-02-22 16:59:12,199 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-22 16:59:12,200 - INFO - Query parameters: {}
2025-02-22 16:59:12,206 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-22 16:59:12,207 - INFO - Query parameters: {}
2025-02-22 16:59:12,207 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-22 16:59:12,207 - INFO - Query parameters: {}
2025-02-22 16:59:12,261 - INFO - Response status: 500
2025-02-22 16:59:12,268 - INFO - Response status: 500
2025-02-22 16:59:12,269 - INFO - Response status: 500
2025-02-22 16:59:12,271 - INFO - Response status: 500
2025-02-22 16:59:12,272 - INFO - Response status: 500
2025-02-22 17:00:57,174 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 17:00:57,176 - INFO - Query parameters: {}
2025-02-22 17:00:57,184 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 17:00:57,184 - INFO - Query parameters: {}
2025-02-22 17:00:57,184 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 17:00:57,184 - INFO - Query parameters: {}
2025-02-22 17:00:57,185 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 17:00:57,185 - INFO - Query parameters: {}
2025-02-22 17:00:57,251 - INFO - Response status: 200
2025-02-22 17:00:57,264 - INFO - Response status: 200
2025-02-22 17:00:57,265 - INFO - Response status: 404
2025-02-22 17:00:57,266 - INFO - Response status: 200
2025-02-22 17:00:57,267 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 17:00:57,267 - INFO - Query parameters: {}
2025-02-22 17:00:57,289 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 17:00:57,290 - INFO - Query parameters: {}
2025-02-22 17:00:57,290 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 17:00:57,290 - INFO - Query parameters: {}
2025-02-22 17:00:57,290 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 17:00:57,290 - INFO - Query parameters: {}
2025-02-22 17:00:57,291 - INFO - Response status: 200
2025-02-22 17:00:57,318 - INFO - Response status: 200
2025-02-22 17:00:57,319 - INFO - Response status: 404
2025-02-22 17:00:57,319 - INFO - Response status: 200
2025-02-22 17:20:53,031 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 17:20:53,033 - INFO - Query parameters: {}
2025-02-22 17:20:53,033 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 17:20:53,033 - INFO - Query parameters: {}
2025-02-22 17:20:53,033 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 17:20:53,034 - INFO - Query parameters: {}
2025-02-22 17:20:53,034 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 17:20:53,034 - INFO - Query parameters: {}
2025-02-22 17:20:53,049 - INFO - Response status: 200
2025-02-22 17:20:53,053 - INFO - Response status: 200
2025-02-22 17:20:53,053 - INFO - Response status: 404
2025-02-22 17:20:53,054 - INFO - Response status: 200
2025-02-22 17:20:53,057 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-22 17:20:53,058 - INFO - Query parameters: {}
2025-02-22 17:20:53,060 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-22 17:20:53,061 - INFO - Query parameters: {}
2025-02-22 17:20:53,077 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-22 17:20:53,077 - INFO - Query parameters: {}
2025-02-22 17:20:53,078 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-22 17:20:53,079 - INFO - Query parameters: {}
2025-02-22 17:20:53,081 - INFO - Response status: 200
2025-02-22 17:20:53,085 - INFO - Response status: 200
2025-02-22 17:20:53,087 - INFO - Response status: 200
2025-02-22 17:20:53,089 - INFO - Response status: 404
2025-02-23 12:33:59,978 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 12:33:59,982 - INFO - Query parameters: {}
2025-02-23 12:33:59,983 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 12:33:59,983 - INFO - Query parameters: {}
2025-02-23 12:33:59,984 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 12:33:59,984 - INFO - Query parameters: {}
2025-02-23 12:33:59,984 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 12:33:59,984 - INFO - Query parameters: {}
2025-02-23 12:34:00,011 - INFO - Response status: 200
2025-02-23 12:34:00,057 - INFO - Response status: 200
2025-02-23 12:34:00,060 - INFO - Response status: 404
2025-02-23 12:34:00,061 - INFO - Response status: 200
2025-02-23 12:34:00,063 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 12:34:00,063 - INFO - Query parameters: {}
2025-02-23 12:34:00,070 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 12:34:00,070 - INFO - Query parameters: {}
2025-02-23 12:34:00,072 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 12:34:00,073 - INFO - Query parameters: {}
2025-02-23 12:34:00,073 - INFO - Response status: 200
2025-02-23 12:34:00,077 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 12:34:00,078 - INFO - Query parameters: {}
2025-02-23 12:34:00,082 - INFO - Response status: 200
2025-02-23 12:34:00,083 - INFO - Response status: 404
2025-02-23 12:34:00,088 - INFO - Response status: 200
2025-02-23 12:36:21,318 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 12:36:21,319 - INFO - Query parameters: {}
2025-02-23 12:36:21,321 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 12:36:21,321 - INFO - Query parameters: {}
2025-02-23 12:36:21,322 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 12:36:21,322 - INFO - Query parameters: {}
2025-02-23 12:36:21,326 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 12:36:21,326 - INFO - Query parameters: {}
2025-02-23 12:36:21,334 - INFO - Response status: 200
2025-02-23 12:36:21,336 - INFO - Response status: 200
2025-02-23 12:36:21,336 - INFO - Response status: 404
2025-02-23 12:36:21,341 - INFO - Response status: 200
2025-02-23 12:36:21,345 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 12:36:21,345 - INFO - Query parameters: {}
2025-02-23 12:36:21,346 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 12:36:21,346 - INFO - Query parameters: {}
2025-02-23 12:36:21,346 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 12:36:21,346 - INFO - Query parameters: {}
2025-02-23 12:36:21,352 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 12:36:21,354 - INFO - Query parameters: {}
2025-02-23 12:36:21,356 - INFO - Response status: 200
2025-02-23 12:36:21,358 - INFO - Response status: 200
2025-02-23 12:36:21,359 - INFO - Response status: 200
2025-02-23 12:36:21,360 - INFO - Response status: 404
2025-02-23 15:46:05,970 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 15:46:05,974 - INFO - Query parameters: {}
2025-02-23 15:46:05,975 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 15:46:05,975 - INFO - Query parameters: {}
2025-02-23 15:46:05,975 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 15:46:05,975 - INFO - Query parameters: {}
2025-02-23 15:46:05,975 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 15:46:05,975 - INFO - Query parameters: {}
2025-02-23 15:46:05,997 - INFO - Response status: 200
2025-02-23 15:46:06,000 - INFO - Response status: 200
2025-02-23 15:46:06,000 - INFO - Response status: 404
2025-02-23 15:46:06,001 - INFO - Response status: 200
2025-02-23 15:46:06,004 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 15:46:06,004 - INFO - Query parameters: {}
2025-02-23 15:46:06,004 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 15:46:06,004 - INFO - Query parameters: {}
2025-02-23 15:46:06,011 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 15:46:06,011 - INFO - Query parameters: {}
2025-02-23 15:46:06,011 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 15:46:06,011 - INFO - Query parameters: {}
2025-02-23 15:46:06,013 - INFO - Response status: 200
2025-02-23 15:46:06,015 - INFO - Response status: 200
2025-02-23 15:46:06,017 - INFO - Response status: 200
2025-02-23 15:46:06,017 - INFO - Response status: 404
2025-02-23 15:46:09,331 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-23 15:46:09,332 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-23 15:46:09,333 - INFO - === Protocol Details Request ===
2025-02-23 15:46:09,333 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-23 15:46:09,333 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-23 15:46:09,333 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-23 15:46:09,334 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-23 15:46:09,334 - INFO - === Protocol Details Request ===
2025-02-23 15:46:09,334 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-23 15:46:09,335 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-23 15:46:09,335 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-23 15:46:09,335 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-23 15:46:09,336 - INFO - === Protocol Details Request ===
2025-02-23 15:46:09,336 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-23 15:46:09,336 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-23 15:46:09,336 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ec63490>
2025-02-23 15:46:09,336 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ec60950>
2025-02-23 15:46:09,337 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-23 15:46:09,337 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-23 15:46:09,338 - INFO - Response status: 200
2025-02-23 15:46:27,945 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 15:46:27,951 - INFO - Query parameters: {}
2025-02-23 15:46:27,953 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 15:46:27,953 - INFO - Query parameters: {}
2025-02-23 15:46:27,954 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 15:46:27,954 - INFO - Query parameters: {}
2025-02-23 15:46:27,954 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 15:46:27,954 - INFO - Query parameters: {}
2025-02-23 15:46:27,974 - INFO - Response status: 200
2025-02-23 15:46:27,976 - INFO - Response status: 200
2025-02-23 15:46:27,989 - INFO - Response status: 404
2025-02-23 15:46:27,990 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 15:46:27,995 - INFO - Query parameters: {}
2025-02-23 15:46:27,996 - INFO - Response status: 200
2025-02-23 15:46:28,000 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 15:46:28,000 - INFO - Query parameters: {}
2025-02-23 15:46:28,000 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 15:46:28,000 - INFO - Query parameters: {}
2025-02-23 15:46:28,004 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 15:46:28,006 - INFO - Query parameters: {}
2025-02-23 15:46:28,009 - INFO - Response status: 200
2025-02-23 15:46:28,012 - INFO - Response status: 200
2025-02-23 15:46:28,015 - INFO - Response status: 404
2025-02-23 15:46:28,021 - INFO - Response status: 200
2025-02-23 16:06:57,122 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:06:57,125 - INFO - Query parameters: {}
2025-02-23 16:06:57,126 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:06:57,126 - INFO - Query parameters: {}
2025-02-23 16:06:57,126 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:06:57,126 - INFO - Query parameters: {}
2025-02-23 16:06:57,127 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:06:57,127 - INFO - Query parameters: {}
2025-02-23 16:06:57,146 - INFO - Response status: 200
2025-02-23 16:06:57,148 - INFO - Response status: 200
2025-02-23 16:06:57,149 - INFO - Response status: 404
2025-02-23 16:06:57,149 - INFO - Response status: 200
2025-02-23 16:06:57,151 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:06:57,151 - INFO - Query parameters: {}
2025-02-23 16:06:57,151 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:06:57,151 - INFO - Query parameters: {}
2025-02-23 16:06:57,156 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:06:57,157 - INFO - Query parameters: {}
2025-02-23 16:06:57,157 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:06:57,157 - INFO - Query parameters: {}
2025-02-23 16:06:57,159 - INFO - Response status: 200
2025-02-23 16:06:57,160 - INFO - Response status: 200
2025-02-23 16:06:57,161 - INFO - Response status: 404
2025-02-23 16:06:57,161 - INFO - Response status: 200
2025-02-23 16:07:14,241 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:07:14,242 - INFO - Query parameters: {}
2025-02-23 16:07:14,242 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:07:14,242 - INFO - Query parameters: {}
2025-02-23 16:07:14,243 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:07:14,243 - INFO - Query parameters: {}
2025-02-23 16:07:14,243 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:07:14,243 - INFO - Query parameters: {}
2025-02-23 16:07:14,252 - INFO - Response status: 200
2025-02-23 16:07:14,254 - INFO - Response status: 200
2025-02-23 16:07:14,259 - INFO - Response status: 200
2025-02-23 16:07:14,266 - INFO - Response status: 404
2025-02-23 16:07:14,270 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:07:14,270 - INFO - Query parameters: {}
2025-02-23 16:07:14,280 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:07:14,280 - INFO - Query parameters: {}
2025-02-23 16:07:14,281 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:07:14,281 - INFO - Query parameters: {}
2025-02-23 16:07:14,283 - INFO - Response status: 200
2025-02-23 16:07:14,284 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:07:14,284 - INFO - Query parameters: {}
2025-02-23 16:07:14,290 - INFO - Response status: 200
2025-02-23 16:07:14,291 - INFO - Response status: 200
2025-02-23 16:07:14,292 - INFO - Response status: 404
2025-02-23 16:07:56,487 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:07:56,489 - INFO - Query parameters: {}
2025-02-23 16:07:56,489 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:07:56,489 - INFO - Query parameters: {}
2025-02-23 16:07:56,489 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:07:56,490 - INFO - Query parameters: {}
2025-02-23 16:07:56,491 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:07:56,491 - INFO - Query parameters: {}
2025-02-23 16:07:56,514 - INFO - Response status: 200
2025-02-23 16:07:56,517 - INFO - Response status: 200
2025-02-23 16:07:56,517 - INFO - Response status: 404
2025-02-23 16:07:56,519 - INFO - Response status: 200
2025-02-23 16:07:56,521 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:07:56,521 - INFO - Query parameters: {}
2025-02-23 16:07:56,522 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:07:56,522 - INFO - Query parameters: {}
2025-02-23 16:07:56,532 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:07:56,532 - INFO - Query parameters: {}
2025-02-23 16:07:56,532 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:07:56,532 - INFO - Query parameters: {}
2025-02-23 16:07:56,534 - INFO - Response status: 200
2025-02-23 16:07:56,537 - INFO - Response status: 200
2025-02-23 16:07:56,539 - INFO - Response status: 404
2025-02-23 16:07:56,539 - INFO - Response status: 200
2025-02-23 16:08:09,866 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:08:09,866 - INFO - Query parameters: {}
2025-02-23 16:08:09,866 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:08:09,866 - INFO - Query parameters: {}
2025-02-23 16:08:09,866 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:08:09,867 - INFO - Query parameters: {}
2025-02-23 16:08:09,867 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:08:09,867 - INFO - Query parameters: {}
2025-02-23 16:08:09,872 - INFO - Response status: 200
2025-02-23 16:08:09,874 - INFO - Response status: 200
2025-02-23 16:08:09,874 - INFO - Response status: 404
2025-02-23 16:08:09,875 - INFO - Response status: 200
2025-02-23 16:08:09,877 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:08:09,877 - INFO - Query parameters: {}
2025-02-23 16:08:09,877 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:08:09,877 - INFO - Query parameters: {}
2025-02-23 16:08:09,881 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:08:09,881 - INFO - Query parameters: {}
2025-02-23 16:08:09,881 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:08:09,881 - INFO - Query parameters: {}
2025-02-23 16:08:09,882 - INFO - Response status: 200
2025-02-23 16:08:09,884 - INFO - Response status: 200
2025-02-23 16:08:09,884 - INFO - Response status: 200
2025-02-23 16:08:09,885 - INFO - Response status: 404
2025-02-23 16:08:11,870 - INFO - Request: GET http://localhost:8000/api/v1/protocols/details?protocol_path=praxis%2Fprotocol%2Fprotocols%2Fprance.py
2025-02-23 16:08:11,870 - INFO - Query parameters: {'protocol_path': 'praxis/protocol/protocols/prance.py'}
2025-02-23 16:08:11,871 - INFO - === Protocol Details Request ===
2025-02-23 16:08:11,871 - INFO - Raw protocol path: praxis/protocol/protocols/prance.py
2025-02-23 16:08:11,871 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-23 16:08:11,871 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-23 16:08:11,871 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-23 16:08:11,872 - INFO - === Protocol Details Request ===
2025-02-23 16:08:11,872 - INFO - Raw protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-23 16:08:11,872 - INFO - Project root: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis
2025-02-23 16:08:11,872 - INFO - Trying path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-23 16:08:11,872 - INFO - Found protocol at: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-23 16:08:11,873 - INFO - === Protocol Details Request ===
2025-02-23 16:08:11,873 - INFO - Protocol path: /Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py
2025-02-23 16:08:11,873 - INFO - Protocol module attributes: ['Any', 'Deck', 'Dict', 'Lid', 'LiquidHandler', 'List', 'Optional', 'Orchestrator', 'Parameter', 'Plate', 'PlateReader', 'Prance', 'Protocol', 'ProtocolConfiguration', 'ProtocolParameters', 'PumpArray', 'Resource', 'State', 'TipRack', 'TipSpot', 'Type', 'Union', 'Well', 'WorkcellAssets', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'asyncio', 'baseline_parameters', 'cast', 'dt', 'product', 'required_assets', 'timedelta']
2025-02-23 16:08:11,873 - INFO - Protocol module baseline_parameters: <praxis.protocol.parameter.ProtocolParameters object at 0x11ec8bb10>
2025-02-23 16:08:11,873 - INFO - Protocol module required_assets: <praxis.protocol.required_assets.WorkcellAssets object at 0x11ecb2b10>
2025-02-23 16:08:11,874 - INFO - Returning serialized details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-23 16:08:11,874 - INFO - Returning validated details: {'name': 'prance', 'path': '/Users/mar/MIT Dropbox/Marielle Russo/PLR_workspace/pylabpraxis/praxis/protocol/protocols/prance.py', 'description': '\nThis module is the PRANCE protocol. It is a complex protocol that requires a lot of setup and teardown.\nIt uses the liquid handler to move liquids around, pumps to pump bacteria, water, and bleach onto the robot and more.\n\nAttributes:\n\n\n', 'parameters': {'tips_staged': {'type': 'boolean', 'required': True, 'default': False, 'description': 'Whether tips have been staged on the deck', 'constraints': {}}, 'bacteria_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of bacteria IDs to use', 'constraints': {}}, 'phage_ids': {'type': 'enum', 'required': True, 'default': [], 'description': 'List of phage IDs to use', 'constraints': {}}, 'no_phage_control': {'type': 'number', 'required': True, 'default': 0, 'description': 'Number of no-phage control wells', 'constraints': {}}, 'cycle_time': {'type': 'number', 'required': True, 'default': 60, 'description': 'Time between cycles in minutes', 'constraints': {'min_value': 1}}, 'sampling_interval': {'type': 'number', 'required': True, 'default': 30, 'description': 'Time between samples in minutes', 'constraints': {'min_value': 1}}, 'mixing': {'type': 'boolean', 'required': True, 'default': True, 'description': 'Whether to mix samples', 'constraints': {}}, 'mixing_volume': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Volume to use for mixing in µL', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_speed': {'type': 'number', 'required': True, 'default': 100.0, 'description': 'Speed to use for mixing in µL/s', 'constraints': {'min_value': 10.0, 'max_value': 1000.0}}, 'mixing_cycles': {'type': 'number', 'required': True, 'default': 3, 'description': 'Number of mixing cycles', 'constraints': {'min_value': 1, 'max_value': 10}}, 'lagoon_flow_rate': {'type': 'number', 'required': True, 'default': 0.5, 'description': 'Flow rate for lagoon operations in mL/min', 'constraints': {'min_value': 0.1, 'max_value': 5.0}}, 'washer_volume': {'type': 'number', 'required': True, 'default': 1000.0, 'description': 'Volume to use for washing in µL', 'constraints': {'min_value': 100.0, 'max_value': 5000.0}}, 'basin_refill_frequency': {'type': 'number', 'required': True, 'default': 24, 'description': 'How often to refill the basin in hours', 'constraints': {'min_value': 1, 'max_value': 72}}, 'inducer_volume': {'type': 'number', 'required': True, 'default': 50.0, 'description': 'Volume of inducer to add in µL', 'constraints': {'min_value': 1.0, 'max_value': 1000.0}}}, 'assets': [{'name': 'pumps1', 'type': 'PumpArray', 'description': 'Fluidic pump 1', 'required': True}, {'name': 'pumps2', 'type': 'PumpArray', 'description': 'Fluidic pump 2', 'required': True}, {'name': 'tip_washer', 'type': 'Resource', 'description': 'Washer for tip cleaning', 'required': True}, {'name': 'sample_reservoir', 'type': 'Resource', 'description': 'Reservoir for samples', 'required': True}, {'name': 'holding', 'type': 'Plate', 'description': 'Plate for holding samples', 'required': True}, {'name': 'induced', 'type': 'Plate', 'description': 'Plate for induced samples', 'required': True}, {'name': 'lagoons', 'type': 'Plate', 'description': 'Plate for lagoon samples', 'required': True}, {'name': 'holding_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for holding operations', 'required': True}, {'name': 'induced_tip_rack', 'type': 'TipRack', 'description': 'Tip rack for induction operations', 'required': True}, {'name': 'lagoon_tip_rack_1', 'type': 'TipRack', 'description': 'First tip rack for lagoon operations', 'required': True}, {'name': 'plate_reader', 'type': 'PlateReader', 'description': 'Reader for plate measurements', 'required': True}], 'has_assets': True, 'has_parameters': True, 'requires_config': False}
2025-02-23 16:08:11,875 - INFO - Response status: 200
2025-02-23 16:08:12,020 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-23 16:08:12,020 - INFO - Query parameters: {}
2025-02-23 16:08:12,049 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-23 16:08:12,049 - INFO - Query parameters: {}
2025-02-23 16:08:12,049 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-23 16:08:12,049 - INFO - Query parameters: {}
2025-02-23 16:08:12,050 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-23 16:08:12,050 - INFO - Query parameters: {}
2025-02-23 16:08:12,050 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-23 16:08:12,050 - INFO - Query parameters: {}
2025-02-23 16:08:12,187 - INFO - Response status: 500
2025-02-23 16:08:12,188 - INFO - Response status: 500
2025-02-23 16:08:12,188 - INFO - Response status: 500
2025-02-23 16:08:12,188 - INFO - Response status: 500
2025-02-23 16:08:12,188 - INFO - Response status: 500
2025-02-23 16:10:58,002 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:10:58,002 - INFO - Query parameters: {}
2025-02-23 16:10:58,002 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:10:58,003 - INFO - Query parameters: {}
2025-02-23 16:10:58,003 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:10:58,003 - INFO - Query parameters: {}
2025-02-23 16:10:58,003 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:10:58,003 - INFO - Query parameters: {}
2025-02-23 16:10:58,003 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PumpArray
2025-02-23 16:10:58,003 - INFO - Query parameters: {}
2025-02-23 16:10:58,003 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Resource
2025-02-23 16:10:58,003 - INFO - Query parameters: {}
2025-02-23 16:10:58,020 - INFO - Response status: 200
2025-02-23 16:10:58,023 - INFO - Response status: 200
2025-02-23 16:10:58,024 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/Plate
2025-02-23 16:10:58,024 - INFO - Query parameters: {}
2025-02-23 16:10:58,024 - INFO - Response status: 200
2025-02-23 16:10:58,025 - INFO - Response status: 404
2025-02-23 16:10:58,028 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/TipRack
2025-02-23 16:10:58,028 - INFO - Query parameters: {}
2025-02-23 16:10:58,031 - INFO - Request: GET http://localhost:8000/api/v1/assets/available/PlateReader
2025-02-23 16:10:58,031 - INFO - Query parameters: {}
2025-02-23 16:10:58,037 - INFO - Response status: 500
2025-02-23 16:10:58,038 - INFO - Response status: 500
2025-02-23 16:10:58,039 - INFO - Response status: 500
2025-02-23 16:10:58,041 - INFO - Response status: 500
2025-02-23 16:10:58,041 - INFO - Response status: 500
2025-02-23 16:11:28,753 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:11:28,756 - INFO - Query parameters: {}
2025-02-23 16:11:28,772 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:11:28,772 - INFO - Query parameters: {}
2025-02-23 16:11:28,772 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:11:28,772 - INFO - Query parameters: {}
2025-02-23 16:11:28,773 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:11:28,773 - INFO - Query parameters: {}
2025-02-23 16:11:28,778 - INFO - Response status: 200
2025-02-23 16:11:28,782 - INFO - Response status: 200
2025-02-23 16:11:28,785 - INFO - Response status: 200
2025-02-23 16:11:28,787 - INFO - Response status: 404
2025-02-23 16:11:28,795 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:11:28,795 - INFO - Query parameters: {}
2025-02-23 16:11:28,800 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:11:28,800 - INFO - Query parameters: {}
2025-02-23 16:11:28,800 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:11:28,800 - INFO - Query parameters: {}
2025-02-23 16:11:28,801 - INFO - Response status: 200
2025-02-23 16:11:28,804 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:11:28,805 - INFO - Query parameters: {}
2025-02-23 16:11:28,807 - INFO - Response status: 200
2025-02-23 16:11:28,807 - INFO - Response status: 200
2025-02-23 16:11:28,809 - INFO - Response status: 404
2025-02-23 16:11:56,890 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:11:56,891 - INFO - Query parameters: {}
2025-02-23 16:11:56,892 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:11:56,892 - INFO - Query parameters: {}
2025-02-23 16:11:56,892 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:11:56,892 - INFO - Query parameters: {}
2025-02-23 16:11:56,892 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:11:56,892 - INFO - Query parameters: {}
2025-02-23 16:11:56,898 - INFO - Response status: 200
2025-02-23 16:11:56,901 - INFO - Response status: 200
2025-02-23 16:11:56,901 - INFO - Response status: 404
2025-02-23 16:11:56,903 - INFO - Response status: 200
2025-02-23 16:12:56,882 - INFO - Request: GET http://localhost:8000/api/v1/protocols/
2025-02-23 16:12:56,882 - INFO - Query parameters: {}
2025-02-23 16:12:56,882 - INFO - Request: GET http://localhost:8000/api/v1/protocols/running
2025-02-23 16:12:56,882 - INFO - Query parameters: {}
2025-02-23 16:12:56,882 - INFO - Request: GET http://localhost:8000/api/v1/protocols/deck_layouts
2025-02-23 16:12:56,882 - INFO - Query parameters: {}
2025-02-23 16:12:56,882 - INFO - Request: GET http://localhost:8000/api/v1/protocols/discover
2025-02-23 16:12:56,882 - INFO - Query parameters: {}
2025-02-23 16:12:56,886 - INFO - Response status: 200
2025-02-23 16:12:56,887 - INFO - Response status: 200
2025-02-23 16:12:56,887 - INFO - Response status: 404
2025-02-23 16:12:56,889 - INFO - Response status: 200
2025-02-23 16:14:14,682 - INFO - Starting application shutdown...
2025-02-23 16:14:14,712 - INFO - Successfully closed database connections
2025-02-23 16:14:16,141 - INFO - Starting application initialization...
2025-02-23 16:14:16,141 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-23 16:14:16,410 - INFO - Successfully initialized dependencies
2025-02-23 16:14:20,075 - INFO - Starting application shutdown...
2025-02-23 16:14:20,100 - INFO - Successfully closed database connections
2025-02-23 16:14:20,888 - INFO - Starting application initialization...
2025-02-23 16:14:20,888 - INFO - Default protocol directory: ./praxis/protocol/protocols
2025-02-23 16:14:21,092 - INFO - Successfully initialized dependencies
